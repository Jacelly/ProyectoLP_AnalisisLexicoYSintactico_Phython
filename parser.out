Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COUNT
    DOBLECOMILLA
    ENDSWITH
    EXTEND
    INDEX
    IS
    LOWER
    MAX
    MIN
    POP
    REMOVE
    REVERSE
    SORT
    SPLIT
    STARTSWITH
    UPPER

Grammar

Rule 0     S' -> declaracion
Rule 1     declaracion -> VARIABLE ASIGNACION expresion
Rule 2     declaracion -> VARIABLE ASIGNACION declaracion
Rule 3     declaracion -> expresion
Rule 4     declaracion -> VARIABLE
Rule 5     declaracion -> FLOTANTE
Rule 6     declaracion -> expr_funcion
Rule 7     declaracion -> lista
Rule 8     declaracion -> expr_def_funcion
Rule 9     declaracion -> expr_return
Rule 10    declaracion -> if
Rule 11    declaracion -> expr_print
Rule 12    declaracion -> append
Rule 13    declaracion -> len
Rule 14    declaracion -> input
Rule 15    expresion -> TRUE
Rule 16    expresion -> FALSE
Rule 17    expresion -> expresion MAS expresion
Rule 18    expresion -> expresion MENOS expresion
Rule 19    expresion -> expresion POR expresion
Rule 20    expresion -> expresion DIVIDIR expresion
Rule 21    expresion -> expresion POTENCIA expresion
Rule 22    expresion -> expresion MODULO expresion
Rule 23    expresion -> MENOS expresion
Rule 24    expresion -> APARENT expresion CPARENT
Rule 25    expresion -> LLAIZQ expresion LLADER
Rule 26    expresion -> CORIZQ expresion CORDER
Rule 27    expresion -> expresion MENOR expresion
Rule 28    expresion -> expresion MAYOR expresion
Rule 29    expresion -> expresion MENORIGUAL expresion
Rule 30    expresion -> expresion MAYORIGUAL expresion
Rule 31    expresion -> expresion DOBLEIGUAL expresion
Rule 32    expresion -> expresion DIFERENTE expresion
Rule 33    expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT
Rule 34    expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
Rule 35    expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
Rule 36    expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
Rule 37    expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
Rule 38    expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
Rule 39    expresion -> declaracion AND declaracion
Rule 40    expresion -> declaracion OR declaracion
Rule 41    expresion -> NOT declaracion
Rule 42    expresion -> APARENT declaracion AND declaracion CPARENT
Rule 43    expresion -> APARENT declaracion OR declaracion CPARENT
Rule 44    expresion -> APARENT NOT declaracion CPARENT
Rule 45    expresion -> NUMERO
Rule 46    expresion -> CADENACOMILLADOBLE
Rule 47    expresion -> CADENACOMILLASIMPLE
Rule 48    expr_funcion -> VARIABLE APARENT params CPARENT
Rule 49    variable -> VARIABLE
Rule 50    variable -> NUMERO
Rule 51    variable -> FLOTANTE
Rule 52    variable -> expr_funcion
Rule 53    variable -> expresion
Rule 54    variable -> lista
Rule 55    params -> variable
Rule 56    params -> params COMA params
Rule 57    lista -> VARIABLE ASIGNACION CORIZQ CORDER
Rule 58    lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER
Rule 59    lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
Rule 60    expr_def_funcion -> DEF expr_funcion DOSPUNTOS
Rule 61    expr_return -> RETURN variable
Rule 62    codigo_interno -> declaracion
Rule 63    codigo_interno -> codigo_interno declaracion
Rule 64    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
Rule 65    if -> IF expresion DOSPUNTOS codigo_interno
Rule 66    if -> IF expresion DOSPUNTOS
Rule 67    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 68    if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 69    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 70    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 71    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
Rule 72    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
Rule 73    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 74    expr_print -> PRINT APARENT VARIABLE CPARENT
Rule 75    expr_print -> PRINT APARENT expresion CPARENT
Rule 76    expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT
Rule 77    expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT
Rule 78    expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT
Rule 79    expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT
Rule 80    expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT
Rule 81    expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT
Rule 82    expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT
Rule 83    expr_print -> PRINT APARENT expresion COMA expresion CPARENT
Rule 84    append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
Rule 85    append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
Rule 86    append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
Rule 87    upper -> VARIABLE APARENT CPARENT
Rule 88    lower -> VARIABLE APARENT CPARENT
Rule 89    in -> IN
Rule 90    len -> LEN APARENT VARIABLE CPARENT
Rule 91    input -> INPUT APARENT CADENACOMILLADOBLE CPARENT
Rule 92    input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT
Rule 93    join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
Rule 94    join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT

Terminals, with rules where they appear

AND                  : 39 42
APARENT              : 24 33 33 34 34 35 35 36 36 37 37 38 38 42 43 44 48 64 67 69 69 71 71 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 90 91 92 93 94
APPEND               : 84 85 86
ASIGNACION           : 1 2 57 58 59
CADENACOMILLADOBLE   : 46 91
CADENACOMILLASIMPLE  : 47 92 94
COMA                 : 56 79 80 81 82 83
CORDER               : 26 57 58 59
CORIZQ               : 26 57 58 59
COUNT                : 
CPARENT              : 24 33 33 34 34 35 35 36 36 37 37 38 38 42 43 44 48 64 67 69 69 71 71 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 90 91 92 93 94
DEF                  : 60
DIFERENTE            : 32 38
DIVIDIR              : 20
DOBLECOMILLA         : 
DOBLEIGUAL           : 31 37
DOSPUNTOS            : 60 64 65 66 67 67 68 68 69 69 69 70 70 70 71 71 72 72 73 73 73 73 73
ELIF                 : 69 70 71 72 73 73 73
ELSE                 : 67 68 69 70 73
ENDSWITH             : 
EXTEND               : 
FALSE                : 16
FLOTANTE             : 5 51 78 81 86
IF                   : 64 65 66 67 68 69 70 71 72 73
IN                   : 89
INDEX                : 
INPUT                : 91 92
IS                   : 
JOIN                 : 93 94
LEN                  : 90
LLADER               : 25
LLAIZQ               : 25
LOWER                : 
MAS                  : 17 76 77 78
MAX                  : 
MAYOR                : 28 34
MAYORIGUAL           : 30 36
MENOR                : 27 33
MENORIGUAL           : 29 35
MENOS                : 18 23
MIN                  : 
MODULO               : 22
NOT                  : 41 44
NUMERO               : 45 50 58 77 80 85
OR                   : 40 43
POP                  : 
POR                  : 19
POTENCIA             : 21
PRINT                : 74 75 76 77 78 79 80 81 82 83
PUNTO                : 84 85 86 93 94
REMOVE               : 
RETURN               : 61
REVERSE              : 
SIMPLECOMILLA        : 93 93 94 94
SORT                 : 
SPLIT                : 
STARTSWITH           : 
TRUE                 : 15
UPPER                : 
VARIABLE             : 1 2 4 48 49 57 58 59 59 74 76 82 84 84 85 86 87 88 90 93 93 94
error                : 

Nonterminals, with rules where they appear

append               : 12
codigo_interno       : 63 64 65 67 67 68 68 69 69 69 70 70 70 71 71 72 72 73 73 73 73 73
declaracion          : 2 39 39 40 40 41 42 42 43 43 44 62 63 0
expr_def_funcion     : 8
expr_funcion         : 6 52 60 79
expr_print           : 11
expr_return          : 9
expresion            : 1 3 17 17 18 18 19 19 20 20 21 21 22 22 23 24 25 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 53 64 65 66 67 68 69 69 70 70 71 71 72 72 73 73 73 73 75 76 77 78 79 80 81 82 83 83
if                   : 10
in                   : 
input                : 14
join                 : 
len                  : 13
lista                : 7 54
lower                : 
params               : 48 56 56
upper                : 
variable             : 55 61

Parsing method: LALR

state 0

    (0) S' -> . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 1
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 1

    (0) S' -> declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

    AND             shift and go to state 30
    OR              shift and go to state 31


state 2

    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

  ! shift/reduce conflict for APARENT resolved as shift
    ASIGNACION      shift and go to state 32
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    $end            reduce using rule 4 (declaracion -> VARIABLE .)
    MAS             reduce using rule 4 (declaracion -> VARIABLE .)
    MENOS           reduce using rule 4 (declaracion -> VARIABLE .)
    POR             reduce using rule 4 (declaracion -> VARIABLE .)
    DIVIDIR         reduce using rule 4 (declaracion -> VARIABLE .)
    POTENCIA        reduce using rule 4 (declaracion -> VARIABLE .)
    MODULO          reduce using rule 4 (declaracion -> VARIABLE .)
    MENOR           reduce using rule 4 (declaracion -> VARIABLE .)
    MAYOR           reduce using rule 4 (declaracion -> VARIABLE .)
    MENORIGUAL      reduce using rule 4 (declaracion -> VARIABLE .)
    MAYORIGUAL      reduce using rule 4 (declaracion -> VARIABLE .)
    DOBLEIGUAL      reduce using rule 4 (declaracion -> VARIABLE .)
    DIFERENTE       reduce using rule 4 (declaracion -> VARIABLE .)
    CPARENT         reduce using rule 4 (declaracion -> VARIABLE .)
    LLADER          reduce using rule 4 (declaracion -> VARIABLE .)
    CORDER          reduce using rule 4 (declaracion -> VARIABLE .)
    DOSPUNTOS       reduce using rule 4 (declaracion -> VARIABLE .)
    ELSE            reduce using rule 4 (declaracion -> VARIABLE .)
    ELIF            reduce using rule 4 (declaracion -> VARIABLE .)
    VARIABLE        reduce using rule 4 (declaracion -> VARIABLE .)
    FLOTANTE        reduce using rule 4 (declaracion -> VARIABLE .)
    TRUE            reduce using rule 4 (declaracion -> VARIABLE .)
    FALSE           reduce using rule 4 (declaracion -> VARIABLE .)
    LLAIZQ          reduce using rule 4 (declaracion -> VARIABLE .)
    CORIZQ          reduce using rule 4 (declaracion -> VARIABLE .)
    NOT             reduce using rule 4 (declaracion -> VARIABLE .)
    NUMERO          reduce using rule 4 (declaracion -> VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 4 (declaracion -> VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 4 (declaracion -> VARIABLE .)
    DEF             reduce using rule 4 (declaracion -> VARIABLE .)
    RETURN          reduce using rule 4 (declaracion -> VARIABLE .)
    IF              reduce using rule 4 (declaracion -> VARIABLE .)
    PRINT           reduce using rule 4 (declaracion -> VARIABLE .)
    LEN             reduce using rule 4 (declaracion -> VARIABLE .)
    INPUT           reduce using rule 4 (declaracion -> VARIABLE .)
    COMA            reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 33
    PUNTO           shift and go to state 34

  ! APARENT         [ reduce using rule 4 (declaracion -> VARIABLE .) ]


state 3

    (3) declaracion -> expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 3 (declaracion -> expresion .)
    CPARENT         reduce using rule 3 (declaracion -> expresion .)
    LLADER          reduce using rule 3 (declaracion -> expresion .)
    CORDER          reduce using rule 3 (declaracion -> expresion .)
    DOSPUNTOS       reduce using rule 3 (declaracion -> expresion .)
    ELSE            reduce using rule 3 (declaracion -> expresion .)
    ELIF            reduce using rule 3 (declaracion -> expresion .)
    VARIABLE        reduce using rule 3 (declaracion -> expresion .)
    FLOTANTE        reduce using rule 3 (declaracion -> expresion .)
    TRUE            reduce using rule 3 (declaracion -> expresion .)
    FALSE           reduce using rule 3 (declaracion -> expresion .)
    APARENT         reduce using rule 3 (declaracion -> expresion .)
    LLAIZQ          reduce using rule 3 (declaracion -> expresion .)
    CORIZQ          reduce using rule 3 (declaracion -> expresion .)
    NOT             reduce using rule 3 (declaracion -> expresion .)
    NUMERO          reduce using rule 3 (declaracion -> expresion .)
    CADENACOMILLADOBLE reduce using rule 3 (declaracion -> expresion .)
    CADENACOMILLASIMPLE reduce using rule 3 (declaracion -> expresion .)
    DEF             reduce using rule 3 (declaracion -> expresion .)
    RETURN          reduce using rule 3 (declaracion -> expresion .)
    IF              reduce using rule 3 (declaracion -> expresion .)
    PRINT           reduce using rule 3 (declaracion -> expresion .)
    LEN             reduce using rule 3 (declaracion -> expresion .)
    INPUT           reduce using rule 3 (declaracion -> expresion .)
    COMA            reduce using rule 3 (declaracion -> expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46

  ! MAS             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOS           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POR             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POTENCIA        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MODULO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 3 (declaracion -> expresion .) ]


state 4

    (5) declaracion -> FLOTANTE .

    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    $end            reduce using rule 5 (declaracion -> FLOTANTE .)
    MAS             reduce using rule 5 (declaracion -> FLOTANTE .)
    MENOS           reduce using rule 5 (declaracion -> FLOTANTE .)
    POR             reduce using rule 5 (declaracion -> FLOTANTE .)
    DIVIDIR         reduce using rule 5 (declaracion -> FLOTANTE .)
    POTENCIA        reduce using rule 5 (declaracion -> FLOTANTE .)
    MODULO          reduce using rule 5 (declaracion -> FLOTANTE .)
    MENOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MENORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DOBLEIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DIFERENTE       reduce using rule 5 (declaracion -> FLOTANTE .)
    CPARENT         reduce using rule 5 (declaracion -> FLOTANTE .)
    LLADER          reduce using rule 5 (declaracion -> FLOTANTE .)
    CORDER          reduce using rule 5 (declaracion -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 5 (declaracion -> FLOTANTE .)
    ELSE            reduce using rule 5 (declaracion -> FLOTANTE .)
    ELIF            reduce using rule 5 (declaracion -> FLOTANTE .)
    VARIABLE        reduce using rule 5 (declaracion -> FLOTANTE .)
    FLOTANTE        reduce using rule 5 (declaracion -> FLOTANTE .)
    TRUE            reduce using rule 5 (declaracion -> FLOTANTE .)
    FALSE           reduce using rule 5 (declaracion -> FLOTANTE .)
    APARENT         reduce using rule 5 (declaracion -> FLOTANTE .)
    LLAIZQ          reduce using rule 5 (declaracion -> FLOTANTE .)
    CORIZQ          reduce using rule 5 (declaracion -> FLOTANTE .)
    NOT             reduce using rule 5 (declaracion -> FLOTANTE .)
    NUMERO          reduce using rule 5 (declaracion -> FLOTANTE .)
    CADENACOMILLADOBLE reduce using rule 5 (declaracion -> FLOTANTE .)
    CADENACOMILLASIMPLE reduce using rule 5 (declaracion -> FLOTANTE .)
    DEF             reduce using rule 5 (declaracion -> FLOTANTE .)
    RETURN          reduce using rule 5 (declaracion -> FLOTANTE .)
    IF              reduce using rule 5 (declaracion -> FLOTANTE .)
    PRINT           reduce using rule 5 (declaracion -> FLOTANTE .)
    LEN             reduce using rule 5 (declaracion -> FLOTANTE .)
    INPUT           reduce using rule 5 (declaracion -> FLOTANTE .)
    COMA            reduce using rule 5 (declaracion -> FLOTANTE .)


state 5

    (6) declaracion -> expr_funcion .

    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)
    $end            reduce using rule 6 (declaracion -> expr_funcion .)
    MAS             reduce using rule 6 (declaracion -> expr_funcion .)
    MENOS           reduce using rule 6 (declaracion -> expr_funcion .)
    POR             reduce using rule 6 (declaracion -> expr_funcion .)
    DIVIDIR         reduce using rule 6 (declaracion -> expr_funcion .)
    POTENCIA        reduce using rule 6 (declaracion -> expr_funcion .)
    MODULO          reduce using rule 6 (declaracion -> expr_funcion .)
    MENOR           reduce using rule 6 (declaracion -> expr_funcion .)
    MAYOR           reduce using rule 6 (declaracion -> expr_funcion .)
    MENORIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    MAYORIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    DOBLEIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    DIFERENTE       reduce using rule 6 (declaracion -> expr_funcion .)
    CPARENT         reduce using rule 6 (declaracion -> expr_funcion .)
    LLADER          reduce using rule 6 (declaracion -> expr_funcion .)
    CORDER          reduce using rule 6 (declaracion -> expr_funcion .)
    DOSPUNTOS       reduce using rule 6 (declaracion -> expr_funcion .)
    ELSE            reduce using rule 6 (declaracion -> expr_funcion .)
    ELIF            reduce using rule 6 (declaracion -> expr_funcion .)
    VARIABLE        reduce using rule 6 (declaracion -> expr_funcion .)
    FLOTANTE        reduce using rule 6 (declaracion -> expr_funcion .)
    TRUE            reduce using rule 6 (declaracion -> expr_funcion .)
    FALSE           reduce using rule 6 (declaracion -> expr_funcion .)
    APARENT         reduce using rule 6 (declaracion -> expr_funcion .)
    LLAIZQ          reduce using rule 6 (declaracion -> expr_funcion .)
    CORIZQ          reduce using rule 6 (declaracion -> expr_funcion .)
    NOT             reduce using rule 6 (declaracion -> expr_funcion .)
    NUMERO          reduce using rule 6 (declaracion -> expr_funcion .)
    CADENACOMILLADOBLE reduce using rule 6 (declaracion -> expr_funcion .)
    CADENACOMILLASIMPLE reduce using rule 6 (declaracion -> expr_funcion .)
    DEF             reduce using rule 6 (declaracion -> expr_funcion .)
    RETURN          reduce using rule 6 (declaracion -> expr_funcion .)
    IF              reduce using rule 6 (declaracion -> expr_funcion .)
    PRINT           reduce using rule 6 (declaracion -> expr_funcion .)
    LEN             reduce using rule 6 (declaracion -> expr_funcion .)
    INPUT           reduce using rule 6 (declaracion -> expr_funcion .)
    COMA            reduce using rule 6 (declaracion -> expr_funcion .)


state 6

    (7) declaracion -> lista .

    AND             reduce using rule 7 (declaracion -> lista .)
    OR              reduce using rule 7 (declaracion -> lista .)
    $end            reduce using rule 7 (declaracion -> lista .)
    MAS             reduce using rule 7 (declaracion -> lista .)
    MENOS           reduce using rule 7 (declaracion -> lista .)
    POR             reduce using rule 7 (declaracion -> lista .)
    DIVIDIR         reduce using rule 7 (declaracion -> lista .)
    POTENCIA        reduce using rule 7 (declaracion -> lista .)
    MODULO          reduce using rule 7 (declaracion -> lista .)
    MENOR           reduce using rule 7 (declaracion -> lista .)
    MAYOR           reduce using rule 7 (declaracion -> lista .)
    MENORIGUAL      reduce using rule 7 (declaracion -> lista .)
    MAYORIGUAL      reduce using rule 7 (declaracion -> lista .)
    DOBLEIGUAL      reduce using rule 7 (declaracion -> lista .)
    DIFERENTE       reduce using rule 7 (declaracion -> lista .)
    CPARENT         reduce using rule 7 (declaracion -> lista .)
    LLADER          reduce using rule 7 (declaracion -> lista .)
    CORDER          reduce using rule 7 (declaracion -> lista .)
    DOSPUNTOS       reduce using rule 7 (declaracion -> lista .)
    ELSE            reduce using rule 7 (declaracion -> lista .)
    ELIF            reduce using rule 7 (declaracion -> lista .)
    VARIABLE        reduce using rule 7 (declaracion -> lista .)
    FLOTANTE        reduce using rule 7 (declaracion -> lista .)
    TRUE            reduce using rule 7 (declaracion -> lista .)
    FALSE           reduce using rule 7 (declaracion -> lista .)
    APARENT         reduce using rule 7 (declaracion -> lista .)
    LLAIZQ          reduce using rule 7 (declaracion -> lista .)
    CORIZQ          reduce using rule 7 (declaracion -> lista .)
    NOT             reduce using rule 7 (declaracion -> lista .)
    NUMERO          reduce using rule 7 (declaracion -> lista .)
    CADENACOMILLADOBLE reduce using rule 7 (declaracion -> lista .)
    CADENACOMILLASIMPLE reduce using rule 7 (declaracion -> lista .)
    DEF             reduce using rule 7 (declaracion -> lista .)
    RETURN          reduce using rule 7 (declaracion -> lista .)
    IF              reduce using rule 7 (declaracion -> lista .)
    PRINT           reduce using rule 7 (declaracion -> lista .)
    LEN             reduce using rule 7 (declaracion -> lista .)
    INPUT           reduce using rule 7 (declaracion -> lista .)
    COMA            reduce using rule 7 (declaracion -> lista .)


state 7

    (8) declaracion -> expr_def_funcion .

    AND             reduce using rule 8 (declaracion -> expr_def_funcion .)
    OR              reduce using rule 8 (declaracion -> expr_def_funcion .)
    $end            reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAS             reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENOS           reduce using rule 8 (declaracion -> expr_def_funcion .)
    POR             reduce using rule 8 (declaracion -> expr_def_funcion .)
    DIVIDIR         reduce using rule 8 (declaracion -> expr_def_funcion .)
    POTENCIA        reduce using rule 8 (declaracion -> expr_def_funcion .)
    MODULO          reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENOR           reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAYOR           reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENORIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAYORIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    DOBLEIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    DIFERENTE       reduce using rule 8 (declaracion -> expr_def_funcion .)
    CPARENT         reduce using rule 8 (declaracion -> expr_def_funcion .)
    LLADER          reduce using rule 8 (declaracion -> expr_def_funcion .)
    CORDER          reduce using rule 8 (declaracion -> expr_def_funcion .)
    DOSPUNTOS       reduce using rule 8 (declaracion -> expr_def_funcion .)
    ELSE            reduce using rule 8 (declaracion -> expr_def_funcion .)
    ELIF            reduce using rule 8 (declaracion -> expr_def_funcion .)
    VARIABLE        reduce using rule 8 (declaracion -> expr_def_funcion .)
    FLOTANTE        reduce using rule 8 (declaracion -> expr_def_funcion .)
    TRUE            reduce using rule 8 (declaracion -> expr_def_funcion .)
    FALSE           reduce using rule 8 (declaracion -> expr_def_funcion .)
    APARENT         reduce using rule 8 (declaracion -> expr_def_funcion .)
    LLAIZQ          reduce using rule 8 (declaracion -> expr_def_funcion .)
    CORIZQ          reduce using rule 8 (declaracion -> expr_def_funcion .)
    NOT             reduce using rule 8 (declaracion -> expr_def_funcion .)
    NUMERO          reduce using rule 8 (declaracion -> expr_def_funcion .)
    CADENACOMILLADOBLE reduce using rule 8 (declaracion -> expr_def_funcion .)
    CADENACOMILLASIMPLE reduce using rule 8 (declaracion -> expr_def_funcion .)
    DEF             reduce using rule 8 (declaracion -> expr_def_funcion .)
    RETURN          reduce using rule 8 (declaracion -> expr_def_funcion .)
    IF              reduce using rule 8 (declaracion -> expr_def_funcion .)
    PRINT           reduce using rule 8 (declaracion -> expr_def_funcion .)
    LEN             reduce using rule 8 (declaracion -> expr_def_funcion .)
    INPUT           reduce using rule 8 (declaracion -> expr_def_funcion .)
    COMA            reduce using rule 8 (declaracion -> expr_def_funcion .)


state 8

    (9) declaracion -> expr_return .

    AND             reduce using rule 9 (declaracion -> expr_return .)
    OR              reduce using rule 9 (declaracion -> expr_return .)
    $end            reduce using rule 9 (declaracion -> expr_return .)
    MAS             reduce using rule 9 (declaracion -> expr_return .)
    MENOS           reduce using rule 9 (declaracion -> expr_return .)
    POR             reduce using rule 9 (declaracion -> expr_return .)
    DIVIDIR         reduce using rule 9 (declaracion -> expr_return .)
    POTENCIA        reduce using rule 9 (declaracion -> expr_return .)
    MODULO          reduce using rule 9 (declaracion -> expr_return .)
    MENOR           reduce using rule 9 (declaracion -> expr_return .)
    MAYOR           reduce using rule 9 (declaracion -> expr_return .)
    MENORIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    MAYORIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    DOBLEIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    DIFERENTE       reduce using rule 9 (declaracion -> expr_return .)
    CPARENT         reduce using rule 9 (declaracion -> expr_return .)
    LLADER          reduce using rule 9 (declaracion -> expr_return .)
    CORDER          reduce using rule 9 (declaracion -> expr_return .)
    DOSPUNTOS       reduce using rule 9 (declaracion -> expr_return .)
    ELSE            reduce using rule 9 (declaracion -> expr_return .)
    ELIF            reduce using rule 9 (declaracion -> expr_return .)
    VARIABLE        reduce using rule 9 (declaracion -> expr_return .)
    FLOTANTE        reduce using rule 9 (declaracion -> expr_return .)
    TRUE            reduce using rule 9 (declaracion -> expr_return .)
    FALSE           reduce using rule 9 (declaracion -> expr_return .)
    APARENT         reduce using rule 9 (declaracion -> expr_return .)
    LLAIZQ          reduce using rule 9 (declaracion -> expr_return .)
    CORIZQ          reduce using rule 9 (declaracion -> expr_return .)
    NOT             reduce using rule 9 (declaracion -> expr_return .)
    NUMERO          reduce using rule 9 (declaracion -> expr_return .)
    CADENACOMILLADOBLE reduce using rule 9 (declaracion -> expr_return .)
    CADENACOMILLASIMPLE reduce using rule 9 (declaracion -> expr_return .)
    DEF             reduce using rule 9 (declaracion -> expr_return .)
    RETURN          reduce using rule 9 (declaracion -> expr_return .)
    IF              reduce using rule 9 (declaracion -> expr_return .)
    PRINT           reduce using rule 9 (declaracion -> expr_return .)
    LEN             reduce using rule 9 (declaracion -> expr_return .)
    INPUT           reduce using rule 9 (declaracion -> expr_return .)
    COMA            reduce using rule 9 (declaracion -> expr_return .)


state 9

    (10) declaracion -> if .

    AND             reduce using rule 10 (declaracion -> if .)
    OR              reduce using rule 10 (declaracion -> if .)
    $end            reduce using rule 10 (declaracion -> if .)
    MAS             reduce using rule 10 (declaracion -> if .)
    MENOS           reduce using rule 10 (declaracion -> if .)
    POR             reduce using rule 10 (declaracion -> if .)
    DIVIDIR         reduce using rule 10 (declaracion -> if .)
    POTENCIA        reduce using rule 10 (declaracion -> if .)
    MODULO          reduce using rule 10 (declaracion -> if .)
    MENOR           reduce using rule 10 (declaracion -> if .)
    MAYOR           reduce using rule 10 (declaracion -> if .)
    MENORIGUAL      reduce using rule 10 (declaracion -> if .)
    MAYORIGUAL      reduce using rule 10 (declaracion -> if .)
    DOBLEIGUAL      reduce using rule 10 (declaracion -> if .)
    DIFERENTE       reduce using rule 10 (declaracion -> if .)
    CPARENT         reduce using rule 10 (declaracion -> if .)
    LLADER          reduce using rule 10 (declaracion -> if .)
    CORDER          reduce using rule 10 (declaracion -> if .)
    DOSPUNTOS       reduce using rule 10 (declaracion -> if .)
    ELSE            reduce using rule 10 (declaracion -> if .)
    ELIF            reduce using rule 10 (declaracion -> if .)
    VARIABLE        reduce using rule 10 (declaracion -> if .)
    FLOTANTE        reduce using rule 10 (declaracion -> if .)
    TRUE            reduce using rule 10 (declaracion -> if .)
    FALSE           reduce using rule 10 (declaracion -> if .)
    APARENT         reduce using rule 10 (declaracion -> if .)
    LLAIZQ          reduce using rule 10 (declaracion -> if .)
    CORIZQ          reduce using rule 10 (declaracion -> if .)
    NOT             reduce using rule 10 (declaracion -> if .)
    NUMERO          reduce using rule 10 (declaracion -> if .)
    CADENACOMILLADOBLE reduce using rule 10 (declaracion -> if .)
    CADENACOMILLASIMPLE reduce using rule 10 (declaracion -> if .)
    DEF             reduce using rule 10 (declaracion -> if .)
    RETURN          reduce using rule 10 (declaracion -> if .)
    IF              reduce using rule 10 (declaracion -> if .)
    PRINT           reduce using rule 10 (declaracion -> if .)
    LEN             reduce using rule 10 (declaracion -> if .)
    INPUT           reduce using rule 10 (declaracion -> if .)
    COMA            reduce using rule 10 (declaracion -> if .)


state 10

    (11) declaracion -> expr_print .

    AND             reduce using rule 11 (declaracion -> expr_print .)
    OR              reduce using rule 11 (declaracion -> expr_print .)
    $end            reduce using rule 11 (declaracion -> expr_print .)
    MAS             reduce using rule 11 (declaracion -> expr_print .)
    MENOS           reduce using rule 11 (declaracion -> expr_print .)
    POR             reduce using rule 11 (declaracion -> expr_print .)
    DIVIDIR         reduce using rule 11 (declaracion -> expr_print .)
    POTENCIA        reduce using rule 11 (declaracion -> expr_print .)
    MODULO          reduce using rule 11 (declaracion -> expr_print .)
    MENOR           reduce using rule 11 (declaracion -> expr_print .)
    MAYOR           reduce using rule 11 (declaracion -> expr_print .)
    MENORIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    MAYORIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    DOBLEIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    DIFERENTE       reduce using rule 11 (declaracion -> expr_print .)
    CPARENT         reduce using rule 11 (declaracion -> expr_print .)
    LLADER          reduce using rule 11 (declaracion -> expr_print .)
    CORDER          reduce using rule 11 (declaracion -> expr_print .)
    DOSPUNTOS       reduce using rule 11 (declaracion -> expr_print .)
    ELSE            reduce using rule 11 (declaracion -> expr_print .)
    ELIF            reduce using rule 11 (declaracion -> expr_print .)
    VARIABLE        reduce using rule 11 (declaracion -> expr_print .)
    FLOTANTE        reduce using rule 11 (declaracion -> expr_print .)
    TRUE            reduce using rule 11 (declaracion -> expr_print .)
    FALSE           reduce using rule 11 (declaracion -> expr_print .)
    APARENT         reduce using rule 11 (declaracion -> expr_print .)
    LLAIZQ          reduce using rule 11 (declaracion -> expr_print .)
    CORIZQ          reduce using rule 11 (declaracion -> expr_print .)
    NOT             reduce using rule 11 (declaracion -> expr_print .)
    NUMERO          reduce using rule 11 (declaracion -> expr_print .)
    CADENACOMILLADOBLE reduce using rule 11 (declaracion -> expr_print .)
    CADENACOMILLASIMPLE reduce using rule 11 (declaracion -> expr_print .)
    DEF             reduce using rule 11 (declaracion -> expr_print .)
    RETURN          reduce using rule 11 (declaracion -> expr_print .)
    IF              reduce using rule 11 (declaracion -> expr_print .)
    PRINT           reduce using rule 11 (declaracion -> expr_print .)
    LEN             reduce using rule 11 (declaracion -> expr_print .)
    INPUT           reduce using rule 11 (declaracion -> expr_print .)
    COMA            reduce using rule 11 (declaracion -> expr_print .)


state 11

    (12) declaracion -> append .

    AND             reduce using rule 12 (declaracion -> append .)
    OR              reduce using rule 12 (declaracion -> append .)
    $end            reduce using rule 12 (declaracion -> append .)
    MAS             reduce using rule 12 (declaracion -> append .)
    MENOS           reduce using rule 12 (declaracion -> append .)
    POR             reduce using rule 12 (declaracion -> append .)
    DIVIDIR         reduce using rule 12 (declaracion -> append .)
    POTENCIA        reduce using rule 12 (declaracion -> append .)
    MODULO          reduce using rule 12 (declaracion -> append .)
    MENOR           reduce using rule 12 (declaracion -> append .)
    MAYOR           reduce using rule 12 (declaracion -> append .)
    MENORIGUAL      reduce using rule 12 (declaracion -> append .)
    MAYORIGUAL      reduce using rule 12 (declaracion -> append .)
    DOBLEIGUAL      reduce using rule 12 (declaracion -> append .)
    DIFERENTE       reduce using rule 12 (declaracion -> append .)
    CPARENT         reduce using rule 12 (declaracion -> append .)
    LLADER          reduce using rule 12 (declaracion -> append .)
    CORDER          reduce using rule 12 (declaracion -> append .)
    DOSPUNTOS       reduce using rule 12 (declaracion -> append .)
    ELSE            reduce using rule 12 (declaracion -> append .)
    ELIF            reduce using rule 12 (declaracion -> append .)
    VARIABLE        reduce using rule 12 (declaracion -> append .)
    FLOTANTE        reduce using rule 12 (declaracion -> append .)
    TRUE            reduce using rule 12 (declaracion -> append .)
    FALSE           reduce using rule 12 (declaracion -> append .)
    APARENT         reduce using rule 12 (declaracion -> append .)
    LLAIZQ          reduce using rule 12 (declaracion -> append .)
    CORIZQ          reduce using rule 12 (declaracion -> append .)
    NOT             reduce using rule 12 (declaracion -> append .)
    NUMERO          reduce using rule 12 (declaracion -> append .)
    CADENACOMILLADOBLE reduce using rule 12 (declaracion -> append .)
    CADENACOMILLASIMPLE reduce using rule 12 (declaracion -> append .)
    DEF             reduce using rule 12 (declaracion -> append .)
    RETURN          reduce using rule 12 (declaracion -> append .)
    IF              reduce using rule 12 (declaracion -> append .)
    PRINT           reduce using rule 12 (declaracion -> append .)
    LEN             reduce using rule 12 (declaracion -> append .)
    INPUT           reduce using rule 12 (declaracion -> append .)
    COMA            reduce using rule 12 (declaracion -> append .)


state 12

    (13) declaracion -> len .

    AND             reduce using rule 13 (declaracion -> len .)
    OR              reduce using rule 13 (declaracion -> len .)
    $end            reduce using rule 13 (declaracion -> len .)
    MAS             reduce using rule 13 (declaracion -> len .)
    MENOS           reduce using rule 13 (declaracion -> len .)
    POR             reduce using rule 13 (declaracion -> len .)
    DIVIDIR         reduce using rule 13 (declaracion -> len .)
    POTENCIA        reduce using rule 13 (declaracion -> len .)
    MODULO          reduce using rule 13 (declaracion -> len .)
    MENOR           reduce using rule 13 (declaracion -> len .)
    MAYOR           reduce using rule 13 (declaracion -> len .)
    MENORIGUAL      reduce using rule 13 (declaracion -> len .)
    MAYORIGUAL      reduce using rule 13 (declaracion -> len .)
    DOBLEIGUAL      reduce using rule 13 (declaracion -> len .)
    DIFERENTE       reduce using rule 13 (declaracion -> len .)
    CPARENT         reduce using rule 13 (declaracion -> len .)
    LLADER          reduce using rule 13 (declaracion -> len .)
    CORDER          reduce using rule 13 (declaracion -> len .)
    DOSPUNTOS       reduce using rule 13 (declaracion -> len .)
    ELSE            reduce using rule 13 (declaracion -> len .)
    ELIF            reduce using rule 13 (declaracion -> len .)
    VARIABLE        reduce using rule 13 (declaracion -> len .)
    FLOTANTE        reduce using rule 13 (declaracion -> len .)
    TRUE            reduce using rule 13 (declaracion -> len .)
    FALSE           reduce using rule 13 (declaracion -> len .)
    APARENT         reduce using rule 13 (declaracion -> len .)
    LLAIZQ          reduce using rule 13 (declaracion -> len .)
    CORIZQ          reduce using rule 13 (declaracion -> len .)
    NOT             reduce using rule 13 (declaracion -> len .)
    NUMERO          reduce using rule 13 (declaracion -> len .)
    CADENACOMILLADOBLE reduce using rule 13 (declaracion -> len .)
    CADENACOMILLASIMPLE reduce using rule 13 (declaracion -> len .)
    DEF             reduce using rule 13 (declaracion -> len .)
    RETURN          reduce using rule 13 (declaracion -> len .)
    IF              reduce using rule 13 (declaracion -> len .)
    PRINT           reduce using rule 13 (declaracion -> len .)
    LEN             reduce using rule 13 (declaracion -> len .)
    INPUT           reduce using rule 13 (declaracion -> len .)
    COMA            reduce using rule 13 (declaracion -> len .)


state 13

    (14) declaracion -> input .

    AND             reduce using rule 14 (declaracion -> input .)
    OR              reduce using rule 14 (declaracion -> input .)
    $end            reduce using rule 14 (declaracion -> input .)
    MAS             reduce using rule 14 (declaracion -> input .)
    MENOS           reduce using rule 14 (declaracion -> input .)
    POR             reduce using rule 14 (declaracion -> input .)
    DIVIDIR         reduce using rule 14 (declaracion -> input .)
    POTENCIA        reduce using rule 14 (declaracion -> input .)
    MODULO          reduce using rule 14 (declaracion -> input .)
    MENOR           reduce using rule 14 (declaracion -> input .)
    MAYOR           reduce using rule 14 (declaracion -> input .)
    MENORIGUAL      reduce using rule 14 (declaracion -> input .)
    MAYORIGUAL      reduce using rule 14 (declaracion -> input .)
    DOBLEIGUAL      reduce using rule 14 (declaracion -> input .)
    DIFERENTE       reduce using rule 14 (declaracion -> input .)
    CPARENT         reduce using rule 14 (declaracion -> input .)
    LLADER          reduce using rule 14 (declaracion -> input .)
    CORDER          reduce using rule 14 (declaracion -> input .)
    DOSPUNTOS       reduce using rule 14 (declaracion -> input .)
    ELSE            reduce using rule 14 (declaracion -> input .)
    ELIF            reduce using rule 14 (declaracion -> input .)
    VARIABLE        reduce using rule 14 (declaracion -> input .)
    FLOTANTE        reduce using rule 14 (declaracion -> input .)
    TRUE            reduce using rule 14 (declaracion -> input .)
    FALSE           reduce using rule 14 (declaracion -> input .)
    APARENT         reduce using rule 14 (declaracion -> input .)
    LLAIZQ          reduce using rule 14 (declaracion -> input .)
    CORIZQ          reduce using rule 14 (declaracion -> input .)
    NOT             reduce using rule 14 (declaracion -> input .)
    NUMERO          reduce using rule 14 (declaracion -> input .)
    CADENACOMILLADOBLE reduce using rule 14 (declaracion -> input .)
    CADENACOMILLASIMPLE reduce using rule 14 (declaracion -> input .)
    DEF             reduce using rule 14 (declaracion -> input .)
    RETURN          reduce using rule 14 (declaracion -> input .)
    IF              reduce using rule 14 (declaracion -> input .)
    PRINT           reduce using rule 14 (declaracion -> input .)
    LEN             reduce using rule 14 (declaracion -> input .)
    INPUT           reduce using rule 14 (declaracion -> input .)
    COMA            reduce using rule 14 (declaracion -> input .)


state 14

    (15) expresion -> TRUE .

    MAS             reduce using rule 15 (expresion -> TRUE .)
    MENOS           reduce using rule 15 (expresion -> TRUE .)
    POR             reduce using rule 15 (expresion -> TRUE .)
    DIVIDIR         reduce using rule 15 (expresion -> TRUE .)
    POTENCIA        reduce using rule 15 (expresion -> TRUE .)
    MODULO          reduce using rule 15 (expresion -> TRUE .)
    MENOR           reduce using rule 15 (expresion -> TRUE .)
    MAYOR           reduce using rule 15 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 15 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 15 (expresion -> TRUE .)
    DOBLEIGUAL      reduce using rule 15 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 15 (expresion -> TRUE .)
    AND             reduce using rule 15 (expresion -> TRUE .)
    OR              reduce using rule 15 (expresion -> TRUE .)
    $end            reduce using rule 15 (expresion -> TRUE .)
    CPARENT         reduce using rule 15 (expresion -> TRUE .)
    LLADER          reduce using rule 15 (expresion -> TRUE .)
    CORDER          reduce using rule 15 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 15 (expresion -> TRUE .)
    ELSE            reduce using rule 15 (expresion -> TRUE .)
    ELIF            reduce using rule 15 (expresion -> TRUE .)
    VARIABLE        reduce using rule 15 (expresion -> TRUE .)
    FLOTANTE        reduce using rule 15 (expresion -> TRUE .)
    TRUE            reduce using rule 15 (expresion -> TRUE .)
    FALSE           reduce using rule 15 (expresion -> TRUE .)
    APARENT         reduce using rule 15 (expresion -> TRUE .)
    LLAIZQ          reduce using rule 15 (expresion -> TRUE .)
    CORIZQ          reduce using rule 15 (expresion -> TRUE .)
    NOT             reduce using rule 15 (expresion -> TRUE .)
    NUMERO          reduce using rule 15 (expresion -> TRUE .)
    CADENACOMILLADOBLE reduce using rule 15 (expresion -> TRUE .)
    CADENACOMILLASIMPLE reduce using rule 15 (expresion -> TRUE .)
    DEF             reduce using rule 15 (expresion -> TRUE .)
    RETURN          reduce using rule 15 (expresion -> TRUE .)
    IF              reduce using rule 15 (expresion -> TRUE .)
    PRINT           reduce using rule 15 (expresion -> TRUE .)
    LEN             reduce using rule 15 (expresion -> TRUE .)
    INPUT           reduce using rule 15 (expresion -> TRUE .)
    COMA            reduce using rule 15 (expresion -> TRUE .)


state 15

    (16) expresion -> FALSE .

    MAS             reduce using rule 16 (expresion -> FALSE .)
    MENOS           reduce using rule 16 (expresion -> FALSE .)
    POR             reduce using rule 16 (expresion -> FALSE .)
    DIVIDIR         reduce using rule 16 (expresion -> FALSE .)
    POTENCIA        reduce using rule 16 (expresion -> FALSE .)
    MODULO          reduce using rule 16 (expresion -> FALSE .)
    MENOR           reduce using rule 16 (expresion -> FALSE .)
    MAYOR           reduce using rule 16 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 16 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 16 (expresion -> FALSE .)
    DOBLEIGUAL      reduce using rule 16 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 16 (expresion -> FALSE .)
    AND             reduce using rule 16 (expresion -> FALSE .)
    OR              reduce using rule 16 (expresion -> FALSE .)
    $end            reduce using rule 16 (expresion -> FALSE .)
    CPARENT         reduce using rule 16 (expresion -> FALSE .)
    LLADER          reduce using rule 16 (expresion -> FALSE .)
    CORDER          reduce using rule 16 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 16 (expresion -> FALSE .)
    ELSE            reduce using rule 16 (expresion -> FALSE .)
    ELIF            reduce using rule 16 (expresion -> FALSE .)
    VARIABLE        reduce using rule 16 (expresion -> FALSE .)
    FLOTANTE        reduce using rule 16 (expresion -> FALSE .)
    TRUE            reduce using rule 16 (expresion -> FALSE .)
    FALSE           reduce using rule 16 (expresion -> FALSE .)
    APARENT         reduce using rule 16 (expresion -> FALSE .)
    LLAIZQ          reduce using rule 16 (expresion -> FALSE .)
    CORIZQ          reduce using rule 16 (expresion -> FALSE .)
    NOT             reduce using rule 16 (expresion -> FALSE .)
    NUMERO          reduce using rule 16 (expresion -> FALSE .)
    CADENACOMILLADOBLE reduce using rule 16 (expresion -> FALSE .)
    CADENACOMILLASIMPLE reduce using rule 16 (expresion -> FALSE .)
    DEF             reduce using rule 16 (expresion -> FALSE .)
    RETURN          reduce using rule 16 (expresion -> FALSE .)
    IF              reduce using rule 16 (expresion -> FALSE .)
    PRINT           reduce using rule 16 (expresion -> FALSE .)
    LEN             reduce using rule 16 (expresion -> FALSE .)
    INPUT           reduce using rule 16 (expresion -> FALSE .)
    COMA            reduce using rule 16 (expresion -> FALSE .)


state 16

    (23) expresion -> MENOS . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 47
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 17

    (24) expresion -> APARENT . expresion CPARENT
    (33) expresion -> APARENT . expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT . expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT . expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT . expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT . expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT . expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (42) expresion -> APARENT . declaracion AND declaracion CPARENT
    (43) expresion -> APARENT . declaracion OR declaracion CPARENT
    (44) expresion -> APARENT . NOT declaracion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    NOT             shift and go to state 51
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 49
    declaracion                    shift and go to state 50
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 18

    (25) expresion -> LLAIZQ . expresion LLADER
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 52
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 19

    (26) expresion -> CORIZQ . expresion CORDER
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 53
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 20

    (41) expresion -> NOT . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 54
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 21

    (45) expresion -> NUMERO .

    MAS             reduce using rule 45 (expresion -> NUMERO .)
    MENOS           reduce using rule 45 (expresion -> NUMERO .)
    POR             reduce using rule 45 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 45 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 45 (expresion -> NUMERO .)
    MODULO          reduce using rule 45 (expresion -> NUMERO .)
    MENOR           reduce using rule 45 (expresion -> NUMERO .)
    MAYOR           reduce using rule 45 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 45 (expresion -> NUMERO .)
    AND             reduce using rule 45 (expresion -> NUMERO .)
    OR              reduce using rule 45 (expresion -> NUMERO .)
    $end            reduce using rule 45 (expresion -> NUMERO .)
    CPARENT         reduce using rule 45 (expresion -> NUMERO .)
    LLADER          reduce using rule 45 (expresion -> NUMERO .)
    CORDER          reduce using rule 45 (expresion -> NUMERO .)
    DOSPUNTOS       reduce using rule 45 (expresion -> NUMERO .)
    ELSE            reduce using rule 45 (expresion -> NUMERO .)
    ELIF            reduce using rule 45 (expresion -> NUMERO .)
    VARIABLE        reduce using rule 45 (expresion -> NUMERO .)
    FLOTANTE        reduce using rule 45 (expresion -> NUMERO .)
    TRUE            reduce using rule 45 (expresion -> NUMERO .)
    FALSE           reduce using rule 45 (expresion -> NUMERO .)
    APARENT         reduce using rule 45 (expresion -> NUMERO .)
    LLAIZQ          reduce using rule 45 (expresion -> NUMERO .)
    CORIZQ          reduce using rule 45 (expresion -> NUMERO .)
    NOT             reduce using rule 45 (expresion -> NUMERO .)
    NUMERO          reduce using rule 45 (expresion -> NUMERO .)
    CADENACOMILLADOBLE reduce using rule 45 (expresion -> NUMERO .)
    CADENACOMILLASIMPLE reduce using rule 45 (expresion -> NUMERO .)
    DEF             reduce using rule 45 (expresion -> NUMERO .)
    RETURN          reduce using rule 45 (expresion -> NUMERO .)
    IF              reduce using rule 45 (expresion -> NUMERO .)
    PRINT           reduce using rule 45 (expresion -> NUMERO .)
    LEN             reduce using rule 45 (expresion -> NUMERO .)
    INPUT           reduce using rule 45 (expresion -> NUMERO .)
    COMA            reduce using rule 45 (expresion -> NUMERO .)


state 22

    (46) expresion -> CADENACOMILLADOBLE .

    MAS             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MENOS           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    POR             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    DIVIDIR         reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    POTENCIA        reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MODULO          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MENOR           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MAYOR           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MENORIGUAL      reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    MAYORIGUAL      reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    DOBLEIGUAL      reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    DIFERENTE       reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    AND             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    OR              reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    $end            reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    CPARENT         reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    LLADER          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    CORDER          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    DOSPUNTOS       reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    ELSE            reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    ELIF            reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    VARIABLE        reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    FLOTANTE        reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    TRUE            reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    FALSE           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    APARENT         reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    LLAIZQ          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    CORIZQ          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    NOT             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    NUMERO          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    CADENACOMILLADOBLE reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    CADENACOMILLASIMPLE reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    DEF             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    RETURN          reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    IF              reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    PRINT           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    LEN             reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    INPUT           reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)
    COMA            reduce using rule 46 (expresion -> CADENACOMILLADOBLE .)


state 23

    (47) expresion -> CADENACOMILLASIMPLE .

    MAS             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MENOS           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    POR             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    DIVIDIR         reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    POTENCIA        reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MODULO          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MENOR           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MAYOR           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MENORIGUAL      reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    MAYORIGUAL      reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    DOBLEIGUAL      reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    DIFERENTE       reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    AND             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    OR              reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    $end            reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    CPARENT         reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    LLADER          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    CORDER          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    DOSPUNTOS       reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    ELSE            reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    ELIF            reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    VARIABLE        reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    FLOTANTE        reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    TRUE            reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    FALSE           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    APARENT         reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    LLAIZQ          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    CORIZQ          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    NOT             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    NUMERO          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    CADENACOMILLADOBLE reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    CADENACOMILLASIMPLE reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    DEF             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    RETURN          reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    IF              reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    PRINT           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    LEN             reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    INPUT           reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)
    COMA            reduce using rule 47 (expresion -> CADENACOMILLASIMPLE .)


state 24

    (60) expr_def_funcion -> DEF . expr_funcion DOSPUNTOS
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT

    VARIABLE        shift and go to state 56

    expr_funcion                   shift and go to state 55

state 25

    (61) expr_return -> RETURN . variable
    (49) variable -> . VARIABLE
    (50) variable -> . NUMERO
    (51) variable -> . FLOTANTE
    (52) variable -> . expr_funcion
    (53) variable -> . expresion
    (54) variable -> . lista
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 58
    NUMERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    variable                       shift and go to state 57
    expr_funcion                   shift and go to state 61
    expresion                      shift and go to state 62
    lista                          shift and go to state 63
    declaracion                    shift and go to state 48
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 26

    (64) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> IF . expresion DOSPUNTOS codigo_interno
    (66) if -> IF . expresion DOSPUNTOS
    (67) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> IF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    APARENT         shift and go to state 64
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 65
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 27

    (74) expr_print -> PRINT . APARENT VARIABLE CPARENT
    (75) expr_print -> PRINT . APARENT expresion CPARENT
    (76) expr_print -> PRINT . APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> PRINT . APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> PRINT . APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> PRINT . APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> PRINT . APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> PRINT . APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> PRINT . APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> PRINT . APARENT expresion COMA expresion CPARENT

    APARENT         shift and go to state 66


state 28

    (90) len -> LEN . APARENT VARIABLE CPARENT

    APARENT         shift and go to state 67


state 29

    (91) input -> INPUT . APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> INPUT . APARENT CADENACOMILLASIMPLE CPARENT

    APARENT         shift and go to state 68


state 30

    (39) expresion -> declaracion AND . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 69
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 31

    (40) expresion -> declaracion OR . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 70
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 32

    (1) declaracion -> VARIABLE ASIGNACION . expresion
    (2) declaracion -> VARIABLE ASIGNACION . declaracion
    (57) lista -> VARIABLE ASIGNACION . CORIZQ CORDER
    (58) lista -> VARIABLE ASIGNACION . CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE ASIGNACION . CORIZQ VARIABLE CORDER
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    CORIZQ          shift and go to state 73
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 71
    declaracion                    shift and go to state 72
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 33

    (48) expr_funcion -> VARIABLE APARENT . params CPARENT
    (55) params -> . variable
    (56) params -> . params COMA params
    (49) variable -> . VARIABLE
    (50) variable -> . NUMERO
    (51) variable -> . FLOTANTE
    (52) variable -> . expr_funcion
    (53) variable -> . expresion
    (54) variable -> . lista
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 58
    NUMERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    params                         shift and go to state 74
    variable                       shift and go to state 75
    expr_funcion                   shift and go to state 61
    expresion                      shift and go to state 62
    lista                          shift and go to state 63
    declaracion                    shift and go to state 48
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 34

    (84) append -> VARIABLE PUNTO . APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE PUNTO . APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE PUNTO . APPEND APARENT FLOTANTE CPARENT

    APPEND          shift and go to state 76


state 35

    (17) expresion -> expresion MAS . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 77
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 36

    (18) expresion -> expresion MENOS . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 78
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 37

    (19) expresion -> expresion POR . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 79
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 38

    (20) expresion -> expresion DIVIDIR . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 80
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 39

    (21) expresion -> expresion POTENCIA . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 81
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 40

    (22) expresion -> expresion MODULO . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 82
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 41

    (27) expresion -> expresion MENOR . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 83
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 42

    (28) expresion -> expresion MAYOR . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 84
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 43

    (29) expresion -> expresion MENORIGUAL . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 85
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 44

    (30) expresion -> expresion MAYORIGUAL . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 86
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 45

    (31) expresion -> expresion DOBLEIGUAL . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 87
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 46

    (32) expresion -> expresion DIFERENTE . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 88
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 47

    (23) expresion -> MENOS expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 23 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 23 (expresion -> MENOS expresion .)
    POR             reduce using rule 23 (expresion -> MENOS expresion .)
    DIVIDIR         reduce using rule 23 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 23 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 23 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 23 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 23 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 23 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 23 (expresion -> MENOS expresion .)
    DOBLEIGUAL      reduce using rule 23 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 23 (expresion -> MENOS expresion .)
    $end            reduce using rule 23 (expresion -> MENOS expresion .)
    CPARENT         reduce using rule 23 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 23 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 23 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 23 (expresion -> MENOS expresion .)
    ELSE            reduce using rule 23 (expresion -> MENOS expresion .)
    ELIF            reduce using rule 23 (expresion -> MENOS expresion .)
    VARIABLE        reduce using rule 23 (expresion -> MENOS expresion .)
    FLOTANTE        reduce using rule 23 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 23 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 23 (expresion -> MENOS expresion .)
    APARENT         reduce using rule 23 (expresion -> MENOS expresion .)
    LLAIZQ          reduce using rule 23 (expresion -> MENOS expresion .)
    CORIZQ          reduce using rule 23 (expresion -> MENOS expresion .)
    NOT             reduce using rule 23 (expresion -> MENOS expresion .)
    NUMERO          reduce using rule 23 (expresion -> MENOS expresion .)
    CADENACOMILLADOBLE reduce using rule 23 (expresion -> MENOS expresion .)
    CADENACOMILLASIMPLE reduce using rule 23 (expresion -> MENOS expresion .)
    DEF             reduce using rule 23 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 23 (expresion -> MENOS expresion .)
    IF              reduce using rule 23 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 23 (expresion -> MENOS expresion .)
    LEN             reduce using rule 23 (expresion -> MENOS expresion .)
    INPUT           reduce using rule 23 (expresion -> MENOS expresion .)
    COMA            reduce using rule 23 (expresion -> MENOS expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 23 (expresion -> MENOS expresion .) ]
  ! OR              [ reduce using rule 23 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 35 ]
  ! MENOS           [ shift and go to state 36 ]
  ! POR             [ shift and go to state 37 ]
  ! DIVIDIR         [ shift and go to state 38 ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]


state 48

    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

    AND             shift and go to state 30
    OR              shift and go to state 31


state 49

    (24) expresion -> APARENT expresion . CPARENT
    (33) expresion -> APARENT expresion . CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT expresion . CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT expresion . CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT expresion . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT expresion . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT expresion . CPARENT DIFERENTE APARENT expresion CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 89
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 50

    (42) expresion -> APARENT declaracion . AND declaracion CPARENT
    (43) expresion -> APARENT declaracion . OR declaracion CPARENT
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

    AND             shift and go to state 90
    OR              shift and go to state 91


state 51

    (44) expresion -> APARENT NOT . declaracion CPARENT
    (41) expresion -> NOT . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 92
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 52

    (25) expresion -> LLAIZQ expresion . LLADER
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    LLADER          shift and go to state 93
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 53

    (26) expresion -> CORIZQ expresion . CORDER
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CORDER          shift and go to state 94
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 54

    (41) expresion -> NOT declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 41 (expresion -> NOT declaracion .)
    MENOS           reduce using rule 41 (expresion -> NOT declaracion .)
    POR             reduce using rule 41 (expresion -> NOT declaracion .)
    DIVIDIR         reduce using rule 41 (expresion -> NOT declaracion .)
    POTENCIA        reduce using rule 41 (expresion -> NOT declaracion .)
    MODULO          reduce using rule 41 (expresion -> NOT declaracion .)
    MENOR           reduce using rule 41 (expresion -> NOT declaracion .)
    MAYOR           reduce using rule 41 (expresion -> NOT declaracion .)
    MENORIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    MAYORIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    DOBLEIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    DIFERENTE       reduce using rule 41 (expresion -> NOT declaracion .)
    $end            reduce using rule 41 (expresion -> NOT declaracion .)
    CPARENT         reduce using rule 41 (expresion -> NOT declaracion .)
    LLADER          reduce using rule 41 (expresion -> NOT declaracion .)
    CORDER          reduce using rule 41 (expresion -> NOT declaracion .)
    DOSPUNTOS       reduce using rule 41 (expresion -> NOT declaracion .)
    ELSE            reduce using rule 41 (expresion -> NOT declaracion .)
    ELIF            reduce using rule 41 (expresion -> NOT declaracion .)
    VARIABLE        reduce using rule 41 (expresion -> NOT declaracion .)
    FLOTANTE        reduce using rule 41 (expresion -> NOT declaracion .)
    TRUE            reduce using rule 41 (expresion -> NOT declaracion .)
    FALSE           reduce using rule 41 (expresion -> NOT declaracion .)
    APARENT         reduce using rule 41 (expresion -> NOT declaracion .)
    LLAIZQ          reduce using rule 41 (expresion -> NOT declaracion .)
    CORIZQ          reduce using rule 41 (expresion -> NOT declaracion .)
    NOT             reduce using rule 41 (expresion -> NOT declaracion .)
    NUMERO          reduce using rule 41 (expresion -> NOT declaracion .)
    CADENACOMILLADOBLE reduce using rule 41 (expresion -> NOT declaracion .)
    CADENACOMILLASIMPLE reduce using rule 41 (expresion -> NOT declaracion .)
    DEF             reduce using rule 41 (expresion -> NOT declaracion .)
    RETURN          reduce using rule 41 (expresion -> NOT declaracion .)
    IF              reduce using rule 41 (expresion -> NOT declaracion .)
    PRINT           reduce using rule 41 (expresion -> NOT declaracion .)
    LEN             reduce using rule 41 (expresion -> NOT declaracion .)
    INPUT           reduce using rule 41 (expresion -> NOT declaracion .)
    COMA            reduce using rule 41 (expresion -> NOT declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! AND             [ reduce using rule 41 (expresion -> NOT declaracion .) ]
  ! OR              [ reduce using rule 41 (expresion -> NOT declaracion .) ]


state 55

    (60) expr_def_funcion -> DEF expr_funcion . DOSPUNTOS

    DOSPUNTOS       shift and go to state 95


state 56

    (48) expr_funcion -> VARIABLE . APARENT params CPARENT

    APARENT         shift and go to state 33


state 57

    (61) expr_return -> RETURN variable .

    AND             reduce using rule 61 (expr_return -> RETURN variable .)
    OR              reduce using rule 61 (expr_return -> RETURN variable .)
    $end            reduce using rule 61 (expr_return -> RETURN variable .)
    MAS             reduce using rule 61 (expr_return -> RETURN variable .)
    MENOS           reduce using rule 61 (expr_return -> RETURN variable .)
    POR             reduce using rule 61 (expr_return -> RETURN variable .)
    DIVIDIR         reduce using rule 61 (expr_return -> RETURN variable .)
    POTENCIA        reduce using rule 61 (expr_return -> RETURN variable .)
    MODULO          reduce using rule 61 (expr_return -> RETURN variable .)
    MENOR           reduce using rule 61 (expr_return -> RETURN variable .)
    MAYOR           reduce using rule 61 (expr_return -> RETURN variable .)
    MENORIGUAL      reduce using rule 61 (expr_return -> RETURN variable .)
    MAYORIGUAL      reduce using rule 61 (expr_return -> RETURN variable .)
    DOBLEIGUAL      reduce using rule 61 (expr_return -> RETURN variable .)
    DIFERENTE       reduce using rule 61 (expr_return -> RETURN variable .)
    CPARENT         reduce using rule 61 (expr_return -> RETURN variable .)
    LLADER          reduce using rule 61 (expr_return -> RETURN variable .)
    CORDER          reduce using rule 61 (expr_return -> RETURN variable .)
    DOSPUNTOS       reduce using rule 61 (expr_return -> RETURN variable .)
    ELSE            reduce using rule 61 (expr_return -> RETURN variable .)
    ELIF            reduce using rule 61 (expr_return -> RETURN variable .)
    VARIABLE        reduce using rule 61 (expr_return -> RETURN variable .)
    FLOTANTE        reduce using rule 61 (expr_return -> RETURN variable .)
    TRUE            reduce using rule 61 (expr_return -> RETURN variable .)
    FALSE           reduce using rule 61 (expr_return -> RETURN variable .)
    APARENT         reduce using rule 61 (expr_return -> RETURN variable .)
    LLAIZQ          reduce using rule 61 (expr_return -> RETURN variable .)
    CORIZQ          reduce using rule 61 (expr_return -> RETURN variable .)
    NOT             reduce using rule 61 (expr_return -> RETURN variable .)
    NUMERO          reduce using rule 61 (expr_return -> RETURN variable .)
    CADENACOMILLADOBLE reduce using rule 61 (expr_return -> RETURN variable .)
    CADENACOMILLASIMPLE reduce using rule 61 (expr_return -> RETURN variable .)
    DEF             reduce using rule 61 (expr_return -> RETURN variable .)
    RETURN          reduce using rule 61 (expr_return -> RETURN variable .)
    IF              reduce using rule 61 (expr_return -> RETURN variable .)
    PRINT           reduce using rule 61 (expr_return -> RETURN variable .)
    LEN             reduce using rule 61 (expr_return -> RETURN variable .)
    INPUT           reduce using rule 61 (expr_return -> RETURN variable .)
    COMA            reduce using rule 61 (expr_return -> RETURN variable .)


state 58

    (49) variable -> VARIABLE .
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

  ! shift/reduce conflict for APARENT resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 4 (declaracion -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 4 (declaracion -> VARIABLE .)
    MAS             reduce using rule 49 (variable -> VARIABLE .)
    MENOS           reduce using rule 49 (variable -> VARIABLE .)
    POR             reduce using rule 49 (variable -> VARIABLE .)
    DIVIDIR         reduce using rule 49 (variable -> VARIABLE .)
    POTENCIA        reduce using rule 49 (variable -> VARIABLE .)
    MODULO          reduce using rule 49 (variable -> VARIABLE .)
    MENOR           reduce using rule 49 (variable -> VARIABLE .)
    MAYOR           reduce using rule 49 (variable -> VARIABLE .)
    MENORIGUAL      reduce using rule 49 (variable -> VARIABLE .)
    MAYORIGUAL      reduce using rule 49 (variable -> VARIABLE .)
    DOBLEIGUAL      reduce using rule 49 (variable -> VARIABLE .)
    DIFERENTE       reduce using rule 49 (variable -> VARIABLE .)
    $end            reduce using rule 49 (variable -> VARIABLE .)
    CPARENT         reduce using rule 49 (variable -> VARIABLE .)
    LLADER          reduce using rule 49 (variable -> VARIABLE .)
    CORDER          reduce using rule 49 (variable -> VARIABLE .)
    DOSPUNTOS       reduce using rule 49 (variable -> VARIABLE .)
    ELSE            reduce using rule 49 (variable -> VARIABLE .)
    ELIF            reduce using rule 49 (variable -> VARIABLE .)
    VARIABLE        reduce using rule 49 (variable -> VARIABLE .)
    FLOTANTE        reduce using rule 49 (variable -> VARIABLE .)
    TRUE            reduce using rule 49 (variable -> VARIABLE .)
    FALSE           reduce using rule 49 (variable -> VARIABLE .)
    LLAIZQ          reduce using rule 49 (variable -> VARIABLE .)
    CORIZQ          reduce using rule 49 (variable -> VARIABLE .)
    NOT             reduce using rule 49 (variable -> VARIABLE .)
    NUMERO          reduce using rule 49 (variable -> VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 49 (variable -> VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 49 (variable -> VARIABLE .)
    DEF             reduce using rule 49 (variable -> VARIABLE .)
    RETURN          reduce using rule 49 (variable -> VARIABLE .)
    IF              reduce using rule 49 (variable -> VARIABLE .)
    PRINT           reduce using rule 49 (variable -> VARIABLE .)
    LEN             reduce using rule 49 (variable -> VARIABLE .)
    INPUT           reduce using rule 49 (variable -> VARIABLE .)
    COMA            reduce using rule 49 (variable -> VARIABLE .)
    APARENT         shift and go to state 33
    ASIGNACION      shift and go to state 96
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    PUNTO           shift and go to state 34

  ! AND             [ reduce using rule 49 (variable -> VARIABLE .) ]
  ! OR              [ reduce using rule 49 (variable -> VARIABLE .) ]
  ! APARENT         [ reduce using rule 49 (variable -> VARIABLE .) ]


state 59

    (50) variable -> NUMERO .
    (45) expresion -> NUMERO .

  ! reduce/reduce conflict for MAS resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOS resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POR resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOR resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYOR resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for AND resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for OR resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for $end resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CPARENT resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLADER resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORDER resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELIF resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for TRUE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FALSE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for APARENT resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NOT resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NUMERO resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DEF resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for IF resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LEN resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for INPUT resolved using rule 45 (expresion -> NUMERO .)
  ! reduce/reduce conflict for COMA resolved using rule 45 (expresion -> NUMERO .)
    MAS             reduce using rule 45 (expresion -> NUMERO .)
    MENOS           reduce using rule 45 (expresion -> NUMERO .)
    POR             reduce using rule 45 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 45 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 45 (expresion -> NUMERO .)
    MODULO          reduce using rule 45 (expresion -> NUMERO .)
    MENOR           reduce using rule 45 (expresion -> NUMERO .)
    MAYOR           reduce using rule 45 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 45 (expresion -> NUMERO .)
    AND             reduce using rule 45 (expresion -> NUMERO .)
    OR              reduce using rule 45 (expresion -> NUMERO .)
    $end            reduce using rule 45 (expresion -> NUMERO .)
    CPARENT         reduce using rule 45 (expresion -> NUMERO .)
    LLADER          reduce using rule 45 (expresion -> NUMERO .)
    CORDER          reduce using rule 45 (expresion -> NUMERO .)
    DOSPUNTOS       reduce using rule 45 (expresion -> NUMERO .)
    ELSE            reduce using rule 45 (expresion -> NUMERO .)
    ELIF            reduce using rule 45 (expresion -> NUMERO .)
    VARIABLE        reduce using rule 45 (expresion -> NUMERO .)
    FLOTANTE        reduce using rule 45 (expresion -> NUMERO .)
    TRUE            reduce using rule 45 (expresion -> NUMERO .)
    FALSE           reduce using rule 45 (expresion -> NUMERO .)
    APARENT         reduce using rule 45 (expresion -> NUMERO .)
    LLAIZQ          reduce using rule 45 (expresion -> NUMERO .)
    CORIZQ          reduce using rule 45 (expresion -> NUMERO .)
    NOT             reduce using rule 45 (expresion -> NUMERO .)
    NUMERO          reduce using rule 45 (expresion -> NUMERO .)
    CADENACOMILLADOBLE reduce using rule 45 (expresion -> NUMERO .)
    CADENACOMILLASIMPLE reduce using rule 45 (expresion -> NUMERO .)
    DEF             reduce using rule 45 (expresion -> NUMERO .)
    RETURN          reduce using rule 45 (expresion -> NUMERO .)
    IF              reduce using rule 45 (expresion -> NUMERO .)
    PRINT           reduce using rule 45 (expresion -> NUMERO .)
    LEN             reduce using rule 45 (expresion -> NUMERO .)
    INPUT           reduce using rule 45 (expresion -> NUMERO .)
    COMA            reduce using rule 45 (expresion -> NUMERO .)

  ! MAS             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MENOS           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! POR             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 50 (variable -> NUMERO .) ]
  ! POTENCIA        [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MODULO          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MENOR           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MAYOR           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MENORIGUAL      [ reduce using rule 50 (variable -> NUMERO .) ]
  ! MAYORIGUAL      [ reduce using rule 50 (variable -> NUMERO .) ]
  ! DOBLEIGUAL      [ reduce using rule 50 (variable -> NUMERO .) ]
  ! DIFERENTE       [ reduce using rule 50 (variable -> NUMERO .) ]
  ! AND             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! OR              [ reduce using rule 50 (variable -> NUMERO .) ]
  ! $end            [ reduce using rule 50 (variable -> NUMERO .) ]
  ! CPARENT         [ reduce using rule 50 (variable -> NUMERO .) ]
  ! LLADER          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! CORDER          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! DOSPUNTOS       [ reduce using rule 50 (variable -> NUMERO .) ]
  ! ELSE            [ reduce using rule 50 (variable -> NUMERO .) ]
  ! ELIF            [ reduce using rule 50 (variable -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 50 (variable -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 50 (variable -> NUMERO .) ]
  ! TRUE            [ reduce using rule 50 (variable -> NUMERO .) ]
  ! FALSE           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! APARENT         [ reduce using rule 50 (variable -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! NOT             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 50 (variable -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 50 (variable -> NUMERO .) ]
  ! DEF             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! RETURN          [ reduce using rule 50 (variable -> NUMERO .) ]
  ! IF              [ reduce using rule 50 (variable -> NUMERO .) ]
  ! PRINT           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! LEN             [ reduce using rule 50 (variable -> NUMERO .) ]
  ! INPUT           [ reduce using rule 50 (variable -> NUMERO .) ]
  ! COMA            [ reduce using rule 50 (variable -> NUMERO .) ]


state 60

    (51) variable -> FLOTANTE .
    (5) declaracion -> FLOTANTE .

  ! reduce/reduce conflict for AND resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for OR resolved using rule 5 (declaracion -> FLOTANTE .)
    MAS             reduce using rule 51 (variable -> FLOTANTE .)
    MENOS           reduce using rule 51 (variable -> FLOTANTE .)
    POR             reduce using rule 51 (variable -> FLOTANTE .)
    DIVIDIR         reduce using rule 51 (variable -> FLOTANTE .)
    POTENCIA        reduce using rule 51 (variable -> FLOTANTE .)
    MODULO          reduce using rule 51 (variable -> FLOTANTE .)
    MENOR           reduce using rule 51 (variable -> FLOTANTE .)
    MAYOR           reduce using rule 51 (variable -> FLOTANTE .)
    MENORIGUAL      reduce using rule 51 (variable -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 51 (variable -> FLOTANTE .)
    DOBLEIGUAL      reduce using rule 51 (variable -> FLOTANTE .)
    DIFERENTE       reduce using rule 51 (variable -> FLOTANTE .)
    $end            reduce using rule 51 (variable -> FLOTANTE .)
    CPARENT         reduce using rule 51 (variable -> FLOTANTE .)
    LLADER          reduce using rule 51 (variable -> FLOTANTE .)
    CORDER          reduce using rule 51 (variable -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 51 (variable -> FLOTANTE .)
    ELSE            reduce using rule 51 (variable -> FLOTANTE .)
    ELIF            reduce using rule 51 (variable -> FLOTANTE .)
    VARIABLE        reduce using rule 51 (variable -> FLOTANTE .)
    FLOTANTE        reduce using rule 51 (variable -> FLOTANTE .)
    TRUE            reduce using rule 51 (variable -> FLOTANTE .)
    FALSE           reduce using rule 51 (variable -> FLOTANTE .)
    APARENT         reduce using rule 51 (variable -> FLOTANTE .)
    LLAIZQ          reduce using rule 51 (variable -> FLOTANTE .)
    CORIZQ          reduce using rule 51 (variable -> FLOTANTE .)
    NOT             reduce using rule 51 (variable -> FLOTANTE .)
    NUMERO          reduce using rule 51 (variable -> FLOTANTE .)
    CADENACOMILLADOBLE reduce using rule 51 (variable -> FLOTANTE .)
    CADENACOMILLASIMPLE reduce using rule 51 (variable -> FLOTANTE .)
    DEF             reduce using rule 51 (variable -> FLOTANTE .)
    RETURN          reduce using rule 51 (variable -> FLOTANTE .)
    IF              reduce using rule 51 (variable -> FLOTANTE .)
    PRINT           reduce using rule 51 (variable -> FLOTANTE .)
    LEN             reduce using rule 51 (variable -> FLOTANTE .)
    INPUT           reduce using rule 51 (variable -> FLOTANTE .)
    COMA            reduce using rule 51 (variable -> FLOTANTE .)
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)

  ! AND             [ reduce using rule 51 (variable -> FLOTANTE .) ]
  ! OR              [ reduce using rule 51 (variable -> FLOTANTE .) ]


state 61

    (52) variable -> expr_funcion .
    (6) declaracion -> expr_funcion .

  ! reduce/reduce conflict for AND resolved using rule 6 (declaracion -> expr_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 6 (declaracion -> expr_funcion .)
    MAS             reduce using rule 52 (variable -> expr_funcion .)
    MENOS           reduce using rule 52 (variable -> expr_funcion .)
    POR             reduce using rule 52 (variable -> expr_funcion .)
    DIVIDIR         reduce using rule 52 (variable -> expr_funcion .)
    POTENCIA        reduce using rule 52 (variable -> expr_funcion .)
    MODULO          reduce using rule 52 (variable -> expr_funcion .)
    MENOR           reduce using rule 52 (variable -> expr_funcion .)
    MAYOR           reduce using rule 52 (variable -> expr_funcion .)
    MENORIGUAL      reduce using rule 52 (variable -> expr_funcion .)
    MAYORIGUAL      reduce using rule 52 (variable -> expr_funcion .)
    DOBLEIGUAL      reduce using rule 52 (variable -> expr_funcion .)
    DIFERENTE       reduce using rule 52 (variable -> expr_funcion .)
    $end            reduce using rule 52 (variable -> expr_funcion .)
    CPARENT         reduce using rule 52 (variable -> expr_funcion .)
    LLADER          reduce using rule 52 (variable -> expr_funcion .)
    CORDER          reduce using rule 52 (variable -> expr_funcion .)
    DOSPUNTOS       reduce using rule 52 (variable -> expr_funcion .)
    ELSE            reduce using rule 52 (variable -> expr_funcion .)
    ELIF            reduce using rule 52 (variable -> expr_funcion .)
    VARIABLE        reduce using rule 52 (variable -> expr_funcion .)
    FLOTANTE        reduce using rule 52 (variable -> expr_funcion .)
    TRUE            reduce using rule 52 (variable -> expr_funcion .)
    FALSE           reduce using rule 52 (variable -> expr_funcion .)
    APARENT         reduce using rule 52 (variable -> expr_funcion .)
    LLAIZQ          reduce using rule 52 (variable -> expr_funcion .)
    CORIZQ          reduce using rule 52 (variable -> expr_funcion .)
    NOT             reduce using rule 52 (variable -> expr_funcion .)
    NUMERO          reduce using rule 52 (variable -> expr_funcion .)
    CADENACOMILLADOBLE reduce using rule 52 (variable -> expr_funcion .)
    CADENACOMILLASIMPLE reduce using rule 52 (variable -> expr_funcion .)
    DEF             reduce using rule 52 (variable -> expr_funcion .)
    RETURN          reduce using rule 52 (variable -> expr_funcion .)
    IF              reduce using rule 52 (variable -> expr_funcion .)
    PRINT           reduce using rule 52 (variable -> expr_funcion .)
    LEN             reduce using rule 52 (variable -> expr_funcion .)
    INPUT           reduce using rule 52 (variable -> expr_funcion .)
    COMA            reduce using rule 52 (variable -> expr_funcion .)
    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)

  ! AND             [ reduce using rule 52 (variable -> expr_funcion .) ]
  ! OR              [ reduce using rule 52 (variable -> expr_funcion .) ]


state 62

    (53) variable -> expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 53 (variable -> expresion .)
    CPARENT         reduce using rule 53 (variable -> expresion .)
    LLADER          reduce using rule 53 (variable -> expresion .)
    CORDER          reduce using rule 53 (variable -> expresion .)
    DOSPUNTOS       reduce using rule 53 (variable -> expresion .)
    ELSE            reduce using rule 53 (variable -> expresion .)
    ELIF            reduce using rule 53 (variable -> expresion .)
    VARIABLE        reduce using rule 53 (variable -> expresion .)
    FLOTANTE        reduce using rule 53 (variable -> expresion .)
    TRUE            reduce using rule 53 (variable -> expresion .)
    FALSE           reduce using rule 53 (variable -> expresion .)
    APARENT         reduce using rule 53 (variable -> expresion .)
    LLAIZQ          reduce using rule 53 (variable -> expresion .)
    CORIZQ          reduce using rule 53 (variable -> expresion .)
    NOT             reduce using rule 53 (variable -> expresion .)
    NUMERO          reduce using rule 53 (variable -> expresion .)
    CADENACOMILLADOBLE reduce using rule 53 (variable -> expresion .)
    CADENACOMILLASIMPLE reduce using rule 53 (variable -> expresion .)
    DEF             reduce using rule 53 (variable -> expresion .)
    RETURN          reduce using rule 53 (variable -> expresion .)
    IF              reduce using rule 53 (variable -> expresion .)
    PRINT           reduce using rule 53 (variable -> expresion .)
    LEN             reduce using rule 53 (variable -> expresion .)
    INPUT           reduce using rule 53 (variable -> expresion .)
    COMA            reduce using rule 53 (variable -> expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 53 (variable -> expresion .) ]
  ! MENOS           [ reduce using rule 53 (variable -> expresion .) ]
  ! POR             [ reduce using rule 53 (variable -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 53 (variable -> expresion .) ]
  ! POTENCIA        [ reduce using rule 53 (variable -> expresion .) ]
  ! MODULO          [ reduce using rule 53 (variable -> expresion .) ]
  ! MENOR           [ reduce using rule 53 (variable -> expresion .) ]
  ! MAYOR           [ reduce using rule 53 (variable -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 53 (variable -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 53 (variable -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 53 (variable -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 53 (variable -> expresion .) ]
  ! AND             [ reduce using rule 53 (variable -> expresion .) ]
  ! OR              [ reduce using rule 53 (variable -> expresion .) ]


state 63

    (54) variable -> lista .
    (7) declaracion -> lista .

  ! reduce/reduce conflict for AND resolved using rule 7 (declaracion -> lista .)
  ! reduce/reduce conflict for OR resolved using rule 7 (declaracion -> lista .)
    MAS             reduce using rule 54 (variable -> lista .)
    MENOS           reduce using rule 54 (variable -> lista .)
    POR             reduce using rule 54 (variable -> lista .)
    DIVIDIR         reduce using rule 54 (variable -> lista .)
    POTENCIA        reduce using rule 54 (variable -> lista .)
    MODULO          reduce using rule 54 (variable -> lista .)
    MENOR           reduce using rule 54 (variable -> lista .)
    MAYOR           reduce using rule 54 (variable -> lista .)
    MENORIGUAL      reduce using rule 54 (variable -> lista .)
    MAYORIGUAL      reduce using rule 54 (variable -> lista .)
    DOBLEIGUAL      reduce using rule 54 (variable -> lista .)
    DIFERENTE       reduce using rule 54 (variable -> lista .)
    $end            reduce using rule 54 (variable -> lista .)
    CPARENT         reduce using rule 54 (variable -> lista .)
    LLADER          reduce using rule 54 (variable -> lista .)
    CORDER          reduce using rule 54 (variable -> lista .)
    DOSPUNTOS       reduce using rule 54 (variable -> lista .)
    ELSE            reduce using rule 54 (variable -> lista .)
    ELIF            reduce using rule 54 (variable -> lista .)
    VARIABLE        reduce using rule 54 (variable -> lista .)
    FLOTANTE        reduce using rule 54 (variable -> lista .)
    TRUE            reduce using rule 54 (variable -> lista .)
    FALSE           reduce using rule 54 (variable -> lista .)
    APARENT         reduce using rule 54 (variable -> lista .)
    LLAIZQ          reduce using rule 54 (variable -> lista .)
    CORIZQ          reduce using rule 54 (variable -> lista .)
    NOT             reduce using rule 54 (variable -> lista .)
    NUMERO          reduce using rule 54 (variable -> lista .)
    CADENACOMILLADOBLE reduce using rule 54 (variable -> lista .)
    CADENACOMILLASIMPLE reduce using rule 54 (variable -> lista .)
    DEF             reduce using rule 54 (variable -> lista .)
    RETURN          reduce using rule 54 (variable -> lista .)
    IF              reduce using rule 54 (variable -> lista .)
    PRINT           reduce using rule 54 (variable -> lista .)
    LEN             reduce using rule 54 (variable -> lista .)
    INPUT           reduce using rule 54 (variable -> lista .)
    COMA            reduce using rule 54 (variable -> lista .)
    AND             reduce using rule 7 (declaracion -> lista .)
    OR              reduce using rule 7 (declaracion -> lista .)

  ! AND             [ reduce using rule 54 (variable -> lista .) ]
  ! OR              [ reduce using rule 54 (variable -> lista .) ]


state 64

    (64) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno
    (67) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (24) expresion -> APARENT . expresion CPARENT
    (33) expresion -> APARENT . expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT . expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT . expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT . expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT . expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT . expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (42) expresion -> APARENT . declaracion AND declaracion CPARENT
    (43) expresion -> APARENT . declaracion OR declaracion CPARENT
    (44) expresion -> APARENT . NOT declaracion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    NOT             shift and go to state 51
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 97
    declaracion                    shift and go to state 50
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 65

    (65) if -> IF expresion . DOSPUNTOS codigo_interno
    (66) if -> IF expresion . DOSPUNTOS
    (68) if -> IF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    DOSPUNTOS       shift and go to state 98
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 66

    (74) expr_print -> PRINT APARENT . VARIABLE CPARENT
    (75) expr_print -> PRINT APARENT . expresion CPARENT
    (76) expr_print -> PRINT APARENT . expresion MAS VARIABLE CPARENT
    (77) expr_print -> PRINT APARENT . expresion MAS NUMERO CPARENT
    (78) expr_print -> PRINT APARENT . expresion MAS FLOTANTE CPARENT
    (79) expr_print -> PRINT APARENT . expresion COMA expr_funcion CPARENT
    (80) expr_print -> PRINT APARENT . expresion COMA NUMERO CPARENT
    (81) expr_print -> PRINT APARENT . expresion COMA FLOTANTE CPARENT
    (82) expr_print -> PRINT APARENT . expresion COMA VARIABLE CPARENT
    (83) expr_print -> PRINT APARENT . expresion COMA expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 99
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 100
    expr_funcion                   shift and go to state 5
    declaracion                    shift and go to state 48
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 67

    (90) len -> LEN APARENT . VARIABLE CPARENT

    VARIABLE        shift and go to state 101


state 68

    (91) input -> INPUT APARENT . CADENACOMILLADOBLE CPARENT
    (92) input -> INPUT APARENT . CADENACOMILLASIMPLE CPARENT

    CADENACOMILLADOBLE shift and go to state 102
    CADENACOMILLASIMPLE shift and go to state 103


state 69

    (39) expresion -> declaracion AND declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENOS           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    POR             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DIVIDIR         reduce using rule 39 (expresion -> declaracion AND declaracion .)
    POTENCIA        reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MODULO          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENOR           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MAYOR           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENORIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DOBLEIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DIFERENTE       reduce using rule 39 (expresion -> declaracion AND declaracion .)
    $end            reduce using rule 39 (expresion -> declaracion AND declaracion .)
    CPARENT         reduce using rule 39 (expresion -> declaracion AND declaracion .)
    LLADER          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    CORDER          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DOSPUNTOS       reduce using rule 39 (expresion -> declaracion AND declaracion .)
    ELSE            reduce using rule 39 (expresion -> declaracion AND declaracion .)
    ELIF            reduce using rule 39 (expresion -> declaracion AND declaracion .)
    VARIABLE        reduce using rule 39 (expresion -> declaracion AND declaracion .)
    FLOTANTE        reduce using rule 39 (expresion -> declaracion AND declaracion .)
    TRUE            reduce using rule 39 (expresion -> declaracion AND declaracion .)
    FALSE           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    APARENT         reduce using rule 39 (expresion -> declaracion AND declaracion .)
    LLAIZQ          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    CORIZQ          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    NOT             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    NUMERO          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    CADENACOMILLADOBLE reduce using rule 39 (expresion -> declaracion AND declaracion .)
    CADENACOMILLASIMPLE reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DEF             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    RETURN          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    IF              reduce using rule 39 (expresion -> declaracion AND declaracion .)
    PRINT           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    LEN             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    INPUT           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    COMA            reduce using rule 39 (expresion -> declaracion AND declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! AND             [ reduce using rule 39 (expresion -> declaracion AND declaracion .) ]
  ! OR              [ reduce using rule 39 (expresion -> declaracion AND declaracion .) ]


state 70

    (40) expresion -> declaracion OR declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENOS           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    POR             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DIVIDIR         reduce using rule 40 (expresion -> declaracion OR declaracion .)
    POTENCIA        reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MODULO          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENOR           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MAYOR           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENORIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MAYORIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DOBLEIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DIFERENTE       reduce using rule 40 (expresion -> declaracion OR declaracion .)
    $end            reduce using rule 40 (expresion -> declaracion OR declaracion .)
    CPARENT         reduce using rule 40 (expresion -> declaracion OR declaracion .)
    LLADER          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    CORDER          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DOSPUNTOS       reduce using rule 40 (expresion -> declaracion OR declaracion .)
    ELSE            reduce using rule 40 (expresion -> declaracion OR declaracion .)
    ELIF            reduce using rule 40 (expresion -> declaracion OR declaracion .)
    VARIABLE        reduce using rule 40 (expresion -> declaracion OR declaracion .)
    FLOTANTE        reduce using rule 40 (expresion -> declaracion OR declaracion .)
    TRUE            reduce using rule 40 (expresion -> declaracion OR declaracion .)
    FALSE           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    APARENT         reduce using rule 40 (expresion -> declaracion OR declaracion .)
    LLAIZQ          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    CORIZQ          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    NOT             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    NUMERO          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    CADENACOMILLADOBLE reduce using rule 40 (expresion -> declaracion OR declaracion .)
    CADENACOMILLASIMPLE reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DEF             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    RETURN          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    IF              reduce using rule 40 (expresion -> declaracion OR declaracion .)
    PRINT           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    LEN             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    INPUT           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    COMA            reduce using rule 40 (expresion -> declaracion OR declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! AND             [ reduce using rule 40 (expresion -> declaracion OR declaracion .) ]
  ! OR              [ reduce using rule 40 (expresion -> declaracion OR declaracion .) ]


state 71

    (1) declaracion -> VARIABLE ASIGNACION expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MODULO resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for OR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for $end resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CPARENT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LLADER resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for ELIF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for TRUE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for FALSE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for APARENT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for NOT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for NUMERO resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DEF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for IF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LEN resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for INPUT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    AND             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    OR              reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    $end            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    POTENCIA        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MODULO          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MENOR           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAYOR           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MENORIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAYORIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DOBLEIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DIFERENTE       reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CPARENT         reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LLADER          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CORDER          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DOSPUNTOS       reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    ELSE            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    ELIF            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    VARIABLE        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    FLOTANTE        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    TRUE            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    FALSE           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    APARENT         reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LLAIZQ          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CORIZQ          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    NOT             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    NUMERO          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CADENACOMILLADOBLE reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CADENACOMILLASIMPLE reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DEF             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    RETURN          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    IF              reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    PRINT           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LEN             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    INPUT           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    COMA            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38

  ! MAS             [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! MENOS           [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! POR             [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! DIVIDIR         [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]
  ! MAS             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOS           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POR             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POTENCIA        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MODULO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 3 (declaracion -> expresion .) ]
  ! AND             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! OR              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! $end            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CPARENT         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LLADER          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CORDER          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 3 (declaracion -> expresion .) ]
  ! ELSE            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! ELIF            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! VARIABLE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FLOTANTE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! TRUE            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FALSE           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! APARENT         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LLAIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CORIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NOT             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NUMERO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DEF             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! RETURN          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IF              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! PRINT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LEN             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! INPUT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! COMA            [ reduce using rule 3 (declaracion -> expresion .) ]


state 72

    (2) declaracion -> VARIABLE ASIGNACION declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

    AND             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    OR              reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    $end            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAS             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENOS           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    POR             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DIVIDIR         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    POTENCIA        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MODULO          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENOR           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAYOR           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENORIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAYORIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DOBLEIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DIFERENTE       reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CPARENT         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LLADER          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CORDER          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DOSPUNTOS       reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    ELSE            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    ELIF            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    VARIABLE        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    FLOTANTE        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    TRUE            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    FALSE           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    APARENT         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LLAIZQ          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CORIZQ          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    NOT             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    NUMERO          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CADENACOMILLADOBLE reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CADENACOMILLASIMPLE reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DEF             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    RETURN          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    IF              reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    PRINT           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LEN             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    INPUT           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    COMA            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)

  ! AND             [ shift and go to state 30 ]
  ! OR              [ shift and go to state 31 ]


state 73

    (57) lista -> VARIABLE ASIGNACION CORIZQ . CORDER
    (58) lista -> VARIABLE ASIGNACION CORIZQ . NUMERO CORDER
    (59) lista -> VARIABLE ASIGNACION CORIZQ . VARIABLE CORDER
    (26) expresion -> CORIZQ . expresion CORDER
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    CORDER          shift and go to state 105
    NUMERO          shift and go to state 106
    VARIABLE        shift and go to state 104
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 53
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 74

    (48) expr_funcion -> VARIABLE APARENT params . CPARENT
    (56) params -> params . COMA params

    CPARENT         shift and go to state 107
    COMA            shift and go to state 108


state 75

    (55) params -> variable .

    CPARENT         reduce using rule 55 (params -> variable .)
    COMA            reduce using rule 55 (params -> variable .)


state 76

    (84) append -> VARIABLE PUNTO APPEND . APARENT VARIABLE CPARENT
    (85) append -> VARIABLE PUNTO APPEND . APARENT NUMERO CPARENT
    (86) append -> VARIABLE PUNTO APPEND . APARENT FLOTANTE CPARENT

    APARENT         shift and go to state 109


state 77

    (17) expresion -> expresion MAS expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 17 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 17 (expresion -> expresion MAS expresion .)
    POTENCIA        reduce using rule 17 (expresion -> expresion MAS expresion .)
    MODULO          reduce using rule 17 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 17 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 17 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 17 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 17 (expresion -> expresion MAS expresion .)
    DOBLEIGUAL      reduce using rule 17 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 17 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 17 (expresion -> expresion MAS expresion .)
    CPARENT         reduce using rule 17 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 17 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 17 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 17 (expresion -> expresion MAS expresion .)
    ELSE            reduce using rule 17 (expresion -> expresion MAS expresion .)
    ELIF            reduce using rule 17 (expresion -> expresion MAS expresion .)
    VARIABLE        reduce using rule 17 (expresion -> expresion MAS expresion .)
    FLOTANTE        reduce using rule 17 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 17 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 17 (expresion -> expresion MAS expresion .)
    APARENT         reduce using rule 17 (expresion -> expresion MAS expresion .)
    LLAIZQ          reduce using rule 17 (expresion -> expresion MAS expresion .)
    CORIZQ          reduce using rule 17 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 17 (expresion -> expresion MAS expresion .)
    NUMERO          reduce using rule 17 (expresion -> expresion MAS expresion .)
    CADENACOMILLADOBLE reduce using rule 17 (expresion -> expresion MAS expresion .)
    CADENACOMILLASIMPLE reduce using rule 17 (expresion -> expresion MAS expresion .)
    DEF             reduce using rule 17 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 17 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 17 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 17 (expresion -> expresion MAS expresion .)
    LEN             reduce using rule 17 (expresion -> expresion MAS expresion .)
    INPUT           reduce using rule 17 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 17 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! POR             [ reduce using rule 17 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIR         [ reduce using rule 17 (expresion -> expresion MAS expresion .) ]
  ! AND             [ reduce using rule 17 (expresion -> expresion MAS expresion .) ]
  ! OR              [ reduce using rule 17 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 35 ]
  ! MENOS           [ shift and go to state 36 ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]


state 78

    (18) expresion -> expresion MENOS expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    POTENCIA        reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MODULO          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 18 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 18 (expresion -> expresion MENOS expresion .)
    DOBLEIGUAL      reduce using rule 18 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 18 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 18 (expresion -> expresion MENOS expresion .)
    CPARENT         reduce using rule 18 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 18 (expresion -> expresion MENOS expresion .)
    ELSE            reduce using rule 18 (expresion -> expresion MENOS expresion .)
    ELIF            reduce using rule 18 (expresion -> expresion MENOS expresion .)
    VARIABLE        reduce using rule 18 (expresion -> expresion MENOS expresion .)
    FLOTANTE        reduce using rule 18 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 18 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    APARENT         reduce using rule 18 (expresion -> expresion MENOS expresion .)
    LLAIZQ          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    CORIZQ          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 18 (expresion -> expresion MENOS expresion .)
    NUMERO          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    CADENACOMILLADOBLE reduce using rule 18 (expresion -> expresion MENOS expresion .)
    CADENACOMILLASIMPLE reduce using rule 18 (expresion -> expresion MENOS expresion .)
    DEF             reduce using rule 18 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 18 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 18 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    LEN             reduce using rule 18 (expresion -> expresion MENOS expresion .)
    INPUT           reduce using rule 18 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 18 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! POR             [ reduce using rule 18 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 18 (expresion -> expresion MENOS expresion .) ]
  ! AND             [ reduce using rule 18 (expresion -> expresion MENOS expresion .) ]
  ! OR              [ reduce using rule 18 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 35 ]
  ! MENOS           [ shift and go to state 36 ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]


state 79

    (19) expresion -> expresion POR expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 19 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 19 (expresion -> expresion POR expresion .)
    POR             reduce using rule 19 (expresion -> expresion POR expresion .)
    DIVIDIR         reduce using rule 19 (expresion -> expresion POR expresion .)
    POTENCIA        reduce using rule 19 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 19 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 19 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 19 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 19 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 19 (expresion -> expresion POR expresion .)
    DOBLEIGUAL      reduce using rule 19 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 19 (expresion -> expresion POR expresion .)
    $end            reduce using rule 19 (expresion -> expresion POR expresion .)
    CPARENT         reduce using rule 19 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 19 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 19 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 19 (expresion -> expresion POR expresion .)
    ELSE            reduce using rule 19 (expresion -> expresion POR expresion .)
    ELIF            reduce using rule 19 (expresion -> expresion POR expresion .)
    VARIABLE        reduce using rule 19 (expresion -> expresion POR expresion .)
    FLOTANTE        reduce using rule 19 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 19 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 19 (expresion -> expresion POR expresion .)
    APARENT         reduce using rule 19 (expresion -> expresion POR expresion .)
    LLAIZQ          reduce using rule 19 (expresion -> expresion POR expresion .)
    CORIZQ          reduce using rule 19 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 19 (expresion -> expresion POR expresion .)
    NUMERO          reduce using rule 19 (expresion -> expresion POR expresion .)
    CADENACOMILLADOBLE reduce using rule 19 (expresion -> expresion POR expresion .)
    CADENACOMILLASIMPLE reduce using rule 19 (expresion -> expresion POR expresion .)
    DEF             reduce using rule 19 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 19 (expresion -> expresion POR expresion .)
    IF              reduce using rule 19 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 19 (expresion -> expresion POR expresion .)
    LEN             reduce using rule 19 (expresion -> expresion POR expresion .)
    INPUT           reduce using rule 19 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 19 (expresion -> expresion POR expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 19 (expresion -> expresion POR expresion .) ]
  ! OR              [ reduce using rule 19 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 35 ]
  ! MENOS           [ shift and go to state 36 ]
  ! POR             [ shift and go to state 37 ]
  ! DIVIDIR         [ shift and go to state 38 ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]


state 80

    (20) expresion -> expresion DIVIDIR expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MENOS           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    POR             reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    DIVIDIR         reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    POTENCIA        reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MODULO          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MENOR           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MAYOR           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MENORIGUAL      reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    MAYORIGUAL      reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    DOBLEIGUAL      reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    DIFERENTE       reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    $end            reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    CPARENT         reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    LLADER          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    CORDER          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    DOSPUNTOS       reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    ELSE            reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    ELIF            reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    VARIABLE        reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    FLOTANTE        reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    TRUE            reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    FALSE           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    APARENT         reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    LLAIZQ          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    CORIZQ          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    NOT             reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    NUMERO          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    CADENACOMILLADOBLE reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    CADENACOMILLASIMPLE reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    DEF             reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    RETURN          reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    IF              reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    PRINT           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    LEN             reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    INPUT           reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    COMA            reduce using rule 20 (expresion -> expresion DIVIDIR expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 20 (expresion -> expresion DIVIDIR expresion .) ]
  ! OR              [ reduce using rule 20 (expresion -> expresion DIVIDIR expresion .) ]
  ! MAS             [ shift and go to state 35 ]
  ! MENOS           [ shift and go to state 36 ]
  ! POR             [ shift and go to state 37 ]
  ! DIVIDIR         [ shift and go to state 38 ]
  ! POTENCIA        [ shift and go to state 39 ]
  ! MODULO          [ shift and go to state 40 ]
  ! MENOR           [ shift and go to state 41 ]
  ! MAYOR           [ shift and go to state 42 ]
  ! MENORIGUAL      [ shift and go to state 43 ]
  ! MAYORIGUAL      [ shift and go to state 44 ]
  ! DOBLEIGUAL      [ shift and go to state 45 ]
  ! DIFERENTE       [ shift and go to state 46 ]


state 81

    (21) expresion -> expresion POTENCIA expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    CPARENT         reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    ELSE            reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    ELIF            reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    VARIABLE        reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    FLOTANTE        reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    TRUE            reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    FALSE           reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    APARENT         reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    LLAIZQ          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    CORIZQ          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    NOT             reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    NUMERO          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    CADENACOMILLADOBLE reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    CADENACOMILLASIMPLE reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    DEF             reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    RETURN          reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    IF              reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    PRINT           reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    LEN             reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    INPUT           reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 21 (expresion -> expresion POTENCIA expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOS           [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! POR             [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! DIVIDIR         [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! POTENCIA        [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MODULO          [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOR           [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYOR           [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! DIFERENTE       [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! AND             [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]
  ! OR              [ reduce using rule 21 (expresion -> expresion POTENCIA expresion .) ]


state 82

    (22) expresion -> expresion MODULO expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 22 (expresion -> expresion MODULO expresion .)
    CPARENT         reduce using rule 22 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 22 (expresion -> expresion MODULO expresion .)
    ELSE            reduce using rule 22 (expresion -> expresion MODULO expresion .)
    ELIF            reduce using rule 22 (expresion -> expresion MODULO expresion .)
    VARIABLE        reduce using rule 22 (expresion -> expresion MODULO expresion .)
    FLOTANTE        reduce using rule 22 (expresion -> expresion MODULO expresion .)
    TRUE            reduce using rule 22 (expresion -> expresion MODULO expresion .)
    FALSE           reduce using rule 22 (expresion -> expresion MODULO expresion .)
    APARENT         reduce using rule 22 (expresion -> expresion MODULO expresion .)
    LLAIZQ          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    CORIZQ          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    NOT             reduce using rule 22 (expresion -> expresion MODULO expresion .)
    NUMERO          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    CADENACOMILLADOBLE reduce using rule 22 (expresion -> expresion MODULO expresion .)
    CADENACOMILLASIMPLE reduce using rule 22 (expresion -> expresion MODULO expresion .)
    DEF             reduce using rule 22 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 22 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 22 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 22 (expresion -> expresion MODULO expresion .)
    LEN             reduce using rule 22 (expresion -> expresion MODULO expresion .)
    INPUT           reduce using rule 22 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 22 (expresion -> expresion MODULO expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MENOS           [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! POR             [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! DIVIDIR         [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! POTENCIA        [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MODULO          [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MENOR           [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MAYOR           [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! DIFERENTE       [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! AND             [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]
  ! OR              [ reduce using rule 22 (expresion -> expresion MODULO expresion .) ]


state 83

    (27) expresion -> expresion MENOR expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 27 (expresion -> expresion MENOR expresion .)
    CPARENT         reduce using rule 27 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    DOSPUNTOS       reduce using rule 27 (expresion -> expresion MENOR expresion .)
    ELSE            reduce using rule 27 (expresion -> expresion MENOR expresion .)
    ELIF            reduce using rule 27 (expresion -> expresion MENOR expresion .)
    VARIABLE        reduce using rule 27 (expresion -> expresion MENOR expresion .)
    FLOTANTE        reduce using rule 27 (expresion -> expresion MENOR expresion .)
    TRUE            reduce using rule 27 (expresion -> expresion MENOR expresion .)
    FALSE           reduce using rule 27 (expresion -> expresion MENOR expresion .)
    APARENT         reduce using rule 27 (expresion -> expresion MENOR expresion .)
    LLAIZQ          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    CORIZQ          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    NOT             reduce using rule 27 (expresion -> expresion MENOR expresion .)
    NUMERO          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    CADENACOMILLADOBLE reduce using rule 27 (expresion -> expresion MENOR expresion .)
    CADENACOMILLASIMPLE reduce using rule 27 (expresion -> expresion MENOR expresion .)
    DEF             reduce using rule 27 (expresion -> expresion MENOR expresion .)
    RETURN          reduce using rule 27 (expresion -> expresion MENOR expresion .)
    IF              reduce using rule 27 (expresion -> expresion MENOR expresion .)
    PRINT           reduce using rule 27 (expresion -> expresion MENOR expresion .)
    LEN             reduce using rule 27 (expresion -> expresion MENOR expresion .)
    INPUT           reduce using rule 27 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 27 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MENOR           [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! AND             [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]
  ! OR              [ reduce using rule 27 (expresion -> expresion MENOR expresion .) ]


state 84

    (28) expresion -> expresion MAYOR expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    CPARENT         reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOS       reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    ELSE            reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    ELIF            reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    VARIABLE        reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    FLOTANTE        reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    TRUE            reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    FALSE           reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    APARENT         reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    LLAIZQ          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    CORIZQ          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    NOT             reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    NUMERO          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    CADENACOMILLADOBLE reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    CADENACOMILLASIMPLE reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    DEF             reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    RETURN          reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    IF              reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    PRINT           reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    LEN             reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    INPUT           reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 28 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MENOR           [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! AND             [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]
  ! OR              [ reduce using rule 28 (expresion -> expresion MAYOR expresion .) ]


state 85

    (29) expresion -> expresion MENORIGUAL expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    CPARENT         reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    ELSE            reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    ELIF            reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    VARIABLE        reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    FLOTANTE        reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    TRUE            reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    FALSE           reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    APARENT         reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    LLAIZQ          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    CORIZQ          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    NOT             reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    NUMERO          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    CADENACOMILLADOBLE reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    CADENACOMILLASIMPLE reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    DEF             reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    LEN             reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    INPUT           reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! AND             [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]
  ! OR              [ reduce using rule 29 (expresion -> expresion MENORIGUAL expresion .) ]


state 86

    (30) expresion -> expresion MAYORIGUAL expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    CPARENT         reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    ELSE            reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    ELIF            reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    VARIABLE        reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    FLOTANTE        reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    TRUE            reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    FALSE           reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    APARENT         reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    LLAIZQ          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    CORIZQ          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    NOT             reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    NUMERO          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    CADENACOMILLADOBLE reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    CADENACOMILLASIMPLE reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    DEF             reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    LEN             reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    INPUT           reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! AND             [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! OR              [ reduce using rule 30 (expresion -> expresion MAYORIGUAL expresion .) ]


state 87

    (31) expresion -> expresion DOBLEIGUAL expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    CPARENT         reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    LLADER          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    CORDER          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    DOSPUNTOS       reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    ELSE            reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    ELIF            reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    VARIABLE        reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    FLOTANTE        reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    TRUE            reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    FALSE           reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    APARENT         reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    LLAIZQ          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    CORIZQ          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    NOT             reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    NUMERO          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    CADENACOMILLADOBLE reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    CADENACOMILLASIMPLE reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    DEF             reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    RETURN          reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    IF              reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    PRINT           reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    LEN             reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    INPUT           reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    COMA            reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! POR             [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! AND             [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! OR              [ reduce using rule 31 (expresion -> expresion DOBLEIGUAL expresion .) ]


state 88

    (32) expresion -> expresion DIFERENTE expresion .
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    CPARENT         reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    LLADER          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    DOSPUNTOS       reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    ELSE            reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    ELIF            reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    VARIABLE        reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    FLOTANTE        reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    TRUE            reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    FALSE           reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    APARENT         reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    LLAIZQ          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    CORIZQ          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    NOT             reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    NUMERO          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    CADENACOMILLADOBLE reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    CADENACOMILLASIMPLE reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    DEF             reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    RETURN          reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    IF              reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    PRINT           reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    LEN             reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    INPUT           reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 32 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! MAS             [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVIDIR         [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOR           [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 32 (expresion -> expresion DIFERENTE expresion .) ]


state 89

    (24) expresion -> APARENT expresion CPARENT .
    (33) expresion -> APARENT expresion CPARENT . MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT expresion CPARENT . MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT expresion CPARENT . MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT expresion CPARENT . MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT expresion CPARENT . DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT expresion CPARENT . DIFERENTE APARENT expresion CPARENT

  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    MAS             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MENOS           reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    POR             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MODULO          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    AND             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    OR              reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    $end            reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    CPARENT         reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    LLADER          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    CORDER          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    ELSE            reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    ELIF            reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    TRUE            reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    FALSE           reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    APARENT         reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    NOT             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    NUMERO          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    DEF             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    RETURN          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    IF              reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    PRINT           reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    LEN             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    INPUT           reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    COMA            reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MENOR           shift and go to state 110
    MAYOR           shift and go to state 111
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    DOBLEIGUAL      shift and go to state 114
    DIFERENTE       shift and go to state 115

  ! MENOR           [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYOR           [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MENORIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYORIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! DOBLEIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! DIFERENTE       [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]


state 90

    (42) expresion -> APARENT declaracion AND . declaracion CPARENT
    (39) expresion -> declaracion AND . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 116
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 91

    (43) expresion -> APARENT declaracion OR . declaracion CPARENT
    (40) expresion -> declaracion OR . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    declaracion                    shift and go to state 117
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 92

    (44) expresion -> APARENT NOT declaracion . CPARENT
    (41) expresion -> NOT declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 118
    MAS             reduce using rule 41 (expresion -> NOT declaracion .)
    MENOS           reduce using rule 41 (expresion -> NOT declaracion .)
    POR             reduce using rule 41 (expresion -> NOT declaracion .)
    DIVIDIR         reduce using rule 41 (expresion -> NOT declaracion .)
    POTENCIA        reduce using rule 41 (expresion -> NOT declaracion .)
    MODULO          reduce using rule 41 (expresion -> NOT declaracion .)
    MENOR           reduce using rule 41 (expresion -> NOT declaracion .)
    MAYOR           reduce using rule 41 (expresion -> NOT declaracion .)
    MENORIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    MAYORIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    DOBLEIGUAL      reduce using rule 41 (expresion -> NOT declaracion .)
    DIFERENTE       reduce using rule 41 (expresion -> NOT declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! CPARENT         [ reduce using rule 41 (expresion -> NOT declaracion .) ]
  ! AND             [ reduce using rule 41 (expresion -> NOT declaracion .) ]
  ! OR              [ reduce using rule 41 (expresion -> NOT declaracion .) ]


state 93

    (25) expresion -> LLAIZQ expresion LLADER .

    MAS             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MENOS           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    POR             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    DIVIDIR         reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    POTENCIA        reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MODULO          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MENOR           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MAYOR           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MENORIGUAL      reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    MAYORIGUAL      reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    DOBLEIGUAL      reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    DIFERENTE       reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    AND             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    OR              reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    $end            reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    CPARENT         reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    LLADER          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    CORDER          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    DOSPUNTOS       reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    ELSE            reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    ELIF            reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    VARIABLE        reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    FLOTANTE        reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    TRUE            reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    FALSE           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    APARENT         reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    LLAIZQ          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    CORIZQ          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    NOT             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    NUMERO          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    CADENACOMILLADOBLE reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    CADENACOMILLASIMPLE reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    DEF             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    RETURN          reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    IF              reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    PRINT           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    LEN             reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    INPUT           reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)
    COMA            reduce using rule 25 (expresion -> LLAIZQ expresion LLADER .)


state 94

    (26) expresion -> CORIZQ expresion CORDER .

    MAS             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    POR             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    DIVIDIR         reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    DOBLEIGUAL      reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    AND             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    OR              reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    $end            reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    CPARENT         reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    LLADER          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    ELSE            reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    ELIF            reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    VARIABLE        reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    FLOTANTE        reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    TRUE            reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    FALSE           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    APARENT         reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    LLAIZQ          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    NOT             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    NUMERO          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    CADENACOMILLADOBLE reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    CADENACOMILLASIMPLE reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    DEF             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    RETURN          reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    IF              reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    PRINT           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    LEN             reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    INPUT           reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 26 (expresion -> CORIZQ expresion CORDER .)


state 95

    (60) expr_def_funcion -> DEF expr_funcion DOSPUNTOS .

    AND             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    OR              reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    $end            reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAS             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENOS           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    POR             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DIVIDIR         reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    POTENCIA        reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MODULO          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENOR           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAYOR           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENORIGUAL      reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAYORIGUAL      reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DOBLEIGUAL      reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DIFERENTE       reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CPARENT         reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LLADER          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CORDER          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DOSPUNTOS       reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    ELSE            reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    ELIF            reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    VARIABLE        reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    FLOTANTE        reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    TRUE            reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    FALSE           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    APARENT         reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LLAIZQ          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CORIZQ          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    NOT             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    NUMERO          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CADENACOMILLADOBLE reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CADENACOMILLASIMPLE reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DEF             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    RETURN          reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    IF              reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    PRINT           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LEN             reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    INPUT           reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    COMA            reduce using rule 60 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)


state 96

    (57) lista -> VARIABLE ASIGNACION . CORIZQ CORDER
    (58) lista -> VARIABLE ASIGNACION . CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE ASIGNACION . CORIZQ VARIABLE CORDER
    (1) declaracion -> VARIABLE ASIGNACION . expresion
    (2) declaracion -> VARIABLE ASIGNACION . declaracion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    CORIZQ          shift and go to state 73
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 71
    declaracion                    shift and go to state 72
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 97

    (64) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno
    (67) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (24) expresion -> APARENT expresion . CPARENT
    (33) expresion -> APARENT expresion . CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT expresion . CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT expresion . CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT expresion . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT expresion . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT expresion . CPARENT DIFERENTE APARENT expresion CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 119
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 98

    (65) if -> IF expresion DOSPUNTOS . codigo_interno
    (66) if -> IF expresion DOSPUNTOS .
    (68) if -> IF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    OR              reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    $end            reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MAS             reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    POR             reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    DIVIDIR         reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    POTENCIA        reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MODULO          reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MENOR           reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MAYOR           reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MENORIGUAL      reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    MAYORIGUAL      reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    DOBLEIGUAL      reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    DIFERENTE       reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    CPARENT         reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    LLADER          reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    CORDER          reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    DOSPUNTOS       reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    ELSE            reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    ELIF            reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    COMA            reduce using rule 66 (if -> IF expresion DOSPUNTOS .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! VARIABLE        [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! FLOTANTE        [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! TRUE            [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! FALSE           [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! APARENT         [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! LLAIZQ          [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! CORIZQ          [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! NOT             [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! NUMERO          [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! DEF             [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! RETURN          [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! IF              [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! PRINT           [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! LEN             [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]
  ! INPUT           [ reduce using rule 66 (if -> IF expresion DOSPUNTOS .) ]

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 120
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 99

    (74) expr_print -> PRINT APARENT VARIABLE . CPARENT
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

    CPARENT         shift and go to state 122
    ASIGNACION      shift and go to state 32
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 33
    PUNTO           shift and go to state 34


state 100

    (75) expr_print -> PRINT APARENT expresion . CPARENT
    (76) expr_print -> PRINT APARENT expresion . MAS VARIABLE CPARENT
    (77) expr_print -> PRINT APARENT expresion . MAS NUMERO CPARENT
    (78) expr_print -> PRINT APARENT expresion . MAS FLOTANTE CPARENT
    (79) expr_print -> PRINT APARENT expresion . COMA expr_funcion CPARENT
    (80) expr_print -> PRINT APARENT expresion . COMA NUMERO CPARENT
    (81) expr_print -> PRINT APARENT expresion . COMA FLOTANTE CPARENT
    (82) expr_print -> PRINT APARENT expresion . COMA VARIABLE CPARENT
    (83) expr_print -> PRINT APARENT expresion . COMA expresion CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 123
    MAS             shift and go to state 124
    COMA            shift and go to state 125
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 101

    (90) len -> LEN APARENT VARIABLE . CPARENT

    CPARENT         shift and go to state 126


state 102

    (91) input -> INPUT APARENT CADENACOMILLADOBLE . CPARENT

    CPARENT         shift and go to state 127


state 103

    (92) input -> INPUT APARENT CADENACOMILLASIMPLE . CPARENT

    CPARENT         shift and go to state 128


state 104

    (59) lista -> VARIABLE ASIGNACION CORIZQ VARIABLE . CORDER
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

    CORDER          shift and go to state 129
    ASIGNACION      shift and go to state 32
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 33
    PUNTO           shift and go to state 34


state 105

    (57) lista -> VARIABLE ASIGNACION CORIZQ CORDER .

    AND             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    OR              reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    $end            reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAS             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENOS           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    POR             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DIVIDIR         reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    POTENCIA        reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MODULO          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENOR           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAYOR           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DOBLEIGUAL      reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DIFERENTE       reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CPARENT         reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LLADER          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CORDER          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DOSPUNTOS       reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    ELSE            reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    ELIF            reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    VARIABLE        reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    FLOTANTE        reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    TRUE            reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    FALSE           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    APARENT         reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LLAIZQ          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CORIZQ          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    NOT             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    NUMERO          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CADENACOMILLADOBLE reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CADENACOMILLASIMPLE reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DEF             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    RETURN          reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    IF              reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    PRINT           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LEN             reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    INPUT           reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    COMA            reduce using rule 57 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)


state 106

    (58) lista -> VARIABLE ASIGNACION CORIZQ NUMERO . CORDER
    (45) expresion -> NUMERO .

  ! shift/reduce conflict for CORDER resolved as shift
    CORDER          shift and go to state 130
    MAS             reduce using rule 45 (expresion -> NUMERO .)
    MENOS           reduce using rule 45 (expresion -> NUMERO .)
    POR             reduce using rule 45 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 45 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 45 (expresion -> NUMERO .)
    MODULO          reduce using rule 45 (expresion -> NUMERO .)
    MENOR           reduce using rule 45 (expresion -> NUMERO .)
    MAYOR           reduce using rule 45 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 45 (expresion -> NUMERO .)
    AND             reduce using rule 45 (expresion -> NUMERO .)
    OR              reduce using rule 45 (expresion -> NUMERO .)

  ! CORDER          [ reduce using rule 45 (expresion -> NUMERO .) ]


state 107

    (48) expr_funcion -> VARIABLE APARENT params CPARENT .

    AND             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    OR              reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    $end            reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAS             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENOS           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    POR             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DIVIDIR         reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    POTENCIA        reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MODULO          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENOR           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAYOR           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENORIGUAL      reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAYORIGUAL      reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DOBLEIGUAL      reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DIFERENTE       reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CPARENT         reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LLADER          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CORDER          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DOSPUNTOS       reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    ELSE            reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    ELIF            reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    VARIABLE        reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    FLOTANTE        reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    TRUE            reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    FALSE           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    APARENT         reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LLAIZQ          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CORIZQ          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    NOT             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    NUMERO          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CADENACOMILLADOBLE reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DEF             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    RETURN          reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    IF              reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    PRINT           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LEN             reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    INPUT           reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    COMA            reduce using rule 48 (expr_funcion -> VARIABLE APARENT params CPARENT .)


state 108

    (56) params -> params COMA . params
    (55) params -> . variable
    (56) params -> . params COMA params
    (49) variable -> . VARIABLE
    (50) variable -> . NUMERO
    (51) variable -> . FLOTANTE
    (52) variable -> . expr_funcion
    (53) variable -> . expresion
    (54) variable -> . lista
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 58
    NUMERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    params                         shift and go to state 131
    variable                       shift and go to state 75
    expr_funcion                   shift and go to state 61
    expresion                      shift and go to state 62
    lista                          shift and go to state 63
    declaracion                    shift and go to state 48
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 109

    (84) append -> VARIABLE PUNTO APPEND APARENT . VARIABLE CPARENT
    (85) append -> VARIABLE PUNTO APPEND APARENT . NUMERO CPARENT
    (86) append -> VARIABLE PUNTO APPEND APARENT . FLOTANTE CPARENT

    VARIABLE        shift and go to state 132
    NUMERO          shift and go to state 133
    FLOTANTE        shift and go to state 134


state 110

    (33) expresion -> APARENT expresion CPARENT MENOR . APARENT expresion CPARENT

    APARENT         shift and go to state 135


state 111

    (34) expresion -> APARENT expresion CPARENT MAYOR . APARENT expresion CPARENT

    APARENT         shift and go to state 136


state 112

    (35) expresion -> APARENT expresion CPARENT MENORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 137


state 113

    (36) expresion -> APARENT expresion CPARENT MAYORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 138


state 114

    (37) expresion -> APARENT expresion CPARENT DOBLEIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 139


state 115

    (38) expresion -> APARENT expresion CPARENT DIFERENTE . APARENT expresion CPARENT

    APARENT         shift and go to state 140


state 116

    (42) expresion -> APARENT declaracion AND declaracion . CPARENT
    (39) expresion -> declaracion AND declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 141
    MAS             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENOS           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    POR             reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DIVIDIR         reduce using rule 39 (expresion -> declaracion AND declaracion .)
    POTENCIA        reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MODULO          reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENOR           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MAYOR           reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MENORIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    MAYORIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DOBLEIGUAL      reduce using rule 39 (expresion -> declaracion AND declaracion .)
    DIFERENTE       reduce using rule 39 (expresion -> declaracion AND declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! CPARENT         [ reduce using rule 39 (expresion -> declaracion AND declaracion .) ]
  ! AND             [ reduce using rule 39 (expresion -> declaracion AND declaracion .) ]
  ! OR              [ reduce using rule 39 (expresion -> declaracion AND declaracion .) ]


state 117

    (43) expresion -> APARENT declaracion OR declaracion . CPARENT
    (40) expresion -> declaracion OR declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 142
    MAS             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENOS           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    POR             reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DIVIDIR         reduce using rule 40 (expresion -> declaracion OR declaracion .)
    POTENCIA        reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MODULO          reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENOR           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MAYOR           reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MENORIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    MAYORIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DOBLEIGUAL      reduce using rule 40 (expresion -> declaracion OR declaracion .)
    DIFERENTE       reduce using rule 40 (expresion -> declaracion OR declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! CPARENT         [ reduce using rule 40 (expresion -> declaracion OR declaracion .) ]
  ! AND             [ reduce using rule 40 (expresion -> declaracion OR declaracion .) ]
  ! OR              [ reduce using rule 40 (expresion -> declaracion OR declaracion .) ]


state 118

    (44) expresion -> APARENT NOT declaracion CPARENT .

    MAS             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MENOS           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    POR             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    DIVIDIR         reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    POTENCIA        reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MODULO          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MENOR           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MAYOR           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MENORIGUAL      reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    DIFERENTE       reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    AND             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    OR              reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    $end            reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    CPARENT         reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    LLADER          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    CORDER          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    ELSE            reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    ELIF            reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    VARIABLE        reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    FLOTANTE        reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    TRUE            reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    FALSE           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    APARENT         reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    LLAIZQ          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    CORIZQ          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    NOT             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    NUMERO          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    DEF             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    RETURN          reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    IF              reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    PRINT           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    LEN             reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    INPUT           reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)
    COMA            reduce using rule 44 (expresion -> APARENT NOT declaracion CPARENT .)


state 119

    (64) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno
    (67) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (24) expresion -> APARENT expresion CPARENT .
    (33) expresion -> APARENT expresion CPARENT . MENOR APARENT expresion CPARENT
    (34) expresion -> APARENT expresion CPARENT . MAYOR APARENT expresion CPARENT
    (35) expresion -> APARENT expresion CPARENT . MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> APARENT expresion CPARENT . MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> APARENT expresion CPARENT . DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> APARENT expresion CPARENT . DIFERENTE APARENT expresion CPARENT

  ! shift/reduce conflict for DOSPUNTOS resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    DOSPUNTOS       shift and go to state 143
    MAS             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MENOS           reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    POR             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MODULO          reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    AND             reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    OR              reduce using rule 24 (expresion -> APARENT expresion CPARENT .)
    MENOR           shift and go to state 110
    MAYOR           shift and go to state 111
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113
    DOBLEIGUAL      shift and go to state 114
    DIFERENTE       shift and go to state 115

  ! DOSPUNTOS       [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MENOR           [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYOR           [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MENORIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYORIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! DOBLEIGUAL      [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]
  ! DIFERENTE       [ reduce using rule 24 (expresion -> APARENT expresion CPARENT .) ]


state 120

    (65) if -> IF expresion DOSPUNTOS codigo_interno .
    (68) if -> IF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (70) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    OR              reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    $end            reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    POR             reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .)
    ELSE            shift and go to state 144
    ELIF            shift and go to state 145
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 65 (if -> IF expresion DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 121

    (62) codigo_interno -> declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 62 (codigo_interno -> declaracion .)
    MENOS           reduce using rule 62 (codigo_interno -> declaracion .)
    POR             reduce using rule 62 (codigo_interno -> declaracion .)
    DIVIDIR         reduce using rule 62 (codigo_interno -> declaracion .)
    POTENCIA        reduce using rule 62 (codigo_interno -> declaracion .)
    MODULO          reduce using rule 62 (codigo_interno -> declaracion .)
    MENOR           reduce using rule 62 (codigo_interno -> declaracion .)
    MAYOR           reduce using rule 62 (codigo_interno -> declaracion .)
    MENORIGUAL      reduce using rule 62 (codigo_interno -> declaracion .)
    MAYORIGUAL      reduce using rule 62 (codigo_interno -> declaracion .)
    DOBLEIGUAL      reduce using rule 62 (codigo_interno -> declaracion .)
    DIFERENTE       reduce using rule 62 (codigo_interno -> declaracion .)
    $end            reduce using rule 62 (codigo_interno -> declaracion .)
    CPARENT         reduce using rule 62 (codigo_interno -> declaracion .)
    LLADER          reduce using rule 62 (codigo_interno -> declaracion .)
    CORDER          reduce using rule 62 (codigo_interno -> declaracion .)
    DOSPUNTOS       reduce using rule 62 (codigo_interno -> declaracion .)
    ELSE            reduce using rule 62 (codigo_interno -> declaracion .)
    ELIF            reduce using rule 62 (codigo_interno -> declaracion .)
    VARIABLE        reduce using rule 62 (codigo_interno -> declaracion .)
    FLOTANTE        reduce using rule 62 (codigo_interno -> declaracion .)
    TRUE            reduce using rule 62 (codigo_interno -> declaracion .)
    FALSE           reduce using rule 62 (codigo_interno -> declaracion .)
    APARENT         reduce using rule 62 (codigo_interno -> declaracion .)
    LLAIZQ          reduce using rule 62 (codigo_interno -> declaracion .)
    CORIZQ          reduce using rule 62 (codigo_interno -> declaracion .)
    NOT             reduce using rule 62 (codigo_interno -> declaracion .)
    NUMERO          reduce using rule 62 (codigo_interno -> declaracion .)
    CADENACOMILLADOBLE reduce using rule 62 (codigo_interno -> declaracion .)
    CADENACOMILLASIMPLE reduce using rule 62 (codigo_interno -> declaracion .)
    DEF             reduce using rule 62 (codigo_interno -> declaracion .)
    RETURN          reduce using rule 62 (codigo_interno -> declaracion .)
    IF              reduce using rule 62 (codigo_interno -> declaracion .)
    PRINT           reduce using rule 62 (codigo_interno -> declaracion .)
    LEN             reduce using rule 62 (codigo_interno -> declaracion .)
    INPUT           reduce using rule 62 (codigo_interno -> declaracion .)
    COMA            reduce using rule 62 (codigo_interno -> declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! AND             [ reduce using rule 62 (codigo_interno -> declaracion .) ]
  ! OR              [ reduce using rule 62 (codigo_interno -> declaracion .) ]


state 122

    (74) expr_print -> PRINT APARENT VARIABLE CPARENT .

    AND             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    OR              reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    $end            reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    POR             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    IF              reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 74 (expr_print -> PRINT APARENT VARIABLE CPARENT .)


state 123

    (75) expr_print -> PRINT APARENT expresion CPARENT .

    AND             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    OR              reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    $end            reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAS             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENOS           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    POR             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MODULO          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENOR           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAYOR           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    CPARENT         reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    LLADER          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    CORDER          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    ELSE            reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    ELIF            reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    TRUE            reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    FALSE           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    APARENT         reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    NOT             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    NUMERO          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    DEF             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    RETURN          reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    IF              reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    PRINT           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    LEN             reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    INPUT           reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)
    COMA            reduce using rule 75 (expr_print -> PRINT APARENT expresion CPARENT .)


state 124

    (76) expr_print -> PRINT APARENT expresion MAS . VARIABLE CPARENT
    (77) expr_print -> PRINT APARENT expresion MAS . NUMERO CPARENT
    (78) expr_print -> PRINT APARENT expresion MAS . FLOTANTE CPARENT
    (17) expresion -> expresion MAS . expresion
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 147
    NUMERO          shift and go to state 148
    FLOTANTE        shift and go to state 149
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 77
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 125

    (79) expr_print -> PRINT APARENT expresion COMA . expr_funcion CPARENT
    (80) expr_print -> PRINT APARENT expresion COMA . NUMERO CPARENT
    (81) expr_print -> PRINT APARENT expresion COMA . FLOTANTE CPARENT
    (82) expr_print -> PRINT APARENT expresion COMA . VARIABLE CPARENT
    (83) expr_print -> PRINT APARENT expresion COMA . expresion CPARENT
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    NUMERO          shift and go to state 152
    FLOTANTE        shift and go to state 153
    VARIABLE        shift and go to state 154
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 150
    expr_funcion                   shift and go to state 151
    declaracion                    shift and go to state 48
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 126

    (90) len -> LEN APARENT VARIABLE CPARENT .

    AND             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    OR              reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    $end            reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    POR             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    IF              reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 90 (len -> LEN APARENT VARIABLE CPARENT .)


state 127

    (91) input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .

    AND             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    OR              reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    $end            reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAS             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENOS           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    POR             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DIVIDIR         reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    POTENCIA        reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MODULO          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENOR           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAYOR           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENORIGUAL      reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAYORIGUAL      reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DOBLEIGUAL      reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DIFERENTE       reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CPARENT         reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LLADER          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CORDER          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DOSPUNTOS       reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    ELSE            reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    ELIF            reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    VARIABLE        reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    FLOTANTE        reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    TRUE            reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    FALSE           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    APARENT         reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LLAIZQ          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CORIZQ          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    NOT             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    NUMERO          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DEF             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    RETURN          reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    IF              reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    PRINT           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LEN             reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    INPUT           reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    COMA            reduce using rule 91 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)


state 128

    (92) input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .

    AND             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    OR              reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    $end            reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAS             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOS           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    POR             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DIVIDIR         reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    POTENCIA        reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MODULO          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOR           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYOR           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENORIGUAL      reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYORIGUAL      reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DOBLEIGUAL      reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DIFERENTE       reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CPARENT         reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LLADER          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CORDER          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DOSPUNTOS       reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    ELSE            reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    ELIF            reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    VARIABLE        reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    FLOTANTE        reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    TRUE            reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    FALSE           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    APARENT         reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LLAIZQ          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CORIZQ          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    NOT             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    NUMERO          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DEF             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    RETURN          reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    IF              reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    PRINT           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LEN             reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    INPUT           reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    COMA            reduce using rule 92 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)


state 129

    (59) lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .

    AND             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    OR              reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    $end            reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAS             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENOS           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    POR             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DIVIDIR         reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    POTENCIA        reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MODULO          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENOR           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAYOR           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENORIGUAL      reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAYORIGUAL      reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DOBLEIGUAL      reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DIFERENTE       reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CPARENT         reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LLADER          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CORDER          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DOSPUNTOS       reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    ELSE            reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    ELIF            reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    VARIABLE        reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    FLOTANTE        reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    TRUE            reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    FALSE           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    APARENT         reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LLAIZQ          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CORIZQ          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    NOT             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    NUMERO          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CADENACOMILLADOBLE reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CADENACOMILLASIMPLE reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DEF             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    RETURN          reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    IF              reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    PRINT           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LEN             reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    INPUT           reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    COMA            reduce using rule 59 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)


state 130

    (58) lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .

    AND             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    OR              reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    $end            reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAS             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENOS           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    POR             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DIVIDIR         reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    POTENCIA        reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MODULO          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENOR           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAYOR           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENORIGUAL      reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAYORIGUAL      reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DOBLEIGUAL      reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DIFERENTE       reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CPARENT         reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LLADER          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CORDER          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DOSPUNTOS       reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    ELSE            reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    ELIF            reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    VARIABLE        reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    FLOTANTE        reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    TRUE            reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    FALSE           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    APARENT         reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LLAIZQ          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CORIZQ          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    NOT             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    NUMERO          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CADENACOMILLADOBLE reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CADENACOMILLASIMPLE reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DEF             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    RETURN          reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    IF              reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    PRINT           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LEN             reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    INPUT           reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    COMA            reduce using rule 58 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)


state 131

    (56) params -> params COMA params .
    (56) params -> params . COMA params

  ! shift/reduce conflict for COMA resolved as shift
    CPARENT         reduce using rule 56 (params -> params COMA params .)
    COMA            shift and go to state 108

  ! COMA            [ reduce using rule 56 (params -> params COMA params .) ]


state 132

    (84) append -> VARIABLE PUNTO APPEND APARENT VARIABLE . CPARENT

    CPARENT         shift and go to state 155


state 133

    (85) append -> VARIABLE PUNTO APPEND APARENT NUMERO . CPARENT

    CPARENT         shift and go to state 156


state 134

    (86) append -> VARIABLE PUNTO APPEND APARENT FLOTANTE . CPARENT

    CPARENT         shift and go to state 157


state 135

    (33) expresion -> APARENT expresion CPARENT MENOR APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 158
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 136

    (34) expresion -> APARENT expresion CPARENT MAYOR APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 159
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 137

    (35) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 160
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 138

    (36) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 161
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 139

    (37) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 162
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 140

    (38) expresion -> APARENT expresion CPARENT DIFERENTE APARENT . expresion CPARENT
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 163
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 141

    (42) expresion -> APARENT declaracion AND declaracion CPARENT .

    MAS             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENOS           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    POR             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DIVIDIR         reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    POTENCIA        reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MODULO          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENOR           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MAYOR           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENORIGUAL      reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DIFERENTE       reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    AND             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    OR              reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    $end            reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CPARENT         reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LLADER          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CORDER          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    ELSE            reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    ELIF            reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    VARIABLE        reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    FLOTANTE        reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    TRUE            reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    FALSE           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    APARENT         reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LLAIZQ          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CORIZQ          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    NOT             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    NUMERO          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DEF             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    RETURN          reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    IF              reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    PRINT           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LEN             reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    INPUT           reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    COMA            reduce using rule 42 (expresion -> APARENT declaracion AND declaracion CPARENT .)


state 142

    (43) expresion -> APARENT declaracion OR declaracion CPARENT .

    MAS             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENOS           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    POR             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DIVIDIR         reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    POTENCIA        reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MODULO          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENOR           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MAYOR           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENORIGUAL      reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DIFERENTE       reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    AND             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    OR              reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    $end            reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CPARENT         reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LLADER          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CORDER          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    ELSE            reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    ELIF            reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    VARIABLE        reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    FLOTANTE        reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    TRUE            reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    FALSE           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    APARENT         reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LLAIZQ          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CORIZQ          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    NOT             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    NUMERO          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DEF             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    RETURN          reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    IF              reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    PRINT           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LEN             reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    INPUT           reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    COMA            reduce using rule 43 (expresion -> APARENT declaracion OR declaracion CPARENT .)


state 143

    (64) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno
    (67) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 164
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 144

    (68) if -> IF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 165


state 145

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno
    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 166
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 146

    (63) codigo_interno -> codigo_interno declaracion .
    (39) expresion -> declaracion . AND declaracion
    (40) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MENOS           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    POR             reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    DIVIDIR         reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    POTENCIA        reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MODULO          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MENOR           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MAYOR           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MENORIGUAL      reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    MAYORIGUAL      reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    DOBLEIGUAL      reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    DIFERENTE       reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    $end            reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    CPARENT         reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    LLADER          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    CORDER          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    DOSPUNTOS       reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    ELSE            reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    ELIF            reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    VARIABLE        reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    FLOTANTE        reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    TRUE            reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    FALSE           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    APARENT         reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    LLAIZQ          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    CORIZQ          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    NOT             reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    NUMERO          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    CADENACOMILLADOBLE reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    CADENACOMILLASIMPLE reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    DEF             reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    RETURN          reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    IF              reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    PRINT           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    LEN             reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    INPUT           reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    COMA            reduce using rule 63 (codigo_interno -> codigo_interno declaracion .)
    AND             shift and go to state 30
    OR              shift and go to state 31

  ! AND             [ reduce using rule 63 (codigo_interno -> codigo_interno declaracion .) ]
  ! OR              [ reduce using rule 63 (codigo_interno -> codigo_interno declaracion .) ]


state 147

    (76) expr_print -> PRINT APARENT expresion MAS VARIABLE . CPARENT
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

    CPARENT         shift and go to state 167
    ASIGNACION      shift and go to state 32
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 33
    PUNTO           shift and go to state 34


state 148

    (77) expr_print -> PRINT APARENT expresion MAS NUMERO . CPARENT
    (45) expresion -> NUMERO .

  ! shift/reduce conflict for CPARENT resolved as shift
    CPARENT         shift and go to state 168
    MAS             reduce using rule 45 (expresion -> NUMERO .)
    MENOS           reduce using rule 45 (expresion -> NUMERO .)
    POR             reduce using rule 45 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 45 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 45 (expresion -> NUMERO .)
    MODULO          reduce using rule 45 (expresion -> NUMERO .)
    MENOR           reduce using rule 45 (expresion -> NUMERO .)
    MAYOR           reduce using rule 45 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 45 (expresion -> NUMERO .)
    COMA            reduce using rule 45 (expresion -> NUMERO .)
    AND             reduce using rule 45 (expresion -> NUMERO .)
    OR              reduce using rule 45 (expresion -> NUMERO .)

  ! CPARENT         [ reduce using rule 45 (expresion -> NUMERO .) ]


state 149

    (78) expr_print -> PRINT APARENT expresion MAS FLOTANTE . CPARENT
    (5) declaracion -> FLOTANTE .

    CPARENT         shift and go to state 169
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)


state 150

    (83) expr_print -> PRINT APARENT expresion COMA expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 170
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 151

    (79) expr_print -> PRINT APARENT expresion COMA expr_funcion . CPARENT
    (6) declaracion -> expr_funcion .

    CPARENT         shift and go to state 171
    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)


state 152

    (80) expr_print -> PRINT APARENT expresion COMA NUMERO . CPARENT
    (45) expresion -> NUMERO .

  ! shift/reduce conflict for CPARENT resolved as shift
    CPARENT         shift and go to state 172
    MAS             reduce using rule 45 (expresion -> NUMERO .)
    MENOS           reduce using rule 45 (expresion -> NUMERO .)
    POR             reduce using rule 45 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 45 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 45 (expresion -> NUMERO .)
    MODULO          reduce using rule 45 (expresion -> NUMERO .)
    MENOR           reduce using rule 45 (expresion -> NUMERO .)
    MAYOR           reduce using rule 45 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 45 (expresion -> NUMERO .)
    AND             reduce using rule 45 (expresion -> NUMERO .)
    OR              reduce using rule 45 (expresion -> NUMERO .)

  ! CPARENT         [ reduce using rule 45 (expresion -> NUMERO .) ]


state 153

    (81) expr_print -> PRINT APARENT expresion COMA FLOTANTE . CPARENT
    (5) declaracion -> FLOTANTE .

    CPARENT         shift and go to state 173
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)


state 154

    (82) expr_print -> PRINT APARENT expresion COMA VARIABLE . CPARENT
    (48) expr_funcion -> VARIABLE . APARENT params CPARENT
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (57) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (58) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (84) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT

    CPARENT         shift and go to state 174
    APARENT         shift and go to state 33
    ASIGNACION      shift and go to state 32
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    PUNTO           shift and go to state 34


state 155

    (84) append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .

    AND             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    OR              reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    $end            reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    POR             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    IF              reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 84 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)


state 156

    (85) append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .

    AND             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    OR              reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    $end            reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAS             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENOS           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    POR             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DIVIDIR         reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    POTENCIA        reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MODULO          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENOR           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAYOR           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DIFERENTE       reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CPARENT         reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LLADER          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CORDER          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    ELSE            reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    ELIF            reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    VARIABLE        reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    FLOTANTE        reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    TRUE            reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    FALSE           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    APARENT         reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LLAIZQ          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CORIZQ          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    NOT             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    NUMERO          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DEF             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    RETURN          reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    IF              reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    PRINT           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LEN             reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    INPUT           reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    COMA            reduce using rule 85 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)


state 157

    (86) append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .

    AND             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    OR              reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    $end            reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAS             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENOS           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    POR             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MODULO          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENOR           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAYOR           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CPARENT         reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LLADER          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CORDER          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    ELSE            reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    ELIF            reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    TRUE            reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    FALSE           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    APARENT         reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    NOT             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    NUMERO          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DEF             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    RETURN          reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    IF              reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    PRINT           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LEN             reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    INPUT           reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    COMA            reduce using rule 86 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)


state 158

    (33) expresion -> APARENT expresion CPARENT MENOR APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 175
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 159

    (34) expresion -> APARENT expresion CPARENT MAYOR APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 176
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 160

    (35) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 177
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 161

    (36) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 178
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 162

    (37) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 179
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 163

    (38) expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion . CPARENT
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 180
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 164

    (64) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .
    (67) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    OR              reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    $end            reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POR             reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    ELSE            shift and go to state 181
    ELIF            shift and go to state 182
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 64 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 165

    (68) if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 183
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 166

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno
    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    DOSPUNTOS       shift and go to state 184
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 167

    (76) expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .

    AND             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    OR              reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    $end            reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAS             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENOS           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    POR             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    POTENCIA        reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MODULO          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENOR           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAYOR           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CPARENT         reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LLADER          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CORDER          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    ELSE            reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    ELIF            reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    VARIABLE        reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    TRUE            reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    FALSE           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    APARENT         reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CORIZQ          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    NOT             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    NUMERO          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DEF             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    RETURN          reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    IF              reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    PRINT           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LEN             reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    INPUT           reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    COMA            reduce using rule 76 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)


state 168

    (77) expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .

    AND             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    OR              reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    $end            reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAS             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENOS           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    POR             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DIVIDIR         reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    POTENCIA        reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MODULO          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENOR           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAYOR           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DIFERENTE       reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CPARENT         reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LLADER          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CORDER          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    ELSE            reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    ELIF            reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    VARIABLE        reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    FLOTANTE        reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    TRUE            reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    FALSE           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    APARENT         reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LLAIZQ          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CORIZQ          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    NOT             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    NUMERO          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DEF             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    RETURN          reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    IF              reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    PRINT           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LEN             reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    INPUT           reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    COMA            reduce using rule 77 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)


state 169

    (78) expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .

    AND             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    OR              reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    $end            reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAS             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENOS           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    POR             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MODULO          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENOR           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAYOR           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CPARENT         reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LLADER          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CORDER          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    ELSE            reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    ELIF            reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    TRUE            reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    FALSE           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    APARENT         reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    NOT             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    NUMERO          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DEF             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    RETURN          reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    IF              reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    PRINT           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LEN             reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    INPUT           reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    COMA            reduce using rule 78 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)


state 170

    (83) expr_print -> PRINT APARENT expresion COMA expresion CPARENT .

    AND             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    OR              reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    $end            reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAS             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENOS           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    POR             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DIVIDIR         reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    POTENCIA        reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MODULO          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENOR           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAYOR           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENORIGUAL      reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAYORIGUAL      reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DIFERENTE       reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CPARENT         reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LLADER          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CORDER          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DOSPUNTOS       reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    ELSE            reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    ELIF            reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    VARIABLE        reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    FLOTANTE        reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    TRUE            reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    FALSE           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    APARENT         reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LLAIZQ          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CORIZQ          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    NOT             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    NUMERO          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DEF             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    RETURN          reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    IF              reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    PRINT           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LEN             reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    INPUT           reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    COMA            reduce using rule 83 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)


state 171

    (79) expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .

    AND             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    OR              reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    $end            reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAS             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENOS           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    POR             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DIVIDIR         reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    POTENCIA        reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MODULO          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENOR           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAYOR           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENORIGUAL      reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAYORIGUAL      reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DOBLEIGUAL      reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DIFERENTE       reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CPARENT         reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LLADER          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CORDER          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DOSPUNTOS       reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    ELSE            reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    ELIF            reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    VARIABLE        reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    FLOTANTE        reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    TRUE            reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    FALSE           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    APARENT         reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LLAIZQ          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CORIZQ          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    NOT             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    NUMERO          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DEF             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    RETURN          reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    IF              reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    PRINT           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LEN             reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    INPUT           reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    COMA            reduce using rule 79 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)


state 172

    (80) expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .

    AND             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    OR              reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    $end            reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAS             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENOS           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    POR             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DIVIDIR         reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    POTENCIA        reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MODULO          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENOR           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAYOR           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DIFERENTE       reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CPARENT         reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LLADER          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CORDER          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    ELSE            reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    ELIF            reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    VARIABLE        reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    FLOTANTE        reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    TRUE            reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    FALSE           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    APARENT         reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LLAIZQ          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CORIZQ          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    NOT             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    NUMERO          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DEF             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    RETURN          reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    IF              reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    PRINT           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LEN             reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    INPUT           reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    COMA            reduce using rule 80 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)


state 173

    (81) expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .

    AND             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    OR              reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    $end            reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAS             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENOS           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    POR             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MODULO          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENOR           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAYOR           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CPARENT         reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LLADER          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CORDER          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    ELSE            reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    ELIF            reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    TRUE            reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    FALSE           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    APARENT         reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    NOT             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    NUMERO          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DEF             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    RETURN          reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    IF              reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    PRINT           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LEN             reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    INPUT           reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    COMA            reduce using rule 81 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)


state 174

    (82) expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .

    AND             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    OR              reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    $end            reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAS             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENOS           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    POR             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    POTENCIA        reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MODULO          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENOR           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAYOR           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CPARENT         reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LLADER          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CORDER          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    ELSE            reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    ELIF            reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    VARIABLE        reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    TRUE            reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    FALSE           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    APARENT         reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CORIZQ          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    NOT             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    NUMERO          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DEF             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    RETURN          reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    IF              reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    PRINT           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LEN             reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    INPUT           reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    COMA            reduce using rule 82 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)


state 175

    (33) expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .

    MAS             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    POR             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    AND             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    OR              reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    $end            reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    NOT             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DEF             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    IF              reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LEN             reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    COMA            reduce using rule 33 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)


state 176

    (34) expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .

    MAS             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    POR             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    AND             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    OR              reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    $end            reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    NOT             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DEF             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    IF              reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LEN             reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    COMA            reduce using rule 34 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)


state 177

    (35) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 35 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)


state 178

    (36) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 36 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)


state 179

    (37) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 37 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)


state 180

    (38) expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .

    MAS             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOS           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    POR             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MODULO          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOR           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYOR           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    AND             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    OR              reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    $end            reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CPARENT         reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLADER          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORDER          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELSE            reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELIF            reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    TRUE            reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    FALSE           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    APARENT         reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    NOT             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    NUMERO          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DEF             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    RETURN          reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    IF              reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    PRINT           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LEN             reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    INPUT           reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    COMA            reduce using rule 38 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)


state 181

    (67) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 185


state 182

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF . APARENT expresion CPARENT DOSPUNTOS codigo_interno

    APARENT         shift and go to state 186


state 183

    (68) if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 68 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 184

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno
    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 187
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 185

    (67) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 188
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 186

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT . expresion CPARENT DOSPUNTOS codigo_interno
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 189
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 187

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (72) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .
    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    ELSE            shift and go to state 191
    AND             reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    OR              reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    $end            reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    POR             reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    ELIF            shift and go to state 190
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 72 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 188

    (67) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 67 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 189

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion . CPARENT DOSPUNTOS codigo_interno
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    CPARENT         shift and go to state 192
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 190

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 193
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 191

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 194


state 192

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 195


state 193

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    DOSPUNTOS       shift and go to state 196
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 194

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 197
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 195

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 198
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 196

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 199
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 197

    (70) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 70 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 198

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (71) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    ELSE            shift and go to state 200
    AND             reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    OR              reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    $end            reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POR             reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 71 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 199

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    ELIF            shift and go to state 201
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 200

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 202


state 201

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 203
    declaracion                    shift and go to state 48
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 202

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 204
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 203

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (17) expresion -> expresion . MAS expresion
    (18) expresion -> expresion . MENOS expresion
    (19) expresion -> expresion . POR expresion
    (20) expresion -> expresion . DIVIDIR expresion
    (21) expresion -> expresion . POTENCIA expresion
    (22) expresion -> expresion . MODULO expresion
    (27) expresion -> expresion . MENOR expresion
    (28) expresion -> expresion . MAYOR expresion
    (29) expresion -> expresion . MENORIGUAL expresion
    (30) expresion -> expresion . MAYORIGUAL expresion
    (31) expresion -> expresion . DOBLEIGUAL expresion
    (32) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .

    DOSPUNTOS       shift and go to state 205
    MAS             shift and go to state 35
    MENOS           shift and go to state 36
    POR             shift and go to state 37
    DIVIDIR         shift and go to state 38
    POTENCIA        shift and go to state 39
    MODULO          shift and go to state 40
    MENOR           shift and go to state 41
    MAYOR           shift and go to state 42
    MENORIGUAL      shift and go to state 43
    MAYORIGUAL      shift and go to state 44
    DOBLEIGUAL      shift and go to state 45
    DIFERENTE       shift and go to state 46
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)


state 204

    (69) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 69 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 205

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 206
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 206

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    ELSE            shift and go to state 207
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 207

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 208


state 208

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (62) codigo_interno -> . declaracion
    (63) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 209
    declaracion                    shift and go to state 121
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13

state 209

    (73) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (63) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) expresion -> . TRUE
    (16) expresion -> . FALSE
    (17) expresion -> . expresion MAS expresion
    (18) expresion -> . expresion MENOS expresion
    (19) expresion -> . expresion POR expresion
    (20) expresion -> . expresion DIVIDIR expresion
    (21) expresion -> . expresion POTENCIA expresion
    (22) expresion -> . expresion MODULO expresion
    (23) expresion -> . MENOS expresion
    (24) expresion -> . APARENT expresion CPARENT
    (25) expresion -> . LLAIZQ expresion LLADER
    (26) expresion -> . CORIZQ expresion CORDER
    (27) expresion -> . expresion MENOR expresion
    (28) expresion -> . expresion MAYOR expresion
    (29) expresion -> . expresion MENORIGUAL expresion
    (30) expresion -> . expresion MAYORIGUAL expresion
    (31) expresion -> . expresion DOBLEIGUAL expresion
    (32) expresion -> . expresion DIFERENTE expresion
    (33) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (34) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (35) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (36) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (37) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (38) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (39) expresion -> . declaracion AND declaracion
    (40) expresion -> . declaracion OR declaracion
    (41) expresion -> . NOT declaracion
    (42) expresion -> . APARENT declaracion AND declaracion CPARENT
    (43) expresion -> . APARENT declaracion OR declaracion CPARENT
    (44) expresion -> . APARENT NOT declaracion CPARENT
    (45) expresion -> . NUMERO
    (46) expresion -> . CADENACOMILLADOBLE
    (47) expresion -> . CADENACOMILLASIMPLE
    (48) expr_funcion -> . VARIABLE APARENT params CPARENT
    (57) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (58) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (59) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (60) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (61) expr_return -> . RETURN variable
    (64) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (65) if -> . IF expresion DOSPUNTOS codigo_interno
    (66) if -> . IF expresion DOSPUNTOS
    (67) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (68) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (69) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (70) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (71) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (72) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (73) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (74) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (75) expr_print -> . PRINT APARENT expresion CPARENT
    (76) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (77) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (78) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (79) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (80) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (81) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (82) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (83) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (84) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (85) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (86) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (90) len -> . LEN APARENT VARIABLE CPARENT
    (91) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (92) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
    AND             reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 14
    FALSE           shift and go to state 15
    MENOS           shift and go to state 16
    APARENT         shift and go to state 17
    LLAIZQ          shift and go to state 18
    CORIZQ          shift and go to state 19
    NOT             shift and go to state 20
    NUMERO          shift and go to state 21
    CADENACOMILLADOBLE shift and go to state 22
    CADENACOMILLASIMPLE shift and go to state 23
    DEF             shift and go to state 24
    RETURN          shift and go to state 25
    IF              shift and go to state 26
    PRINT           shift and go to state 27
    LEN             shift and go to state 28
    INPUT           shift and go to state 29

  ! MENOS           [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 73 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 146
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for APARENT in state 2 resolved as shift
WARNING: shift/reduce conflict for MAS in state 3 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 3 resolved as shift
WARNING: shift/reduce conflict for POR in state 3 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 3 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 3 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 3 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 3 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 3 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 3 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 58 resolved as shift
WARNING: shift/reduce conflict for MAS in state 62 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 62 resolved as shift
WARNING: shift/reduce conflict for POR in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 62 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 62 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 62 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 62 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 62 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for MAS in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 71 resolved as shift
WARNING: shift/reduce conflict for POR in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 81 resolved as shift
WARNING: shift/reduce conflict for POR in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 81 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 81 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 81 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 81 resolved as shift
WARNING: shift/reduce conflict for MAS in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for POR in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 82 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 82 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 82 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 82 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 82 resolved as shift
WARNING: shift/reduce conflict for MAS in state 83 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 83 resolved as shift
WARNING: shift/reduce conflict for POR in state 83 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 83 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 83 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 83 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 83 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 83 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 83 resolved as shift
WARNING: shift/reduce conflict for MAS in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 84 resolved as shift
WARNING: shift/reduce conflict for POR in state 84 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 84 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 84 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 84 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 84 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 84 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 84 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 84 resolved as shift
WARNING: shift/reduce conflict for MAS in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 85 resolved as shift
WARNING: shift/reduce conflict for POR in state 85 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 85 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 85 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 85 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 85 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 85 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 85 resolved as shift
WARNING: shift/reduce conflict for MAS in state 86 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 86 resolved as shift
WARNING: shift/reduce conflict for POR in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 86 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 86 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 86 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 86 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 86 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 86 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 86 resolved as shift
WARNING: shift/reduce conflict for MAS in state 87 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 87 resolved as shift
WARNING: shift/reduce conflict for POR in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 87 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 87 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 87 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 87 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 87 resolved as shift
WARNING: shift/reduce conflict for MAS in state 88 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 88 resolved as shift
WARNING: shift/reduce conflict for POR in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 88 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 88 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 88 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 88 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 88 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 88 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 88 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 89 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 89 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 92 resolved as shift
WARNING: shift/reduce conflict for AND in state 92 resolved as shift
WARNING: shift/reduce conflict for OR in state 92 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 98 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 98 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 98 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 98 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 98 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 98 resolved as shift
WARNING: shift/reduce conflict for NOT in state 98 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 98 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 98 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 98 resolved as shift
WARNING: shift/reduce conflict for DEF in state 98 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 98 resolved as shift
WARNING: shift/reduce conflict for IF in state 98 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 98 resolved as shift
WARNING: shift/reduce conflict for LEN in state 98 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 98 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 106 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 119 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 120 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 120 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 120 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 120 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 120 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 120 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 120 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 120 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 120 resolved as shift
WARNING: shift/reduce conflict for NOT in state 120 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 120 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 120 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 120 resolved as shift
WARNING: shift/reduce conflict for DEF in state 120 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 120 resolved as shift
WARNING: shift/reduce conflict for IF in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 120 resolved as shift
WARNING: shift/reduce conflict for LEN in state 120 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 121 resolved as shift
WARNING: shift/reduce conflict for OR in state 121 resolved as shift
WARNING: shift/reduce conflict for COMA in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 148 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 152 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 164 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 164 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 164 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 164 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 164 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 164 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 164 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 164 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 164 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 164 resolved as shift
WARNING: shift/reduce conflict for NOT in state 164 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 164 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 164 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 164 resolved as shift
WARNING: shift/reduce conflict for DEF in state 164 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 164 resolved as shift
WARNING: shift/reduce conflict for IF in state 164 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 164 resolved as shift
WARNING: shift/reduce conflict for LEN in state 164 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 164 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 183 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 183 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 183 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 183 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 183 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 183 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 183 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 183 resolved as shift
WARNING: shift/reduce conflict for NOT in state 183 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 183 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 183 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 183 resolved as shift
WARNING: shift/reduce conflict for DEF in state 183 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 183 resolved as shift
WARNING: shift/reduce conflict for IF in state 183 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 183 resolved as shift
WARNING: shift/reduce conflict for LEN in state 183 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 183 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 187 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 187 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 187 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 187 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 187 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 187 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 187 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 187 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 187 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 187 resolved as shift
WARNING: shift/reduce conflict for NOT in state 187 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 187 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 187 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 187 resolved as shift
WARNING: shift/reduce conflict for DEF in state 187 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 187 resolved as shift
WARNING: shift/reduce conflict for IF in state 187 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 187 resolved as shift
WARNING: shift/reduce conflict for LEN in state 187 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 187 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 188 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 188 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 188 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 188 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 188 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 188 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 188 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 188 resolved as shift
WARNING: shift/reduce conflict for NOT in state 188 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 188 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 188 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 188 resolved as shift
WARNING: shift/reduce conflict for DEF in state 188 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 188 resolved as shift
WARNING: shift/reduce conflict for IF in state 188 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 188 resolved as shift
WARNING: shift/reduce conflict for LEN in state 188 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 188 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 197 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 197 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 197 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 197 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 197 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 197 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for NOT in state 197 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 197 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 197 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 197 resolved as shift
WARNING: shift/reduce conflict for DEF in state 197 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 197 resolved as shift
WARNING: shift/reduce conflict for LEN in state 197 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 197 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 198 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 198 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 198 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 198 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 198 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 198 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 198 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 198 resolved as shift
WARNING: shift/reduce conflict for NOT in state 198 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 198 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 198 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 198 resolved as shift
WARNING: shift/reduce conflict for DEF in state 198 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 198 resolved as shift
WARNING: shift/reduce conflict for IF in state 198 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 198 resolved as shift
WARNING: shift/reduce conflict for LEN in state 198 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 198 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 204 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 204 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 204 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 204 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 204 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 204 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 204 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 204 resolved as shift
WARNING: shift/reduce conflict for NOT in state 204 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 204 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 204 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 204 resolved as shift
WARNING: shift/reduce conflict for DEF in state 204 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 204 resolved as shift
WARNING: shift/reduce conflict for IF in state 204 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 204 resolved as shift
WARNING: shift/reduce conflict for LEN in state 204 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 204 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 209 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 209 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 209 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 209 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 209 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 209 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 209 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 209 resolved as shift
WARNING: shift/reduce conflict for NOT in state 209 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 209 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 209 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 209 resolved as shift
WARNING: shift/reduce conflict for DEF in state 209 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 209 resolved as shift
WARNING: shift/reduce conflict for IF in state 209 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 209 resolved as shift
WARNING: shift/reduce conflict for LEN in state 209 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 209 resolved as shift
WARNING: reduce/reduce conflict in state 47 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> MENOS expresion) in state 47
WARNING: reduce/reduce conflict in state 58 resolved using rule (declaracion -> VARIABLE)
WARNING: rejected rule (variable -> VARIABLE) in state 58
WARNING: reduce/reduce conflict in state 59 resolved using rule (expresion -> NUMERO)
WARNING: rejected rule (variable -> NUMERO) in state 59
WARNING: reduce/reduce conflict in state 60 resolved using rule (declaracion -> FLOTANTE)
WARNING: rejected rule (variable -> FLOTANTE) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (declaracion -> expr_funcion)
WARNING: rejected rule (variable -> expr_funcion) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (variable -> expresion) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (declaracion -> lista)
WARNING: rejected rule (variable -> lista) in state 63
WARNING: reduce/reduce conflict in state 71 resolved using rule (declaracion -> VARIABLE ASIGNACION expresion)
WARNING: rejected rule (declaracion -> expresion) in state 71
WARNING: reduce/reduce conflict in state 77 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAS expresion) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENOS expresion) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion POR expresion) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DIVIDIR expresion) in state 80
WARNING: reduce/reduce conflict in state 81 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion POTENCIA expresion) in state 81
WARNING: reduce/reduce conflict in state 82 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MODULO expresion) in state 82
WARNING: reduce/reduce conflict in state 83 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENOR expresion) in state 83
WARNING: reduce/reduce conflict in state 84 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAYOR expresion) in state 84
WARNING: reduce/reduce conflict in state 85 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENORIGUAL expresion) in state 85
WARNING: reduce/reduce conflict in state 86 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAYORIGUAL expresion) in state 86
WARNING: reduce/reduce conflict in state 87 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DOBLEIGUAL expresion) in state 87
WARNING: reduce/reduce conflict in state 88 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DIFERENTE expresion) in state 88
WARNING: Rule (variable -> NUMERO) is never reduced
