Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COUNT
    DOBLECOMILLA
    EXTEND
    INDEX
    MAX
    MIN
    POP
    REMOVE
    REVERSE
    SORT
    SPLIT

Grammar

Rule 0     S' -> declaracion
Rule 1     declaracion -> VARIABLE ASIGNACION expresion
Rule 2     declaracion -> VARIABLE ASIGNACION declaracion
Rule 3     declaracion -> expresion
Rule 4     declaracion -> VARIABLE
Rule 5     declaracion -> FLOTANTE
Rule 6     declaracion -> expr_funcion
Rule 7     declaracion -> lista
Rule 8     declaracion -> expr_def_funcion
Rule 9     declaracion -> expr_return
Rule 10    declaracion -> if
Rule 11    declaracion -> expr_print
Rule 12    declaracion -> append
Rule 13    declaracion -> len
Rule 14    declaracion -> input
Rule 15    declaracion -> in
Rule 16    declaracion -> is
Rule 17    declaracion -> join
Rule 18    declaracion -> int
Rule 19    declaracion -> upper
Rule 20    declaracion -> lower
Rule 21    expresion -> TRUE
Rule 22    expresion -> FALSE
Rule 23    expresion -> expresion MAS expresion
Rule 24    expresion -> expresion MENOS expresion
Rule 25    expresion -> expresion POR expresion
Rule 26    expresion -> expresion DIVIDIR expresion
Rule 27    expresion -> expresion POTENCIA expresion
Rule 28    expresion -> expresion MODULO expresion
Rule 29    expresion -> VARIABLE MAS VARIABLE
Rule 30    expresion -> VARIABLE MENOS VARIABLE
Rule 31    expresion -> VARIABLE POR VARIABLE
Rule 32    expresion -> VARIABLE DIVIDIR VARIABLE
Rule 33    expresion -> VARIABLE POTENCIA VARIABLE
Rule 34    expresion -> VARIABLE MODULO VARIABLE
Rule 35    expresion -> MENOS expresion
Rule 36    expresion -> APARENT expresion CPARENT
Rule 37    expresion -> LLAIZQ expresion LLADER
Rule 38    expresion -> CORIZQ expresion CORDER
Rule 39    expresion -> VARIABLE MENOR expresion
Rule 40    expresion -> VARIABLE MAYOR expresion
Rule 41    expresion -> VARIABLE MENORIGUAL expresion
Rule 42    expresion -> VARIABLE MAYORIGUAL expresion
Rule 43    expresion -> VARIABLE DOBLEIGUAL expresion
Rule 44    expresion -> VARIABLE DIFERENTE expresion
Rule 45    expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
Rule 46    expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
Rule 47    expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
Rule 48    expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
Rule 49    expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
Rule 50    expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
Rule 51    expresion -> expresion MENOR expresion
Rule 52    expresion -> expresion MAYOR expresion
Rule 53    expresion -> expresion MENORIGUAL expresion
Rule 54    expresion -> expresion MAYORIGUAL expresion
Rule 55    expresion -> expresion DOBLEIGUAL expresion
Rule 56    expresion -> expresion DIFERENTE expresion
Rule 57    expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT
Rule 58    expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
Rule 59    expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
Rule 60    expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
Rule 61    expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
Rule 62    expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
Rule 63    expresion -> declaracion AND declaracion
Rule 64    expresion -> declaracion OR declaracion
Rule 65    expresion -> NOT declaracion
Rule 66    expresion -> APARENT declaracion AND declaracion CPARENT
Rule 67    expresion -> APARENT declaracion OR declaracion CPARENT
Rule 68    expresion -> APARENT NOT declaracion CPARENT
Rule 69    expresion -> NUMERO
Rule 70    expresion -> CADENACOMILLADOBLE
Rule 71    expresion -> CADENACOMILLASIMPLE
Rule 72    expr_funcion -> VARIABLE APARENT params CPARENT
Rule 73    variable -> VARIABLE
Rule 74    variable -> NUMERO
Rule 75    variable -> FLOTANTE
Rule 76    variable -> expr_funcion
Rule 77    variable -> expresion
Rule 78    variable -> lista
Rule 79    params -> variable
Rule 80    params -> params COMA params
Rule 81    lista -> VARIABLE ASIGNACION CORIZQ CORDER
Rule 82    lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER
Rule 83    lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
Rule 84    expr_def_funcion -> DEF expr_funcion DOSPUNTOS
Rule 85    expr_return -> RETURN variable
Rule 86    codigo_interno -> declaracion
Rule 87    codigo_interno -> codigo_interno declaracion
Rule 88    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
Rule 89    if -> IF expresion DOSPUNTOS codigo_interno
Rule 90    if -> IF expresion DOSPUNTOS
Rule 91    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 92    if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 93    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 94    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 95    if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
Rule 96    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
Rule 97    if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
Rule 98    expr_print -> PRINT APARENT VARIABLE CPARENT
Rule 99    expr_print -> PRINT APARENT expresion CPARENT
Rule 100   expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT
Rule 101   expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT
Rule 102   expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT
Rule 103   expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT
Rule 104   expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT
Rule 105   expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT
Rule 106   expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT
Rule 107   expr_print -> PRINT APARENT expresion COMA expresion CPARENT
Rule 108   append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
Rule 109   append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
Rule 110   append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
Rule 111   in -> IN
Rule 112   len -> LEN APARENT VARIABLE CPARENT
Rule 113   input -> INPUT APARENT CADENACOMILLADOBLE CPARENT
Rule 114   input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT
Rule 115   in -> VARIABLE in declaracion
Rule 116   in -> NUMERO in declaracion
Rule 117   in -> FLOTANTE in declaracion
Rule 118   in -> expresion in declaracion
Rule 119   is -> VARIABLE IS NUMERO
Rule 120   is -> VARIABLE IS FLOTANTE
Rule 121   is -> VARIABLE IS declaracion
Rule 122   join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
Rule 123   join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
Rule 124   int -> INT APARENT expresion CPARENT
Rule 125   int -> INT APARENT input CPARENT
Rule 126   upper -> VARIABLE PUNTO UPPER APARENT CPARENT
Rule 127   lower -> VARIABLE PUNTO LOWER APARENT CPARENT

Terminals, with rules where they appear

AND                  : 63 66
APARENT              : 36 45 45 46 46 47 47 48 48 49 49 50 50 57 57 58 58 59 59 60 60 61 61 62 62 66 67 68 72 88 91 93 93 95 95 98 99 100 101 102 103 104 105 106 107 108 109 110 112 113 114 122 123 124 125 126 127
APPEND               : 108 109 110
ASIGNACION           : 1 2 81 82 83
CADENACOMILLADOBLE   : 70 113
CADENACOMILLASIMPLE  : 71 114 123
COMA                 : 80 103 104 105 106 107
CORDER               : 38 81 82 83
CORIZQ               : 38 81 82 83
COUNT                : 
CPARENT              : 36 45 45 46 46 47 47 48 48 49 49 50 50 57 57 58 58 59 59 60 60 61 61 62 62 66 67 68 72 88 91 93 93 95 95 98 99 100 101 102 103 104 105 106 107 108 109 110 112 113 114 122 123 124 125 126 127
DEF                  : 84
DIFERENTE            : 44 50 56 62
DIVIDIR              : 26 32
DOBLECOMILLA         : 
DOBLEIGUAL           : 43 49 55 61
DOSPUNTOS            : 84 88 89 90 91 91 92 92 93 93 93 94 94 94 95 95 96 96 97 97 97 97 97
ELIF                 : 93 94 95 96 97 97 97
ELSE                 : 91 92 93 94 97
EXTEND               : 
FALSE                : 22
FLOTANTE             : 5 75 102 105 110 117 120
IF                   : 88 89 90 91 92 93 94 95 96 97
IN                   : 111
INDEX                : 
INPUT                : 113 114
INT                  : 124 125
IS                   : 119 120 121
JOIN                 : 122 123
LEN                  : 112
LLADER               : 37
LLAIZQ               : 37
LOWER                : 127
MAS                  : 23 29 100 101 102
MAX                  : 
MAYOR                : 40 46 52 58
MAYORIGUAL           : 42 48 54 60
MENOR                : 39 45 51 57
MENORIGUAL           : 41 47 53 59
MENOS                : 24 30 35
MIN                  : 
MODULO               : 28 34
NOT                  : 65 68
NUMERO               : 69 74 82 101 104 109 116 119
OR                   : 64 67
POP                  : 
POR                  : 25 31
POTENCIA             : 27 33
PRINT                : 98 99 100 101 102 103 104 105 106 107
PUNTO                : 108 109 110 122 123 126 127
REMOVE               : 
RETURN               : 85
REVERSE              : 
SIMPLECOMILLA        : 122 122 123 123
SORT                 : 
SPLIT                : 
TRUE                 : 21
UPPER                : 126
VARIABLE             : 1 2 4 29 29 30 30 31 31 32 32 33 33 34 34 39 40 41 42 43 44 45 46 47 48 49 50 72 73 81 82 83 83 98 100 106 108 108 109 110 112 115 119 120 121 122 122 123 126 127
error                : 

Nonterminals, with rules where they appear

append               : 12
codigo_interno       : 87 88 89 91 91 92 92 93 93 93 94 94 94 95 95 96 96 97 97 97 97 97
declaracion          : 2 63 63 64 64 65 66 66 67 67 68 86 87 115 116 117 118 121 0
expr_def_funcion     : 8
expr_funcion         : 6 76 84 103
expr_print           : 11
expr_return          : 9
expresion            : 1 3 23 23 24 24 25 25 26 26 27 27 28 28 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 77 88 89 90 91 92 93 93 94 94 95 95 96 96 97 97 97 97 99 100 101 102 103 104 105 106 107 107 118 124
if                   : 10
in                   : 15 115 116 117 118
input                : 14 125
int                  : 18
is                   : 16
join                 : 17
len                  : 13
lista                : 7 78
lower                : 20
params               : 72 80 80
upper                : 19
variable             : 79 85

Parsing method: LALR

state 0

    (0) S' -> . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 1
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 1

    (0) S' -> declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

    AND             shift and go to state 39
    OR              shift and go to state 40


state 2

    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    $end            reduce using rule 4 (declaracion -> VARIABLE .)
    CPARENT         reduce using rule 4 (declaracion -> VARIABLE .)
    LLADER          reduce using rule 4 (declaracion -> VARIABLE .)
    CORDER          reduce using rule 4 (declaracion -> VARIABLE .)
    DOSPUNTOS       reduce using rule 4 (declaracion -> VARIABLE .)
    COMA            reduce using rule 4 (declaracion -> VARIABLE .)
    ELSE            reduce using rule 4 (declaracion -> VARIABLE .)
    ELIF            reduce using rule 4 (declaracion -> VARIABLE .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! POR             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! POTENCIA        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MODULO          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DOBLEIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! IN              [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! NUMERO          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! APARENT         [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! LLAIZQ          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CORIZQ          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DEF             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! IF              [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! LEN             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! INPUT           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! INT             [ reduce using rule 4 (declaracion -> VARIABLE .) ]

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 3

    (3) declaracion -> expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    $end            reduce using rule 3 (declaracion -> expresion .)
    CPARENT         reduce using rule 3 (declaracion -> expresion .)
    LLADER          reduce using rule 3 (declaracion -> expresion .)
    CORDER          reduce using rule 3 (declaracion -> expresion .)
    DOSPUNTOS       reduce using rule 3 (declaracion -> expresion .)
    COMA            reduce using rule 3 (declaracion -> expresion .)
    ELSE            reduce using rule 3 (declaracion -> expresion .)
    ELIF            reduce using rule 3 (declaracion -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOS           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POR             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POTENCIA        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MODULO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IN              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! VARIABLE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NUMERO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FLOTANTE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! TRUE            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FALSE           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! APARENT         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LLAIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CORIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NOT             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DEF             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! RETURN          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IF              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! PRINT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LEN             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! INPUT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 3 (declaracion -> expresion .) ]
  ! INT             [ reduce using rule 3 (declaracion -> expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 4

    (5) declaracion -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    $end            reduce using rule 5 (declaracion -> FLOTANTE .)
    MAS             reduce using rule 5 (declaracion -> FLOTANTE .)
    POR             reduce using rule 5 (declaracion -> FLOTANTE .)
    DIVIDIR         reduce using rule 5 (declaracion -> FLOTANTE .)
    POTENCIA        reduce using rule 5 (declaracion -> FLOTANTE .)
    MODULO          reduce using rule 5 (declaracion -> FLOTANTE .)
    MENOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MENORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DOBLEIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DIFERENTE       reduce using rule 5 (declaracion -> FLOTANTE .)
    CPARENT         reduce using rule 5 (declaracion -> FLOTANTE .)
    LLADER          reduce using rule 5 (declaracion -> FLOTANTE .)
    CORDER          reduce using rule 5 (declaracion -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 5 (declaracion -> FLOTANTE .)
    COMA            reduce using rule 5 (declaracion -> FLOTANTE .)
    ELSE            reduce using rule 5 (declaracion -> FLOTANTE .)
    ELIF            reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! IN              [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! VARIABLE        [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! NUMERO          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! FLOTANTE        [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! TRUE            [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! FALSE           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! APARENT         [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! LLAIZQ          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CORIZQ          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! NOT             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! DEF             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! RETURN          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! IF              [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! PRINT           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! LEN             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! INPUT           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! INT             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]

    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 5

    (6) declaracion -> expr_funcion .

    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)
    $end            reduce using rule 6 (declaracion -> expr_funcion .)
    MAS             reduce using rule 6 (declaracion -> expr_funcion .)
    MENOS           reduce using rule 6 (declaracion -> expr_funcion .)
    POR             reduce using rule 6 (declaracion -> expr_funcion .)
    DIVIDIR         reduce using rule 6 (declaracion -> expr_funcion .)
    POTENCIA        reduce using rule 6 (declaracion -> expr_funcion .)
    MODULO          reduce using rule 6 (declaracion -> expr_funcion .)
    MENOR           reduce using rule 6 (declaracion -> expr_funcion .)
    MAYOR           reduce using rule 6 (declaracion -> expr_funcion .)
    MENORIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    MAYORIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    DOBLEIGUAL      reduce using rule 6 (declaracion -> expr_funcion .)
    DIFERENTE       reduce using rule 6 (declaracion -> expr_funcion .)
    IN              reduce using rule 6 (declaracion -> expr_funcion .)
    VARIABLE        reduce using rule 6 (declaracion -> expr_funcion .)
    NUMERO          reduce using rule 6 (declaracion -> expr_funcion .)
    FLOTANTE        reduce using rule 6 (declaracion -> expr_funcion .)
    TRUE            reduce using rule 6 (declaracion -> expr_funcion .)
    FALSE           reduce using rule 6 (declaracion -> expr_funcion .)
    APARENT         reduce using rule 6 (declaracion -> expr_funcion .)
    LLAIZQ          reduce using rule 6 (declaracion -> expr_funcion .)
    CORIZQ          reduce using rule 6 (declaracion -> expr_funcion .)
    NOT             reduce using rule 6 (declaracion -> expr_funcion .)
    CADENACOMILLADOBLE reduce using rule 6 (declaracion -> expr_funcion .)
    CADENACOMILLASIMPLE reduce using rule 6 (declaracion -> expr_funcion .)
    DEF             reduce using rule 6 (declaracion -> expr_funcion .)
    RETURN          reduce using rule 6 (declaracion -> expr_funcion .)
    IF              reduce using rule 6 (declaracion -> expr_funcion .)
    PRINT           reduce using rule 6 (declaracion -> expr_funcion .)
    LEN             reduce using rule 6 (declaracion -> expr_funcion .)
    INPUT           reduce using rule 6 (declaracion -> expr_funcion .)
    SIMPLECOMILLA   reduce using rule 6 (declaracion -> expr_funcion .)
    INT             reduce using rule 6 (declaracion -> expr_funcion .)
    CPARENT         reduce using rule 6 (declaracion -> expr_funcion .)
    LLADER          reduce using rule 6 (declaracion -> expr_funcion .)
    CORDER          reduce using rule 6 (declaracion -> expr_funcion .)
    DOSPUNTOS       reduce using rule 6 (declaracion -> expr_funcion .)
    COMA            reduce using rule 6 (declaracion -> expr_funcion .)
    ELSE            reduce using rule 6 (declaracion -> expr_funcion .)
    ELIF            reduce using rule 6 (declaracion -> expr_funcion .)


state 6

    (7) declaracion -> lista .

    AND             reduce using rule 7 (declaracion -> lista .)
    OR              reduce using rule 7 (declaracion -> lista .)
    $end            reduce using rule 7 (declaracion -> lista .)
    MAS             reduce using rule 7 (declaracion -> lista .)
    MENOS           reduce using rule 7 (declaracion -> lista .)
    POR             reduce using rule 7 (declaracion -> lista .)
    DIVIDIR         reduce using rule 7 (declaracion -> lista .)
    POTENCIA        reduce using rule 7 (declaracion -> lista .)
    MODULO          reduce using rule 7 (declaracion -> lista .)
    MENOR           reduce using rule 7 (declaracion -> lista .)
    MAYOR           reduce using rule 7 (declaracion -> lista .)
    MENORIGUAL      reduce using rule 7 (declaracion -> lista .)
    MAYORIGUAL      reduce using rule 7 (declaracion -> lista .)
    DOBLEIGUAL      reduce using rule 7 (declaracion -> lista .)
    DIFERENTE       reduce using rule 7 (declaracion -> lista .)
    IN              reduce using rule 7 (declaracion -> lista .)
    VARIABLE        reduce using rule 7 (declaracion -> lista .)
    NUMERO          reduce using rule 7 (declaracion -> lista .)
    FLOTANTE        reduce using rule 7 (declaracion -> lista .)
    TRUE            reduce using rule 7 (declaracion -> lista .)
    FALSE           reduce using rule 7 (declaracion -> lista .)
    APARENT         reduce using rule 7 (declaracion -> lista .)
    LLAIZQ          reduce using rule 7 (declaracion -> lista .)
    CORIZQ          reduce using rule 7 (declaracion -> lista .)
    NOT             reduce using rule 7 (declaracion -> lista .)
    CADENACOMILLADOBLE reduce using rule 7 (declaracion -> lista .)
    CADENACOMILLASIMPLE reduce using rule 7 (declaracion -> lista .)
    DEF             reduce using rule 7 (declaracion -> lista .)
    RETURN          reduce using rule 7 (declaracion -> lista .)
    IF              reduce using rule 7 (declaracion -> lista .)
    PRINT           reduce using rule 7 (declaracion -> lista .)
    LEN             reduce using rule 7 (declaracion -> lista .)
    INPUT           reduce using rule 7 (declaracion -> lista .)
    SIMPLECOMILLA   reduce using rule 7 (declaracion -> lista .)
    INT             reduce using rule 7 (declaracion -> lista .)
    CPARENT         reduce using rule 7 (declaracion -> lista .)
    LLADER          reduce using rule 7 (declaracion -> lista .)
    CORDER          reduce using rule 7 (declaracion -> lista .)
    DOSPUNTOS       reduce using rule 7 (declaracion -> lista .)
    COMA            reduce using rule 7 (declaracion -> lista .)
    ELSE            reduce using rule 7 (declaracion -> lista .)
    ELIF            reduce using rule 7 (declaracion -> lista .)


state 7

    (8) declaracion -> expr_def_funcion .

    AND             reduce using rule 8 (declaracion -> expr_def_funcion .)
    OR              reduce using rule 8 (declaracion -> expr_def_funcion .)
    $end            reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAS             reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENOS           reduce using rule 8 (declaracion -> expr_def_funcion .)
    POR             reduce using rule 8 (declaracion -> expr_def_funcion .)
    DIVIDIR         reduce using rule 8 (declaracion -> expr_def_funcion .)
    POTENCIA        reduce using rule 8 (declaracion -> expr_def_funcion .)
    MODULO          reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENOR           reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAYOR           reduce using rule 8 (declaracion -> expr_def_funcion .)
    MENORIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    MAYORIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    DOBLEIGUAL      reduce using rule 8 (declaracion -> expr_def_funcion .)
    DIFERENTE       reduce using rule 8 (declaracion -> expr_def_funcion .)
    IN              reduce using rule 8 (declaracion -> expr_def_funcion .)
    VARIABLE        reduce using rule 8 (declaracion -> expr_def_funcion .)
    NUMERO          reduce using rule 8 (declaracion -> expr_def_funcion .)
    FLOTANTE        reduce using rule 8 (declaracion -> expr_def_funcion .)
    TRUE            reduce using rule 8 (declaracion -> expr_def_funcion .)
    FALSE           reduce using rule 8 (declaracion -> expr_def_funcion .)
    APARENT         reduce using rule 8 (declaracion -> expr_def_funcion .)
    LLAIZQ          reduce using rule 8 (declaracion -> expr_def_funcion .)
    CORIZQ          reduce using rule 8 (declaracion -> expr_def_funcion .)
    NOT             reduce using rule 8 (declaracion -> expr_def_funcion .)
    CADENACOMILLADOBLE reduce using rule 8 (declaracion -> expr_def_funcion .)
    CADENACOMILLASIMPLE reduce using rule 8 (declaracion -> expr_def_funcion .)
    DEF             reduce using rule 8 (declaracion -> expr_def_funcion .)
    RETURN          reduce using rule 8 (declaracion -> expr_def_funcion .)
    IF              reduce using rule 8 (declaracion -> expr_def_funcion .)
    PRINT           reduce using rule 8 (declaracion -> expr_def_funcion .)
    LEN             reduce using rule 8 (declaracion -> expr_def_funcion .)
    INPUT           reduce using rule 8 (declaracion -> expr_def_funcion .)
    SIMPLECOMILLA   reduce using rule 8 (declaracion -> expr_def_funcion .)
    INT             reduce using rule 8 (declaracion -> expr_def_funcion .)
    CPARENT         reduce using rule 8 (declaracion -> expr_def_funcion .)
    LLADER          reduce using rule 8 (declaracion -> expr_def_funcion .)
    CORDER          reduce using rule 8 (declaracion -> expr_def_funcion .)
    DOSPUNTOS       reduce using rule 8 (declaracion -> expr_def_funcion .)
    COMA            reduce using rule 8 (declaracion -> expr_def_funcion .)
    ELSE            reduce using rule 8 (declaracion -> expr_def_funcion .)
    ELIF            reduce using rule 8 (declaracion -> expr_def_funcion .)


state 8

    (9) declaracion -> expr_return .

    AND             reduce using rule 9 (declaracion -> expr_return .)
    OR              reduce using rule 9 (declaracion -> expr_return .)
    $end            reduce using rule 9 (declaracion -> expr_return .)
    MAS             reduce using rule 9 (declaracion -> expr_return .)
    MENOS           reduce using rule 9 (declaracion -> expr_return .)
    POR             reduce using rule 9 (declaracion -> expr_return .)
    DIVIDIR         reduce using rule 9 (declaracion -> expr_return .)
    POTENCIA        reduce using rule 9 (declaracion -> expr_return .)
    MODULO          reduce using rule 9 (declaracion -> expr_return .)
    MENOR           reduce using rule 9 (declaracion -> expr_return .)
    MAYOR           reduce using rule 9 (declaracion -> expr_return .)
    MENORIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    MAYORIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    DOBLEIGUAL      reduce using rule 9 (declaracion -> expr_return .)
    DIFERENTE       reduce using rule 9 (declaracion -> expr_return .)
    IN              reduce using rule 9 (declaracion -> expr_return .)
    VARIABLE        reduce using rule 9 (declaracion -> expr_return .)
    NUMERO          reduce using rule 9 (declaracion -> expr_return .)
    FLOTANTE        reduce using rule 9 (declaracion -> expr_return .)
    TRUE            reduce using rule 9 (declaracion -> expr_return .)
    FALSE           reduce using rule 9 (declaracion -> expr_return .)
    APARENT         reduce using rule 9 (declaracion -> expr_return .)
    LLAIZQ          reduce using rule 9 (declaracion -> expr_return .)
    CORIZQ          reduce using rule 9 (declaracion -> expr_return .)
    NOT             reduce using rule 9 (declaracion -> expr_return .)
    CADENACOMILLADOBLE reduce using rule 9 (declaracion -> expr_return .)
    CADENACOMILLASIMPLE reduce using rule 9 (declaracion -> expr_return .)
    DEF             reduce using rule 9 (declaracion -> expr_return .)
    RETURN          reduce using rule 9 (declaracion -> expr_return .)
    IF              reduce using rule 9 (declaracion -> expr_return .)
    PRINT           reduce using rule 9 (declaracion -> expr_return .)
    LEN             reduce using rule 9 (declaracion -> expr_return .)
    INPUT           reduce using rule 9 (declaracion -> expr_return .)
    SIMPLECOMILLA   reduce using rule 9 (declaracion -> expr_return .)
    INT             reduce using rule 9 (declaracion -> expr_return .)
    CPARENT         reduce using rule 9 (declaracion -> expr_return .)
    LLADER          reduce using rule 9 (declaracion -> expr_return .)
    CORDER          reduce using rule 9 (declaracion -> expr_return .)
    DOSPUNTOS       reduce using rule 9 (declaracion -> expr_return .)
    COMA            reduce using rule 9 (declaracion -> expr_return .)
    ELSE            reduce using rule 9 (declaracion -> expr_return .)
    ELIF            reduce using rule 9 (declaracion -> expr_return .)


state 9

    (10) declaracion -> if .

    AND             reduce using rule 10 (declaracion -> if .)
    OR              reduce using rule 10 (declaracion -> if .)
    $end            reduce using rule 10 (declaracion -> if .)
    MAS             reduce using rule 10 (declaracion -> if .)
    MENOS           reduce using rule 10 (declaracion -> if .)
    POR             reduce using rule 10 (declaracion -> if .)
    DIVIDIR         reduce using rule 10 (declaracion -> if .)
    POTENCIA        reduce using rule 10 (declaracion -> if .)
    MODULO          reduce using rule 10 (declaracion -> if .)
    MENOR           reduce using rule 10 (declaracion -> if .)
    MAYOR           reduce using rule 10 (declaracion -> if .)
    MENORIGUAL      reduce using rule 10 (declaracion -> if .)
    MAYORIGUAL      reduce using rule 10 (declaracion -> if .)
    DOBLEIGUAL      reduce using rule 10 (declaracion -> if .)
    DIFERENTE       reduce using rule 10 (declaracion -> if .)
    IN              reduce using rule 10 (declaracion -> if .)
    VARIABLE        reduce using rule 10 (declaracion -> if .)
    NUMERO          reduce using rule 10 (declaracion -> if .)
    FLOTANTE        reduce using rule 10 (declaracion -> if .)
    TRUE            reduce using rule 10 (declaracion -> if .)
    FALSE           reduce using rule 10 (declaracion -> if .)
    APARENT         reduce using rule 10 (declaracion -> if .)
    LLAIZQ          reduce using rule 10 (declaracion -> if .)
    CORIZQ          reduce using rule 10 (declaracion -> if .)
    NOT             reduce using rule 10 (declaracion -> if .)
    CADENACOMILLADOBLE reduce using rule 10 (declaracion -> if .)
    CADENACOMILLASIMPLE reduce using rule 10 (declaracion -> if .)
    DEF             reduce using rule 10 (declaracion -> if .)
    RETURN          reduce using rule 10 (declaracion -> if .)
    IF              reduce using rule 10 (declaracion -> if .)
    PRINT           reduce using rule 10 (declaracion -> if .)
    LEN             reduce using rule 10 (declaracion -> if .)
    INPUT           reduce using rule 10 (declaracion -> if .)
    SIMPLECOMILLA   reduce using rule 10 (declaracion -> if .)
    INT             reduce using rule 10 (declaracion -> if .)
    CPARENT         reduce using rule 10 (declaracion -> if .)
    LLADER          reduce using rule 10 (declaracion -> if .)
    CORDER          reduce using rule 10 (declaracion -> if .)
    DOSPUNTOS       reduce using rule 10 (declaracion -> if .)
    COMA            reduce using rule 10 (declaracion -> if .)
    ELSE            reduce using rule 10 (declaracion -> if .)
    ELIF            reduce using rule 10 (declaracion -> if .)


state 10

    (11) declaracion -> expr_print .

    AND             reduce using rule 11 (declaracion -> expr_print .)
    OR              reduce using rule 11 (declaracion -> expr_print .)
    $end            reduce using rule 11 (declaracion -> expr_print .)
    MAS             reduce using rule 11 (declaracion -> expr_print .)
    MENOS           reduce using rule 11 (declaracion -> expr_print .)
    POR             reduce using rule 11 (declaracion -> expr_print .)
    DIVIDIR         reduce using rule 11 (declaracion -> expr_print .)
    POTENCIA        reduce using rule 11 (declaracion -> expr_print .)
    MODULO          reduce using rule 11 (declaracion -> expr_print .)
    MENOR           reduce using rule 11 (declaracion -> expr_print .)
    MAYOR           reduce using rule 11 (declaracion -> expr_print .)
    MENORIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    MAYORIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    DOBLEIGUAL      reduce using rule 11 (declaracion -> expr_print .)
    DIFERENTE       reduce using rule 11 (declaracion -> expr_print .)
    IN              reduce using rule 11 (declaracion -> expr_print .)
    VARIABLE        reduce using rule 11 (declaracion -> expr_print .)
    NUMERO          reduce using rule 11 (declaracion -> expr_print .)
    FLOTANTE        reduce using rule 11 (declaracion -> expr_print .)
    TRUE            reduce using rule 11 (declaracion -> expr_print .)
    FALSE           reduce using rule 11 (declaracion -> expr_print .)
    APARENT         reduce using rule 11 (declaracion -> expr_print .)
    LLAIZQ          reduce using rule 11 (declaracion -> expr_print .)
    CORIZQ          reduce using rule 11 (declaracion -> expr_print .)
    NOT             reduce using rule 11 (declaracion -> expr_print .)
    CADENACOMILLADOBLE reduce using rule 11 (declaracion -> expr_print .)
    CADENACOMILLASIMPLE reduce using rule 11 (declaracion -> expr_print .)
    DEF             reduce using rule 11 (declaracion -> expr_print .)
    RETURN          reduce using rule 11 (declaracion -> expr_print .)
    IF              reduce using rule 11 (declaracion -> expr_print .)
    PRINT           reduce using rule 11 (declaracion -> expr_print .)
    LEN             reduce using rule 11 (declaracion -> expr_print .)
    INPUT           reduce using rule 11 (declaracion -> expr_print .)
    SIMPLECOMILLA   reduce using rule 11 (declaracion -> expr_print .)
    INT             reduce using rule 11 (declaracion -> expr_print .)
    CPARENT         reduce using rule 11 (declaracion -> expr_print .)
    LLADER          reduce using rule 11 (declaracion -> expr_print .)
    CORDER          reduce using rule 11 (declaracion -> expr_print .)
    DOSPUNTOS       reduce using rule 11 (declaracion -> expr_print .)
    COMA            reduce using rule 11 (declaracion -> expr_print .)
    ELSE            reduce using rule 11 (declaracion -> expr_print .)
    ELIF            reduce using rule 11 (declaracion -> expr_print .)


state 11

    (12) declaracion -> append .

    AND             reduce using rule 12 (declaracion -> append .)
    OR              reduce using rule 12 (declaracion -> append .)
    $end            reduce using rule 12 (declaracion -> append .)
    MAS             reduce using rule 12 (declaracion -> append .)
    MENOS           reduce using rule 12 (declaracion -> append .)
    POR             reduce using rule 12 (declaracion -> append .)
    DIVIDIR         reduce using rule 12 (declaracion -> append .)
    POTENCIA        reduce using rule 12 (declaracion -> append .)
    MODULO          reduce using rule 12 (declaracion -> append .)
    MENOR           reduce using rule 12 (declaracion -> append .)
    MAYOR           reduce using rule 12 (declaracion -> append .)
    MENORIGUAL      reduce using rule 12 (declaracion -> append .)
    MAYORIGUAL      reduce using rule 12 (declaracion -> append .)
    DOBLEIGUAL      reduce using rule 12 (declaracion -> append .)
    DIFERENTE       reduce using rule 12 (declaracion -> append .)
    IN              reduce using rule 12 (declaracion -> append .)
    VARIABLE        reduce using rule 12 (declaracion -> append .)
    NUMERO          reduce using rule 12 (declaracion -> append .)
    FLOTANTE        reduce using rule 12 (declaracion -> append .)
    TRUE            reduce using rule 12 (declaracion -> append .)
    FALSE           reduce using rule 12 (declaracion -> append .)
    APARENT         reduce using rule 12 (declaracion -> append .)
    LLAIZQ          reduce using rule 12 (declaracion -> append .)
    CORIZQ          reduce using rule 12 (declaracion -> append .)
    NOT             reduce using rule 12 (declaracion -> append .)
    CADENACOMILLADOBLE reduce using rule 12 (declaracion -> append .)
    CADENACOMILLASIMPLE reduce using rule 12 (declaracion -> append .)
    DEF             reduce using rule 12 (declaracion -> append .)
    RETURN          reduce using rule 12 (declaracion -> append .)
    IF              reduce using rule 12 (declaracion -> append .)
    PRINT           reduce using rule 12 (declaracion -> append .)
    LEN             reduce using rule 12 (declaracion -> append .)
    INPUT           reduce using rule 12 (declaracion -> append .)
    SIMPLECOMILLA   reduce using rule 12 (declaracion -> append .)
    INT             reduce using rule 12 (declaracion -> append .)
    CPARENT         reduce using rule 12 (declaracion -> append .)
    LLADER          reduce using rule 12 (declaracion -> append .)
    CORDER          reduce using rule 12 (declaracion -> append .)
    DOSPUNTOS       reduce using rule 12 (declaracion -> append .)
    COMA            reduce using rule 12 (declaracion -> append .)
    ELSE            reduce using rule 12 (declaracion -> append .)
    ELIF            reduce using rule 12 (declaracion -> append .)


state 12

    (13) declaracion -> len .

    AND             reduce using rule 13 (declaracion -> len .)
    OR              reduce using rule 13 (declaracion -> len .)
    $end            reduce using rule 13 (declaracion -> len .)
    MAS             reduce using rule 13 (declaracion -> len .)
    MENOS           reduce using rule 13 (declaracion -> len .)
    POR             reduce using rule 13 (declaracion -> len .)
    DIVIDIR         reduce using rule 13 (declaracion -> len .)
    POTENCIA        reduce using rule 13 (declaracion -> len .)
    MODULO          reduce using rule 13 (declaracion -> len .)
    MENOR           reduce using rule 13 (declaracion -> len .)
    MAYOR           reduce using rule 13 (declaracion -> len .)
    MENORIGUAL      reduce using rule 13 (declaracion -> len .)
    MAYORIGUAL      reduce using rule 13 (declaracion -> len .)
    DOBLEIGUAL      reduce using rule 13 (declaracion -> len .)
    DIFERENTE       reduce using rule 13 (declaracion -> len .)
    IN              reduce using rule 13 (declaracion -> len .)
    VARIABLE        reduce using rule 13 (declaracion -> len .)
    NUMERO          reduce using rule 13 (declaracion -> len .)
    FLOTANTE        reduce using rule 13 (declaracion -> len .)
    TRUE            reduce using rule 13 (declaracion -> len .)
    FALSE           reduce using rule 13 (declaracion -> len .)
    APARENT         reduce using rule 13 (declaracion -> len .)
    LLAIZQ          reduce using rule 13 (declaracion -> len .)
    CORIZQ          reduce using rule 13 (declaracion -> len .)
    NOT             reduce using rule 13 (declaracion -> len .)
    CADENACOMILLADOBLE reduce using rule 13 (declaracion -> len .)
    CADENACOMILLASIMPLE reduce using rule 13 (declaracion -> len .)
    DEF             reduce using rule 13 (declaracion -> len .)
    RETURN          reduce using rule 13 (declaracion -> len .)
    IF              reduce using rule 13 (declaracion -> len .)
    PRINT           reduce using rule 13 (declaracion -> len .)
    LEN             reduce using rule 13 (declaracion -> len .)
    INPUT           reduce using rule 13 (declaracion -> len .)
    SIMPLECOMILLA   reduce using rule 13 (declaracion -> len .)
    INT             reduce using rule 13 (declaracion -> len .)
    CPARENT         reduce using rule 13 (declaracion -> len .)
    LLADER          reduce using rule 13 (declaracion -> len .)
    CORDER          reduce using rule 13 (declaracion -> len .)
    DOSPUNTOS       reduce using rule 13 (declaracion -> len .)
    COMA            reduce using rule 13 (declaracion -> len .)
    ELSE            reduce using rule 13 (declaracion -> len .)
    ELIF            reduce using rule 13 (declaracion -> len .)


state 13

    (14) declaracion -> input .

    AND             reduce using rule 14 (declaracion -> input .)
    OR              reduce using rule 14 (declaracion -> input .)
    $end            reduce using rule 14 (declaracion -> input .)
    MAS             reduce using rule 14 (declaracion -> input .)
    MENOS           reduce using rule 14 (declaracion -> input .)
    POR             reduce using rule 14 (declaracion -> input .)
    DIVIDIR         reduce using rule 14 (declaracion -> input .)
    POTENCIA        reduce using rule 14 (declaracion -> input .)
    MODULO          reduce using rule 14 (declaracion -> input .)
    MENOR           reduce using rule 14 (declaracion -> input .)
    MAYOR           reduce using rule 14 (declaracion -> input .)
    MENORIGUAL      reduce using rule 14 (declaracion -> input .)
    MAYORIGUAL      reduce using rule 14 (declaracion -> input .)
    DOBLEIGUAL      reduce using rule 14 (declaracion -> input .)
    DIFERENTE       reduce using rule 14 (declaracion -> input .)
    IN              reduce using rule 14 (declaracion -> input .)
    VARIABLE        reduce using rule 14 (declaracion -> input .)
    NUMERO          reduce using rule 14 (declaracion -> input .)
    FLOTANTE        reduce using rule 14 (declaracion -> input .)
    TRUE            reduce using rule 14 (declaracion -> input .)
    FALSE           reduce using rule 14 (declaracion -> input .)
    APARENT         reduce using rule 14 (declaracion -> input .)
    LLAIZQ          reduce using rule 14 (declaracion -> input .)
    CORIZQ          reduce using rule 14 (declaracion -> input .)
    NOT             reduce using rule 14 (declaracion -> input .)
    CADENACOMILLADOBLE reduce using rule 14 (declaracion -> input .)
    CADENACOMILLASIMPLE reduce using rule 14 (declaracion -> input .)
    DEF             reduce using rule 14 (declaracion -> input .)
    RETURN          reduce using rule 14 (declaracion -> input .)
    IF              reduce using rule 14 (declaracion -> input .)
    PRINT           reduce using rule 14 (declaracion -> input .)
    LEN             reduce using rule 14 (declaracion -> input .)
    INPUT           reduce using rule 14 (declaracion -> input .)
    SIMPLECOMILLA   reduce using rule 14 (declaracion -> input .)
    INT             reduce using rule 14 (declaracion -> input .)
    CPARENT         reduce using rule 14 (declaracion -> input .)
    LLADER          reduce using rule 14 (declaracion -> input .)
    CORDER          reduce using rule 14 (declaracion -> input .)
    DOSPUNTOS       reduce using rule 14 (declaracion -> input .)
    COMA            reduce using rule 14 (declaracion -> input .)
    ELSE            reduce using rule 14 (declaracion -> input .)
    ELIF            reduce using rule 14 (declaracion -> input .)


state 14

    (15) declaracion -> in .

    AND             reduce using rule 15 (declaracion -> in .)
    OR              reduce using rule 15 (declaracion -> in .)
    $end            reduce using rule 15 (declaracion -> in .)
    MAS             reduce using rule 15 (declaracion -> in .)
    MENOS           reduce using rule 15 (declaracion -> in .)
    POR             reduce using rule 15 (declaracion -> in .)
    DIVIDIR         reduce using rule 15 (declaracion -> in .)
    POTENCIA        reduce using rule 15 (declaracion -> in .)
    MODULO          reduce using rule 15 (declaracion -> in .)
    MENOR           reduce using rule 15 (declaracion -> in .)
    MAYOR           reduce using rule 15 (declaracion -> in .)
    MENORIGUAL      reduce using rule 15 (declaracion -> in .)
    MAYORIGUAL      reduce using rule 15 (declaracion -> in .)
    DOBLEIGUAL      reduce using rule 15 (declaracion -> in .)
    DIFERENTE       reduce using rule 15 (declaracion -> in .)
    IN              reduce using rule 15 (declaracion -> in .)
    VARIABLE        reduce using rule 15 (declaracion -> in .)
    NUMERO          reduce using rule 15 (declaracion -> in .)
    FLOTANTE        reduce using rule 15 (declaracion -> in .)
    TRUE            reduce using rule 15 (declaracion -> in .)
    FALSE           reduce using rule 15 (declaracion -> in .)
    APARENT         reduce using rule 15 (declaracion -> in .)
    LLAIZQ          reduce using rule 15 (declaracion -> in .)
    CORIZQ          reduce using rule 15 (declaracion -> in .)
    NOT             reduce using rule 15 (declaracion -> in .)
    CADENACOMILLADOBLE reduce using rule 15 (declaracion -> in .)
    CADENACOMILLASIMPLE reduce using rule 15 (declaracion -> in .)
    DEF             reduce using rule 15 (declaracion -> in .)
    RETURN          reduce using rule 15 (declaracion -> in .)
    IF              reduce using rule 15 (declaracion -> in .)
    PRINT           reduce using rule 15 (declaracion -> in .)
    LEN             reduce using rule 15 (declaracion -> in .)
    INPUT           reduce using rule 15 (declaracion -> in .)
    SIMPLECOMILLA   reduce using rule 15 (declaracion -> in .)
    INT             reduce using rule 15 (declaracion -> in .)
    CPARENT         reduce using rule 15 (declaracion -> in .)
    LLADER          reduce using rule 15 (declaracion -> in .)
    CORDER          reduce using rule 15 (declaracion -> in .)
    DOSPUNTOS       reduce using rule 15 (declaracion -> in .)
    COMA            reduce using rule 15 (declaracion -> in .)
    ELSE            reduce using rule 15 (declaracion -> in .)
    ELIF            reduce using rule 15 (declaracion -> in .)


state 15

    (16) declaracion -> is .

    AND             reduce using rule 16 (declaracion -> is .)
    OR              reduce using rule 16 (declaracion -> is .)
    $end            reduce using rule 16 (declaracion -> is .)
    MAS             reduce using rule 16 (declaracion -> is .)
    MENOS           reduce using rule 16 (declaracion -> is .)
    POR             reduce using rule 16 (declaracion -> is .)
    DIVIDIR         reduce using rule 16 (declaracion -> is .)
    POTENCIA        reduce using rule 16 (declaracion -> is .)
    MODULO          reduce using rule 16 (declaracion -> is .)
    MENOR           reduce using rule 16 (declaracion -> is .)
    MAYOR           reduce using rule 16 (declaracion -> is .)
    MENORIGUAL      reduce using rule 16 (declaracion -> is .)
    MAYORIGUAL      reduce using rule 16 (declaracion -> is .)
    DOBLEIGUAL      reduce using rule 16 (declaracion -> is .)
    DIFERENTE       reduce using rule 16 (declaracion -> is .)
    IN              reduce using rule 16 (declaracion -> is .)
    VARIABLE        reduce using rule 16 (declaracion -> is .)
    NUMERO          reduce using rule 16 (declaracion -> is .)
    FLOTANTE        reduce using rule 16 (declaracion -> is .)
    TRUE            reduce using rule 16 (declaracion -> is .)
    FALSE           reduce using rule 16 (declaracion -> is .)
    APARENT         reduce using rule 16 (declaracion -> is .)
    LLAIZQ          reduce using rule 16 (declaracion -> is .)
    CORIZQ          reduce using rule 16 (declaracion -> is .)
    NOT             reduce using rule 16 (declaracion -> is .)
    CADENACOMILLADOBLE reduce using rule 16 (declaracion -> is .)
    CADENACOMILLASIMPLE reduce using rule 16 (declaracion -> is .)
    DEF             reduce using rule 16 (declaracion -> is .)
    RETURN          reduce using rule 16 (declaracion -> is .)
    IF              reduce using rule 16 (declaracion -> is .)
    PRINT           reduce using rule 16 (declaracion -> is .)
    LEN             reduce using rule 16 (declaracion -> is .)
    INPUT           reduce using rule 16 (declaracion -> is .)
    SIMPLECOMILLA   reduce using rule 16 (declaracion -> is .)
    INT             reduce using rule 16 (declaracion -> is .)
    CPARENT         reduce using rule 16 (declaracion -> is .)
    LLADER          reduce using rule 16 (declaracion -> is .)
    CORDER          reduce using rule 16 (declaracion -> is .)
    DOSPUNTOS       reduce using rule 16 (declaracion -> is .)
    COMA            reduce using rule 16 (declaracion -> is .)
    ELSE            reduce using rule 16 (declaracion -> is .)
    ELIF            reduce using rule 16 (declaracion -> is .)


state 16

    (17) declaracion -> join .

    AND             reduce using rule 17 (declaracion -> join .)
    OR              reduce using rule 17 (declaracion -> join .)
    $end            reduce using rule 17 (declaracion -> join .)
    MAS             reduce using rule 17 (declaracion -> join .)
    MENOS           reduce using rule 17 (declaracion -> join .)
    POR             reduce using rule 17 (declaracion -> join .)
    DIVIDIR         reduce using rule 17 (declaracion -> join .)
    POTENCIA        reduce using rule 17 (declaracion -> join .)
    MODULO          reduce using rule 17 (declaracion -> join .)
    MENOR           reduce using rule 17 (declaracion -> join .)
    MAYOR           reduce using rule 17 (declaracion -> join .)
    MENORIGUAL      reduce using rule 17 (declaracion -> join .)
    MAYORIGUAL      reduce using rule 17 (declaracion -> join .)
    DOBLEIGUAL      reduce using rule 17 (declaracion -> join .)
    DIFERENTE       reduce using rule 17 (declaracion -> join .)
    IN              reduce using rule 17 (declaracion -> join .)
    VARIABLE        reduce using rule 17 (declaracion -> join .)
    NUMERO          reduce using rule 17 (declaracion -> join .)
    FLOTANTE        reduce using rule 17 (declaracion -> join .)
    TRUE            reduce using rule 17 (declaracion -> join .)
    FALSE           reduce using rule 17 (declaracion -> join .)
    APARENT         reduce using rule 17 (declaracion -> join .)
    LLAIZQ          reduce using rule 17 (declaracion -> join .)
    CORIZQ          reduce using rule 17 (declaracion -> join .)
    NOT             reduce using rule 17 (declaracion -> join .)
    CADENACOMILLADOBLE reduce using rule 17 (declaracion -> join .)
    CADENACOMILLASIMPLE reduce using rule 17 (declaracion -> join .)
    DEF             reduce using rule 17 (declaracion -> join .)
    RETURN          reduce using rule 17 (declaracion -> join .)
    IF              reduce using rule 17 (declaracion -> join .)
    PRINT           reduce using rule 17 (declaracion -> join .)
    LEN             reduce using rule 17 (declaracion -> join .)
    INPUT           reduce using rule 17 (declaracion -> join .)
    SIMPLECOMILLA   reduce using rule 17 (declaracion -> join .)
    INT             reduce using rule 17 (declaracion -> join .)
    CPARENT         reduce using rule 17 (declaracion -> join .)
    LLADER          reduce using rule 17 (declaracion -> join .)
    CORDER          reduce using rule 17 (declaracion -> join .)
    DOSPUNTOS       reduce using rule 17 (declaracion -> join .)
    COMA            reduce using rule 17 (declaracion -> join .)
    ELSE            reduce using rule 17 (declaracion -> join .)
    ELIF            reduce using rule 17 (declaracion -> join .)


state 17

    (18) declaracion -> int .

    AND             reduce using rule 18 (declaracion -> int .)
    OR              reduce using rule 18 (declaracion -> int .)
    $end            reduce using rule 18 (declaracion -> int .)
    MAS             reduce using rule 18 (declaracion -> int .)
    MENOS           reduce using rule 18 (declaracion -> int .)
    POR             reduce using rule 18 (declaracion -> int .)
    DIVIDIR         reduce using rule 18 (declaracion -> int .)
    POTENCIA        reduce using rule 18 (declaracion -> int .)
    MODULO          reduce using rule 18 (declaracion -> int .)
    MENOR           reduce using rule 18 (declaracion -> int .)
    MAYOR           reduce using rule 18 (declaracion -> int .)
    MENORIGUAL      reduce using rule 18 (declaracion -> int .)
    MAYORIGUAL      reduce using rule 18 (declaracion -> int .)
    DOBLEIGUAL      reduce using rule 18 (declaracion -> int .)
    DIFERENTE       reduce using rule 18 (declaracion -> int .)
    IN              reduce using rule 18 (declaracion -> int .)
    VARIABLE        reduce using rule 18 (declaracion -> int .)
    NUMERO          reduce using rule 18 (declaracion -> int .)
    FLOTANTE        reduce using rule 18 (declaracion -> int .)
    TRUE            reduce using rule 18 (declaracion -> int .)
    FALSE           reduce using rule 18 (declaracion -> int .)
    APARENT         reduce using rule 18 (declaracion -> int .)
    LLAIZQ          reduce using rule 18 (declaracion -> int .)
    CORIZQ          reduce using rule 18 (declaracion -> int .)
    NOT             reduce using rule 18 (declaracion -> int .)
    CADENACOMILLADOBLE reduce using rule 18 (declaracion -> int .)
    CADENACOMILLASIMPLE reduce using rule 18 (declaracion -> int .)
    DEF             reduce using rule 18 (declaracion -> int .)
    RETURN          reduce using rule 18 (declaracion -> int .)
    IF              reduce using rule 18 (declaracion -> int .)
    PRINT           reduce using rule 18 (declaracion -> int .)
    LEN             reduce using rule 18 (declaracion -> int .)
    INPUT           reduce using rule 18 (declaracion -> int .)
    SIMPLECOMILLA   reduce using rule 18 (declaracion -> int .)
    INT             reduce using rule 18 (declaracion -> int .)
    CPARENT         reduce using rule 18 (declaracion -> int .)
    LLADER          reduce using rule 18 (declaracion -> int .)
    CORDER          reduce using rule 18 (declaracion -> int .)
    DOSPUNTOS       reduce using rule 18 (declaracion -> int .)
    COMA            reduce using rule 18 (declaracion -> int .)
    ELSE            reduce using rule 18 (declaracion -> int .)
    ELIF            reduce using rule 18 (declaracion -> int .)


state 18

    (19) declaracion -> upper .

    AND             reduce using rule 19 (declaracion -> upper .)
    OR              reduce using rule 19 (declaracion -> upper .)
    $end            reduce using rule 19 (declaracion -> upper .)
    MAS             reduce using rule 19 (declaracion -> upper .)
    MENOS           reduce using rule 19 (declaracion -> upper .)
    POR             reduce using rule 19 (declaracion -> upper .)
    DIVIDIR         reduce using rule 19 (declaracion -> upper .)
    POTENCIA        reduce using rule 19 (declaracion -> upper .)
    MODULO          reduce using rule 19 (declaracion -> upper .)
    MENOR           reduce using rule 19 (declaracion -> upper .)
    MAYOR           reduce using rule 19 (declaracion -> upper .)
    MENORIGUAL      reduce using rule 19 (declaracion -> upper .)
    MAYORIGUAL      reduce using rule 19 (declaracion -> upper .)
    DOBLEIGUAL      reduce using rule 19 (declaracion -> upper .)
    DIFERENTE       reduce using rule 19 (declaracion -> upper .)
    IN              reduce using rule 19 (declaracion -> upper .)
    VARIABLE        reduce using rule 19 (declaracion -> upper .)
    NUMERO          reduce using rule 19 (declaracion -> upper .)
    FLOTANTE        reduce using rule 19 (declaracion -> upper .)
    TRUE            reduce using rule 19 (declaracion -> upper .)
    FALSE           reduce using rule 19 (declaracion -> upper .)
    APARENT         reduce using rule 19 (declaracion -> upper .)
    LLAIZQ          reduce using rule 19 (declaracion -> upper .)
    CORIZQ          reduce using rule 19 (declaracion -> upper .)
    NOT             reduce using rule 19 (declaracion -> upper .)
    CADENACOMILLADOBLE reduce using rule 19 (declaracion -> upper .)
    CADENACOMILLASIMPLE reduce using rule 19 (declaracion -> upper .)
    DEF             reduce using rule 19 (declaracion -> upper .)
    RETURN          reduce using rule 19 (declaracion -> upper .)
    IF              reduce using rule 19 (declaracion -> upper .)
    PRINT           reduce using rule 19 (declaracion -> upper .)
    LEN             reduce using rule 19 (declaracion -> upper .)
    INPUT           reduce using rule 19 (declaracion -> upper .)
    SIMPLECOMILLA   reduce using rule 19 (declaracion -> upper .)
    INT             reduce using rule 19 (declaracion -> upper .)
    CPARENT         reduce using rule 19 (declaracion -> upper .)
    LLADER          reduce using rule 19 (declaracion -> upper .)
    CORDER          reduce using rule 19 (declaracion -> upper .)
    DOSPUNTOS       reduce using rule 19 (declaracion -> upper .)
    COMA            reduce using rule 19 (declaracion -> upper .)
    ELSE            reduce using rule 19 (declaracion -> upper .)
    ELIF            reduce using rule 19 (declaracion -> upper .)


state 19

    (20) declaracion -> lower .

    AND             reduce using rule 20 (declaracion -> lower .)
    OR              reduce using rule 20 (declaracion -> lower .)
    $end            reduce using rule 20 (declaracion -> lower .)
    MAS             reduce using rule 20 (declaracion -> lower .)
    MENOS           reduce using rule 20 (declaracion -> lower .)
    POR             reduce using rule 20 (declaracion -> lower .)
    DIVIDIR         reduce using rule 20 (declaracion -> lower .)
    POTENCIA        reduce using rule 20 (declaracion -> lower .)
    MODULO          reduce using rule 20 (declaracion -> lower .)
    MENOR           reduce using rule 20 (declaracion -> lower .)
    MAYOR           reduce using rule 20 (declaracion -> lower .)
    MENORIGUAL      reduce using rule 20 (declaracion -> lower .)
    MAYORIGUAL      reduce using rule 20 (declaracion -> lower .)
    DOBLEIGUAL      reduce using rule 20 (declaracion -> lower .)
    DIFERENTE       reduce using rule 20 (declaracion -> lower .)
    IN              reduce using rule 20 (declaracion -> lower .)
    VARIABLE        reduce using rule 20 (declaracion -> lower .)
    NUMERO          reduce using rule 20 (declaracion -> lower .)
    FLOTANTE        reduce using rule 20 (declaracion -> lower .)
    TRUE            reduce using rule 20 (declaracion -> lower .)
    FALSE           reduce using rule 20 (declaracion -> lower .)
    APARENT         reduce using rule 20 (declaracion -> lower .)
    LLAIZQ          reduce using rule 20 (declaracion -> lower .)
    CORIZQ          reduce using rule 20 (declaracion -> lower .)
    NOT             reduce using rule 20 (declaracion -> lower .)
    CADENACOMILLADOBLE reduce using rule 20 (declaracion -> lower .)
    CADENACOMILLASIMPLE reduce using rule 20 (declaracion -> lower .)
    DEF             reduce using rule 20 (declaracion -> lower .)
    RETURN          reduce using rule 20 (declaracion -> lower .)
    IF              reduce using rule 20 (declaracion -> lower .)
    PRINT           reduce using rule 20 (declaracion -> lower .)
    LEN             reduce using rule 20 (declaracion -> lower .)
    INPUT           reduce using rule 20 (declaracion -> lower .)
    SIMPLECOMILLA   reduce using rule 20 (declaracion -> lower .)
    INT             reduce using rule 20 (declaracion -> lower .)
    CPARENT         reduce using rule 20 (declaracion -> lower .)
    LLADER          reduce using rule 20 (declaracion -> lower .)
    CORDER          reduce using rule 20 (declaracion -> lower .)
    DOSPUNTOS       reduce using rule 20 (declaracion -> lower .)
    COMA            reduce using rule 20 (declaracion -> lower .)
    ELSE            reduce using rule 20 (declaracion -> lower .)
    ELIF            reduce using rule 20 (declaracion -> lower .)


state 20

    (21) expresion -> TRUE .

    MAS             reduce using rule 21 (expresion -> TRUE .)
    MENOS           reduce using rule 21 (expresion -> TRUE .)
    POR             reduce using rule 21 (expresion -> TRUE .)
    DIVIDIR         reduce using rule 21 (expresion -> TRUE .)
    POTENCIA        reduce using rule 21 (expresion -> TRUE .)
    MODULO          reduce using rule 21 (expresion -> TRUE .)
    MENOR           reduce using rule 21 (expresion -> TRUE .)
    MAYOR           reduce using rule 21 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 21 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 21 (expresion -> TRUE .)
    DOBLEIGUAL      reduce using rule 21 (expresion -> TRUE .)
    DIFERENTE       reduce using rule 21 (expresion -> TRUE .)
    IN              reduce using rule 21 (expresion -> TRUE .)
    VARIABLE        reduce using rule 21 (expresion -> TRUE .)
    NUMERO          reduce using rule 21 (expresion -> TRUE .)
    FLOTANTE        reduce using rule 21 (expresion -> TRUE .)
    TRUE            reduce using rule 21 (expresion -> TRUE .)
    FALSE           reduce using rule 21 (expresion -> TRUE .)
    APARENT         reduce using rule 21 (expresion -> TRUE .)
    LLAIZQ          reduce using rule 21 (expresion -> TRUE .)
    CORIZQ          reduce using rule 21 (expresion -> TRUE .)
    NOT             reduce using rule 21 (expresion -> TRUE .)
    CADENACOMILLADOBLE reduce using rule 21 (expresion -> TRUE .)
    CADENACOMILLASIMPLE reduce using rule 21 (expresion -> TRUE .)
    DEF             reduce using rule 21 (expresion -> TRUE .)
    RETURN          reduce using rule 21 (expresion -> TRUE .)
    IF              reduce using rule 21 (expresion -> TRUE .)
    PRINT           reduce using rule 21 (expresion -> TRUE .)
    LEN             reduce using rule 21 (expresion -> TRUE .)
    INPUT           reduce using rule 21 (expresion -> TRUE .)
    SIMPLECOMILLA   reduce using rule 21 (expresion -> TRUE .)
    INT             reduce using rule 21 (expresion -> TRUE .)
    AND             reduce using rule 21 (expresion -> TRUE .)
    OR              reduce using rule 21 (expresion -> TRUE .)
    $end            reduce using rule 21 (expresion -> TRUE .)
    CPARENT         reduce using rule 21 (expresion -> TRUE .)
    LLADER          reduce using rule 21 (expresion -> TRUE .)
    CORDER          reduce using rule 21 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 21 (expresion -> TRUE .)
    COMA            reduce using rule 21 (expresion -> TRUE .)
    ELSE            reduce using rule 21 (expresion -> TRUE .)
    ELIF            reduce using rule 21 (expresion -> TRUE .)


state 21

    (22) expresion -> FALSE .

    MAS             reduce using rule 22 (expresion -> FALSE .)
    MENOS           reduce using rule 22 (expresion -> FALSE .)
    POR             reduce using rule 22 (expresion -> FALSE .)
    DIVIDIR         reduce using rule 22 (expresion -> FALSE .)
    POTENCIA        reduce using rule 22 (expresion -> FALSE .)
    MODULO          reduce using rule 22 (expresion -> FALSE .)
    MENOR           reduce using rule 22 (expresion -> FALSE .)
    MAYOR           reduce using rule 22 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 22 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 22 (expresion -> FALSE .)
    DOBLEIGUAL      reduce using rule 22 (expresion -> FALSE .)
    DIFERENTE       reduce using rule 22 (expresion -> FALSE .)
    IN              reduce using rule 22 (expresion -> FALSE .)
    VARIABLE        reduce using rule 22 (expresion -> FALSE .)
    NUMERO          reduce using rule 22 (expresion -> FALSE .)
    FLOTANTE        reduce using rule 22 (expresion -> FALSE .)
    TRUE            reduce using rule 22 (expresion -> FALSE .)
    FALSE           reduce using rule 22 (expresion -> FALSE .)
    APARENT         reduce using rule 22 (expresion -> FALSE .)
    LLAIZQ          reduce using rule 22 (expresion -> FALSE .)
    CORIZQ          reduce using rule 22 (expresion -> FALSE .)
    NOT             reduce using rule 22 (expresion -> FALSE .)
    CADENACOMILLADOBLE reduce using rule 22 (expresion -> FALSE .)
    CADENACOMILLASIMPLE reduce using rule 22 (expresion -> FALSE .)
    DEF             reduce using rule 22 (expresion -> FALSE .)
    RETURN          reduce using rule 22 (expresion -> FALSE .)
    IF              reduce using rule 22 (expresion -> FALSE .)
    PRINT           reduce using rule 22 (expresion -> FALSE .)
    LEN             reduce using rule 22 (expresion -> FALSE .)
    INPUT           reduce using rule 22 (expresion -> FALSE .)
    SIMPLECOMILLA   reduce using rule 22 (expresion -> FALSE .)
    INT             reduce using rule 22 (expresion -> FALSE .)
    AND             reduce using rule 22 (expresion -> FALSE .)
    OR              reduce using rule 22 (expresion -> FALSE .)
    $end            reduce using rule 22 (expresion -> FALSE .)
    CPARENT         reduce using rule 22 (expresion -> FALSE .)
    LLADER          reduce using rule 22 (expresion -> FALSE .)
    CORDER          reduce using rule 22 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 22 (expresion -> FALSE .)
    COMA            reduce using rule 22 (expresion -> FALSE .)
    ELSE            reduce using rule 22 (expresion -> FALSE .)
    ELIF            reduce using rule 22 (expresion -> FALSE .)


state 22

    (35) expresion -> MENOS . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 77
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 23

    (36) expresion -> APARENT . expresion CPARENT
    (45) expresion -> APARENT . VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT . VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT . VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT . VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT . VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT . VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (57) expresion -> APARENT . expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT . expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT . expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT . expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT . expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT . expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (66) expresion -> APARENT . declaracion AND declaracion CPARENT
    (67) expresion -> APARENT . declaracion OR declaracion CPARENT
    (68) expresion -> APARENT . NOT declaracion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 80
    NOT             shift and go to state 82
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 79
    declaracion                    shift and go to state 81
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 24

    (37) expresion -> LLAIZQ . expresion LLADER
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 83
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 25

    (38) expresion -> CORIZQ . expresion CORDER
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 84
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 26

    (65) expresion -> NOT . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 85
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 27

    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    $end            reduce using rule 69 (expresion -> NUMERO .)
    CPARENT         reduce using rule 69 (expresion -> NUMERO .)
    LLADER          reduce using rule 69 (expresion -> NUMERO .)
    CORDER          reduce using rule 69 (expresion -> NUMERO .)
    DOSPUNTOS       reduce using rule 69 (expresion -> NUMERO .)
    COMA            reduce using rule 69 (expresion -> NUMERO .)
    ELSE            reduce using rule 69 (expresion -> NUMERO .)
    ELIF            reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 28

    (70) expresion -> CADENACOMILLADOBLE .

    MAS             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MENOS           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    POR             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    DIVIDIR         reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    POTENCIA        reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MODULO          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MENOR           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MAYOR           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MENORIGUAL      reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    MAYORIGUAL      reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    DOBLEIGUAL      reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    DIFERENTE       reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    IN              reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    VARIABLE        reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    NUMERO          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    FLOTANTE        reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    TRUE            reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    FALSE           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    APARENT         reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    LLAIZQ          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    CORIZQ          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    NOT             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    CADENACOMILLADOBLE reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    CADENACOMILLASIMPLE reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    DEF             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    RETURN          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    IF              reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    PRINT           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    LEN             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    INPUT           reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    SIMPLECOMILLA   reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    INT             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    AND             reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    OR              reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    $end            reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    CPARENT         reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    LLADER          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    CORDER          reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    DOSPUNTOS       reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    COMA            reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    ELSE            reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)
    ELIF            reduce using rule 70 (expresion -> CADENACOMILLADOBLE .)


state 29

    (71) expresion -> CADENACOMILLASIMPLE .

    MAS             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MENOS           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    POR             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    DIVIDIR         reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    POTENCIA        reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MODULO          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MENOR           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MAYOR           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MENORIGUAL      reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    MAYORIGUAL      reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    DOBLEIGUAL      reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    DIFERENTE       reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    IN              reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    VARIABLE        reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    NUMERO          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    FLOTANTE        reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    TRUE            reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    FALSE           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    APARENT         reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    LLAIZQ          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    CORIZQ          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    NOT             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    CADENACOMILLADOBLE reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    CADENACOMILLASIMPLE reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    DEF             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    RETURN          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    IF              reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    PRINT           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    LEN             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    INPUT           reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    SIMPLECOMILLA   reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    INT             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    AND             reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    OR              reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    $end            reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    CPARENT         reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    LLADER          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    CORDER          reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    DOSPUNTOS       reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    COMA            reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    ELSE            reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)
    ELIF            reduce using rule 71 (expresion -> CADENACOMILLASIMPLE .)


state 30

    (84) expr_def_funcion -> DEF . expr_funcion DOSPUNTOS
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT

    VARIABLE        shift and go to state 88

    expr_funcion                   shift and go to state 87

state 31

    (85) expr_return -> RETURN . variable
    (73) variable -> . VARIABLE
    (74) variable -> . NUMERO
    (75) variable -> . FLOTANTE
    (76) variable -> . expr_funcion
    (77) variable -> . expresion
    (78) variable -> . lista
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 90
    NUMERO          shift and go to state 91
    FLOTANTE        shift and go to state 92
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    variable                       shift and go to state 89
    expr_funcion                   shift and go to state 93
    expresion                      shift and go to state 94
    lista                          shift and go to state 95
    declaracion                    shift and go to state 44
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 32

    (88) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> IF . expresion DOSPUNTOS codigo_interno
    (90) if -> IF . expresion DOSPUNTOS
    (91) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> IF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> IF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    APARENT         shift and go to state 96
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 97
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 33

    (98) expr_print -> PRINT . APARENT VARIABLE CPARENT
    (99) expr_print -> PRINT . APARENT expresion CPARENT
    (100) expr_print -> PRINT . APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> PRINT . APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> PRINT . APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> PRINT . APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> PRINT . APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> PRINT . APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> PRINT . APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> PRINT . APARENT expresion COMA expresion CPARENT

    APARENT         shift and go to state 98


state 34

    (112) len -> LEN . APARENT VARIABLE CPARENT

    APARENT         shift and go to state 99


state 35

    (113) input -> INPUT . APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> INPUT . APARENT CADENACOMILLASIMPLE CPARENT

    APARENT         shift and go to state 100


state 36

    (111) in -> IN .

    AND             reduce using rule 111 (in -> IN .)
    OR              reduce using rule 111 (in -> IN .)
    $end            reduce using rule 111 (in -> IN .)
    VARIABLE        reduce using rule 111 (in -> IN .)
    FLOTANTE        reduce using rule 111 (in -> IN .)
    TRUE            reduce using rule 111 (in -> IN .)
    FALSE           reduce using rule 111 (in -> IN .)
    MENOS           reduce using rule 111 (in -> IN .)
    APARENT         reduce using rule 111 (in -> IN .)
    LLAIZQ          reduce using rule 111 (in -> IN .)
    CORIZQ          reduce using rule 111 (in -> IN .)
    NOT             reduce using rule 111 (in -> IN .)
    NUMERO          reduce using rule 111 (in -> IN .)
    CADENACOMILLADOBLE reduce using rule 111 (in -> IN .)
    CADENACOMILLASIMPLE reduce using rule 111 (in -> IN .)
    DEF             reduce using rule 111 (in -> IN .)
    RETURN          reduce using rule 111 (in -> IN .)
    IF              reduce using rule 111 (in -> IN .)
    PRINT           reduce using rule 111 (in -> IN .)
    LEN             reduce using rule 111 (in -> IN .)
    INPUT           reduce using rule 111 (in -> IN .)
    IN              reduce using rule 111 (in -> IN .)
    SIMPLECOMILLA   reduce using rule 111 (in -> IN .)
    INT             reduce using rule 111 (in -> IN .)
    MAS             reduce using rule 111 (in -> IN .)
    POR             reduce using rule 111 (in -> IN .)
    DIVIDIR         reduce using rule 111 (in -> IN .)
    POTENCIA        reduce using rule 111 (in -> IN .)
    MODULO          reduce using rule 111 (in -> IN .)
    MENOR           reduce using rule 111 (in -> IN .)
    MAYOR           reduce using rule 111 (in -> IN .)
    MENORIGUAL      reduce using rule 111 (in -> IN .)
    MAYORIGUAL      reduce using rule 111 (in -> IN .)
    DOBLEIGUAL      reduce using rule 111 (in -> IN .)
    DIFERENTE       reduce using rule 111 (in -> IN .)
    CPARENT         reduce using rule 111 (in -> IN .)
    LLADER          reduce using rule 111 (in -> IN .)
    CORDER          reduce using rule 111 (in -> IN .)
    DOSPUNTOS       reduce using rule 111 (in -> IN .)
    COMA            reduce using rule 111 (in -> IN .)
    ELSE            reduce using rule 111 (in -> IN .)
    ELIF            reduce using rule 111 (in -> IN .)


state 37

    (122) join -> SIMPLECOMILLA . VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA . VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 101


state 38

    (124) int -> INT . APARENT expresion CPARENT
    (125) int -> INT . APARENT input CPARENT

    APARENT         shift and go to state 102


state 39

    (63) expresion -> declaracion AND . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 103
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 40

    (64) expresion -> declaracion OR . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 104
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 41

    (115) in -> VARIABLE . in declaracion
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 61
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 42

    (1) declaracion -> VARIABLE ASIGNACION . expresion
    (2) declaracion -> VARIABLE ASIGNACION . declaracion
    (81) lista -> VARIABLE ASIGNACION . CORIZQ CORDER
    (82) lista -> VARIABLE ASIGNACION . CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE ASIGNACION . CORIZQ VARIABLE CORDER
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CORIZQ          shift and go to state 107
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 105
    declaracion                    shift and go to state 106
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 43

    (118) in -> expresion . in declaracion
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 44

    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

    AND             shift and go to state 39
    OR              shift and go to state 40


state 45

    (29) expresion -> VARIABLE MAS . VARIABLE

    VARIABLE        shift and go to state 108


state 46

    (30) expresion -> VARIABLE MENOS . VARIABLE
    (35) expresion -> MENOS . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 109
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 77
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 47

    (31) expresion -> VARIABLE POR . VARIABLE

    VARIABLE        shift and go to state 110


state 48

    (32) expresion -> VARIABLE DIVIDIR . VARIABLE

    VARIABLE        shift and go to state 111


state 49

    (33) expresion -> VARIABLE POTENCIA . VARIABLE

    VARIABLE        shift and go to state 112


state 50

    (34) expresion -> VARIABLE MODULO . VARIABLE

    VARIABLE        shift and go to state 113


state 51

    (39) expresion -> VARIABLE MENOR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 114
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 52

    (40) expresion -> VARIABLE MAYOR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 115
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 53

    (41) expresion -> VARIABLE MENORIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 116
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 54

    (42) expresion -> VARIABLE MAYORIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 117
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 55

    (43) expresion -> VARIABLE DOBLEIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 118
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 56

    (44) expresion -> VARIABLE DIFERENTE . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 119
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 57

    (72) expr_funcion -> VARIABLE APARENT . params CPARENT
    (36) expresion -> APARENT . expresion CPARENT
    (45) expresion -> APARENT . VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT . VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT . VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT . VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT . VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT . VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (57) expresion -> APARENT . expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT . expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT . expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT . expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT . expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT . expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (66) expresion -> APARENT . declaracion AND declaracion CPARENT
    (67) expresion -> APARENT . declaracion OR declaracion CPARENT
    (68) expresion -> APARENT . NOT declaracion CPARENT
    (79) params -> . variable
    (80) params -> . params COMA params
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (73) variable -> . VARIABLE
    (74) variable -> . NUMERO
    (75) variable -> . FLOTANTE
    (76) variable -> . expr_funcion
    (77) variable -> . expresion
    (78) variable -> . lista
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 120
    NOT             shift and go to state 82
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NUMERO          shift and go to state 124
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 125
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    params                         shift and go to state 121
    expresion                      shift and go to state 122
    declaracion                    shift and go to state 81
    variable                       shift and go to state 123
    expr_funcion                   shift and go to state 126
    lista                          shift and go to state 127
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 58

    (116) in -> NUMERO . in declaracion
    (69) expresion -> NUMERO .
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 59

    (108) append -> VARIABLE PUNTO . APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE PUNTO . APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE PUNTO . APPEND APARENT FLOTANTE CPARENT
    (126) upper -> VARIABLE PUNTO . UPPER APARENT CPARENT
    (127) lower -> VARIABLE PUNTO . LOWER APARENT CPARENT

    APPEND          shift and go to state 128
    UPPER           shift and go to state 129
    LOWER           shift and go to state 130


state 60

    (117) in -> FLOTANTE . in declaracion
    (5) declaracion -> FLOTANTE .
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 61

    (115) in -> VARIABLE in . declaracion
    (15) declaracion -> in .
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 15 (declaracion -> in .)
    OR              reduce using rule 15 (declaracion -> in .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 14
    declaracion                    shift and go to state 131
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 62

    (119) is -> VARIABLE IS . NUMERO
    (120) is -> VARIABLE IS . FLOTANTE
    (121) is -> VARIABLE IS . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    NUMERO          shift and go to state 132
    FLOTANTE        shift and go to state 133
    VARIABLE        shift and go to state 2
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 134
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 63

    (23) expresion -> expresion MAS . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 135
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 64

    (24) expresion -> expresion MENOS . expresion
    (35) expresion -> MENOS . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 136
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 65

    (25) expresion -> expresion POR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 137
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 66

    (26) expresion -> expresion DIVIDIR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 138
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 67

    (27) expresion -> expresion POTENCIA . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 139
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 68

    (28) expresion -> expresion MODULO . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 140
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 69

    (51) expresion -> expresion MENOR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 141
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 70

    (52) expresion -> expresion MAYOR . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 142
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 71

    (53) expresion -> expresion MENORIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 143
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 72

    (54) expresion -> expresion MAYORIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 144
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 73

    (55) expresion -> expresion DOBLEIGUAL . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 145
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 74

    (56) expresion -> expresion DIFERENTE . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 146
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 75

    (118) in -> expresion in . declaracion
    (15) declaracion -> in .
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 15 (declaracion -> in .)
    OR              reduce using rule 15 (declaracion -> in .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    in                             shift and go to state 14
    declaracion                    shift and go to state 147
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 76

    (117) in -> FLOTANTE in . declaracion
    (15) declaracion -> in .
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 15 (declaracion -> in .)
    OR              reduce using rule 15 (declaracion -> in .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 14
    declaracion                    shift and go to state 148
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 77

    (35) expresion -> MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 35 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 35 (expresion -> MENOS expresion .)
    POR             reduce using rule 35 (expresion -> MENOS expresion .)
    DIVIDIR         reduce using rule 35 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 35 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 35 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 35 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 35 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 35 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 35 (expresion -> MENOS expresion .)
    DOBLEIGUAL      reduce using rule 35 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 35 (expresion -> MENOS expresion .)
    IN              reduce using rule 35 (expresion -> MENOS expresion .)
    VARIABLE        reduce using rule 35 (expresion -> MENOS expresion .)
    NUMERO          reduce using rule 35 (expresion -> MENOS expresion .)
    FLOTANTE        reduce using rule 35 (expresion -> MENOS expresion .)
    TRUE            reduce using rule 35 (expresion -> MENOS expresion .)
    FALSE           reduce using rule 35 (expresion -> MENOS expresion .)
    APARENT         reduce using rule 35 (expresion -> MENOS expresion .)
    LLAIZQ          reduce using rule 35 (expresion -> MENOS expresion .)
    CORIZQ          reduce using rule 35 (expresion -> MENOS expresion .)
    NOT             reduce using rule 35 (expresion -> MENOS expresion .)
    CADENACOMILLADOBLE reduce using rule 35 (expresion -> MENOS expresion .)
    CADENACOMILLASIMPLE reduce using rule 35 (expresion -> MENOS expresion .)
    DEF             reduce using rule 35 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 35 (expresion -> MENOS expresion .)
    IF              reduce using rule 35 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 35 (expresion -> MENOS expresion .)
    LEN             reduce using rule 35 (expresion -> MENOS expresion .)
    INPUT           reduce using rule 35 (expresion -> MENOS expresion .)
    SIMPLECOMILLA   reduce using rule 35 (expresion -> MENOS expresion .)
    INT             reduce using rule 35 (expresion -> MENOS expresion .)
    $end            reduce using rule 35 (expresion -> MENOS expresion .)
    CPARENT         reduce using rule 35 (expresion -> MENOS expresion .)
    LLADER          reduce using rule 35 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 35 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 35 (expresion -> MENOS expresion .)
    COMA            reduce using rule 35 (expresion -> MENOS expresion .)
    ELSE            reduce using rule 35 (expresion -> MENOS expresion .)
    ELIF            reduce using rule 35 (expresion -> MENOS expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! OR              [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIR         [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 78

    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    $end            reduce using rule 4 (declaracion -> VARIABLE .)
    CPARENT         reduce using rule 4 (declaracion -> VARIABLE .)
    LLADER          reduce using rule 4 (declaracion -> VARIABLE .)
    CORDER          reduce using rule 4 (declaracion -> VARIABLE .)
    DOSPUNTOS       reduce using rule 4 (declaracion -> VARIABLE .)
    COMA            reduce using rule 4 (declaracion -> VARIABLE .)
    ELSE            reduce using rule 4 (declaracion -> VARIABLE .)
    ELIF            reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! POR             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! POTENCIA        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MODULO          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DOBLEIGUAL      [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! IN              [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! NUMERO          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! APARENT         [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! LLAIZQ          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CORIZQ          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! NOT             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! DEF             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! IF              [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! LEN             [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! INPUT           [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 4 (declaracion -> VARIABLE .) ]
  ! INT             [ reduce using rule 4 (declaracion -> VARIABLE .) ]

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 79

    (36) expresion -> APARENT expresion . CPARENT
    (57) expresion -> APARENT expresion . CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT expresion . CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT expresion . CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT expresion . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT expresion . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT expresion . CPARENT DIFERENTE APARENT expresion CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 149
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 80

    (45) expresion -> APARENT VARIABLE . CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT VARIABLE . CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT VARIABLE . CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT VARIABLE . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT VARIABLE . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT VARIABLE . CPARENT DIFERENTE APARENT expresion CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 150
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 81

    (66) expresion -> APARENT declaracion . AND declaracion CPARENT
    (67) expresion -> APARENT declaracion . OR declaracion CPARENT
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

    AND             shift and go to state 151
    OR              shift and go to state 152


state 82

    (68) expresion -> APARENT NOT . declaracion CPARENT
    (65) expresion -> NOT . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 153
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 83

    (37) expresion -> LLAIZQ expresion . LLADER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    LLADER          shift and go to state 154
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 84

    (38) expresion -> CORIZQ expresion . CORDER
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CORDER          shift and go to state 155
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 85

    (65) expresion -> NOT declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 65 (expresion -> NOT declaracion .)
    MENOS           reduce using rule 65 (expresion -> NOT declaracion .)
    POR             reduce using rule 65 (expresion -> NOT declaracion .)
    DIVIDIR         reduce using rule 65 (expresion -> NOT declaracion .)
    POTENCIA        reduce using rule 65 (expresion -> NOT declaracion .)
    MODULO          reduce using rule 65 (expresion -> NOT declaracion .)
    MENOR           reduce using rule 65 (expresion -> NOT declaracion .)
    MAYOR           reduce using rule 65 (expresion -> NOT declaracion .)
    MENORIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    DOBLEIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    DIFERENTE       reduce using rule 65 (expresion -> NOT declaracion .)
    IN              reduce using rule 65 (expresion -> NOT declaracion .)
    VARIABLE        reduce using rule 65 (expresion -> NOT declaracion .)
    NUMERO          reduce using rule 65 (expresion -> NOT declaracion .)
    FLOTANTE        reduce using rule 65 (expresion -> NOT declaracion .)
    TRUE            reduce using rule 65 (expresion -> NOT declaracion .)
    FALSE           reduce using rule 65 (expresion -> NOT declaracion .)
    APARENT         reduce using rule 65 (expresion -> NOT declaracion .)
    LLAIZQ          reduce using rule 65 (expresion -> NOT declaracion .)
    CORIZQ          reduce using rule 65 (expresion -> NOT declaracion .)
    NOT             reduce using rule 65 (expresion -> NOT declaracion .)
    CADENACOMILLADOBLE reduce using rule 65 (expresion -> NOT declaracion .)
    CADENACOMILLASIMPLE reduce using rule 65 (expresion -> NOT declaracion .)
    DEF             reduce using rule 65 (expresion -> NOT declaracion .)
    RETURN          reduce using rule 65 (expresion -> NOT declaracion .)
    IF              reduce using rule 65 (expresion -> NOT declaracion .)
    PRINT           reduce using rule 65 (expresion -> NOT declaracion .)
    LEN             reduce using rule 65 (expresion -> NOT declaracion .)
    INPUT           reduce using rule 65 (expresion -> NOT declaracion .)
    SIMPLECOMILLA   reduce using rule 65 (expresion -> NOT declaracion .)
    INT             reduce using rule 65 (expresion -> NOT declaracion .)
    $end            reduce using rule 65 (expresion -> NOT declaracion .)
    CPARENT         reduce using rule 65 (expresion -> NOT declaracion .)
    LLADER          reduce using rule 65 (expresion -> NOT declaracion .)
    CORDER          reduce using rule 65 (expresion -> NOT declaracion .)
    DOSPUNTOS       reduce using rule 65 (expresion -> NOT declaracion .)
    COMA            reduce using rule 65 (expresion -> NOT declaracion .)
    ELSE            reduce using rule 65 (expresion -> NOT declaracion .)
    ELIF            reduce using rule 65 (expresion -> NOT declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 65 (expresion -> NOT declaracion .) ]
  ! OR              [ reduce using rule 65 (expresion -> NOT declaracion .) ]


state 86

    (116) in -> NUMERO in . declaracion
    (15) declaracion -> in .
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 15 (declaracion -> in .)
    OR              reduce using rule 15 (declaracion -> in .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 14
    declaracion                    shift and go to state 156
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 87

    (84) expr_def_funcion -> DEF expr_funcion . DOSPUNTOS

    DOSPUNTOS       shift and go to state 157


state 88

    (72) expr_funcion -> VARIABLE . APARENT params CPARENT

    APARENT         shift and go to state 158


state 89

    (85) expr_return -> RETURN variable .

    AND             reduce using rule 85 (expr_return -> RETURN variable .)
    OR              reduce using rule 85 (expr_return -> RETURN variable .)
    $end            reduce using rule 85 (expr_return -> RETURN variable .)
    MAS             reduce using rule 85 (expr_return -> RETURN variable .)
    MENOS           reduce using rule 85 (expr_return -> RETURN variable .)
    POR             reduce using rule 85 (expr_return -> RETURN variable .)
    DIVIDIR         reduce using rule 85 (expr_return -> RETURN variable .)
    POTENCIA        reduce using rule 85 (expr_return -> RETURN variable .)
    MODULO          reduce using rule 85 (expr_return -> RETURN variable .)
    MENOR           reduce using rule 85 (expr_return -> RETURN variable .)
    MAYOR           reduce using rule 85 (expr_return -> RETURN variable .)
    MENORIGUAL      reduce using rule 85 (expr_return -> RETURN variable .)
    MAYORIGUAL      reduce using rule 85 (expr_return -> RETURN variable .)
    DOBLEIGUAL      reduce using rule 85 (expr_return -> RETURN variable .)
    DIFERENTE       reduce using rule 85 (expr_return -> RETURN variable .)
    IN              reduce using rule 85 (expr_return -> RETURN variable .)
    VARIABLE        reduce using rule 85 (expr_return -> RETURN variable .)
    NUMERO          reduce using rule 85 (expr_return -> RETURN variable .)
    FLOTANTE        reduce using rule 85 (expr_return -> RETURN variable .)
    TRUE            reduce using rule 85 (expr_return -> RETURN variable .)
    FALSE           reduce using rule 85 (expr_return -> RETURN variable .)
    APARENT         reduce using rule 85 (expr_return -> RETURN variable .)
    LLAIZQ          reduce using rule 85 (expr_return -> RETURN variable .)
    CORIZQ          reduce using rule 85 (expr_return -> RETURN variable .)
    NOT             reduce using rule 85 (expr_return -> RETURN variable .)
    CADENACOMILLADOBLE reduce using rule 85 (expr_return -> RETURN variable .)
    CADENACOMILLASIMPLE reduce using rule 85 (expr_return -> RETURN variable .)
    DEF             reduce using rule 85 (expr_return -> RETURN variable .)
    RETURN          reduce using rule 85 (expr_return -> RETURN variable .)
    IF              reduce using rule 85 (expr_return -> RETURN variable .)
    PRINT           reduce using rule 85 (expr_return -> RETURN variable .)
    LEN             reduce using rule 85 (expr_return -> RETURN variable .)
    INPUT           reduce using rule 85 (expr_return -> RETURN variable .)
    SIMPLECOMILLA   reduce using rule 85 (expr_return -> RETURN variable .)
    INT             reduce using rule 85 (expr_return -> RETURN variable .)
    CPARENT         reduce using rule 85 (expr_return -> RETURN variable .)
    LLADER          reduce using rule 85 (expr_return -> RETURN variable .)
    CORDER          reduce using rule 85 (expr_return -> RETURN variable .)
    DOSPUNTOS       reduce using rule 85 (expr_return -> RETURN variable .)
    COMA            reduce using rule 85 (expr_return -> RETURN variable .)
    ELSE            reduce using rule 85 (expr_return -> RETURN variable .)
    ELIF            reduce using rule 85 (expr_return -> RETURN variable .)


state 90

    (73) variable -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 4 (declaracion -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 4 (declaracion -> VARIABLE .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 73 (variable -> VARIABLE .)
    CPARENT         reduce using rule 73 (variable -> VARIABLE .)
    LLADER          reduce using rule 73 (variable -> VARIABLE .)
    CORDER          reduce using rule 73 (variable -> VARIABLE .)
    DOSPUNTOS       reduce using rule 73 (variable -> VARIABLE .)
    COMA            reduce using rule 73 (variable -> VARIABLE .)
    ELSE            reduce using rule 73 (variable -> VARIABLE .)
    ELIF            reduce using rule 73 (variable -> VARIABLE .)
    APARENT         shift and go to state 57
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 159
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MENOS           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! POR             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! POTENCIA        [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MODULO          [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MENOR           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MAYOR           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! DOBLEIGUAL      [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! IN              [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! NUMERO          [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! TRUE            [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! FALSE           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! APARENT         [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! LLAIZQ          [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! CORIZQ          [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! NOT             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! DEF             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! RETURN          [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! IF              [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! PRINT           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! LEN             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! INPUT           [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! INT             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! AND             [ reduce using rule 73 (variable -> VARIABLE .) ]
  ! OR              [ reduce using rule 73 (variable -> VARIABLE .) ]

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 91

    (74) variable -> NUMERO .
    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for MAS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYOR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for IN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NUMERO resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for TRUE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FALSE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for APARENT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NOT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DEF resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for RETURN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for IF resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LEN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for INPUT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for SIMPLECOMILLA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for INT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for AND resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for OR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for $end resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CPARENT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLADER resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORDER resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for COMA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELIF resolved using rule 69 (expresion -> NUMERO .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    $end            reduce using rule 69 (expresion -> NUMERO .)
    CPARENT         reduce using rule 69 (expresion -> NUMERO .)
    LLADER          reduce using rule 69 (expresion -> NUMERO .)
    CORDER          reduce using rule 69 (expresion -> NUMERO .)
    DOSPUNTOS       reduce using rule 69 (expresion -> NUMERO .)
    COMA            reduce using rule 69 (expresion -> NUMERO .)
    ELSE            reduce using rule 69 (expresion -> NUMERO .)
    ELIF            reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MENOS           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! POR             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 74 (variable -> NUMERO .) ]
  ! POTENCIA        [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MODULO          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MENOR           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MAYOR           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MENORIGUAL      [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MAYORIGUAL      [ reduce using rule 74 (variable -> NUMERO .) ]
  ! DOBLEIGUAL      [ reduce using rule 74 (variable -> NUMERO .) ]
  ! DIFERENTE       [ reduce using rule 74 (variable -> NUMERO .) ]
  ! IN              [ reduce using rule 74 (variable -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 74 (variable -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 74 (variable -> NUMERO .) ]
  ! TRUE            [ reduce using rule 74 (variable -> NUMERO .) ]
  ! FALSE           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! APARENT         [ reduce using rule 74 (variable -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! NOT             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 74 (variable -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 74 (variable -> NUMERO .) ]
  ! DEF             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! RETURN          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! IF              [ reduce using rule 74 (variable -> NUMERO .) ]
  ! PRINT           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! LEN             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! INPUT           [ reduce using rule 74 (variable -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 74 (variable -> NUMERO .) ]
  ! INT             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! AND             [ reduce using rule 74 (variable -> NUMERO .) ]
  ! OR              [ reduce using rule 74 (variable -> NUMERO .) ]
  ! $end            [ reduce using rule 74 (variable -> NUMERO .) ]
  ! CPARENT         [ reduce using rule 74 (variable -> NUMERO .) ]
  ! LLADER          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! CORDER          [ reduce using rule 74 (variable -> NUMERO .) ]
  ! DOSPUNTOS       [ reduce using rule 74 (variable -> NUMERO .) ]
  ! COMA            [ reduce using rule 74 (variable -> NUMERO .) ]
  ! ELSE            [ reduce using rule 74 (variable -> NUMERO .) ]
  ! ELIF            [ reduce using rule 74 (variable -> NUMERO .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 92

    (75) variable -> FLOTANTE .
    (5) declaracion -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for AND resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for OR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 75 (variable -> FLOTANTE .)
    POR             reduce using rule 75 (variable -> FLOTANTE .)
    DIVIDIR         reduce using rule 75 (variable -> FLOTANTE .)
    POTENCIA        reduce using rule 75 (variable -> FLOTANTE .)
    MODULO          reduce using rule 75 (variable -> FLOTANTE .)
    MENOR           reduce using rule 75 (variable -> FLOTANTE .)
    MAYOR           reduce using rule 75 (variable -> FLOTANTE .)
    MENORIGUAL      reduce using rule 75 (variable -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 75 (variable -> FLOTANTE .)
    DOBLEIGUAL      reduce using rule 75 (variable -> FLOTANTE .)
    DIFERENTE       reduce using rule 75 (variable -> FLOTANTE .)
    $end            reduce using rule 75 (variable -> FLOTANTE .)
    CPARENT         reduce using rule 75 (variable -> FLOTANTE .)
    LLADER          reduce using rule 75 (variable -> FLOTANTE .)
    CORDER          reduce using rule 75 (variable -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 75 (variable -> FLOTANTE .)
    COMA            reduce using rule 75 (variable -> FLOTANTE .)
    ELSE            reduce using rule 75 (variable -> FLOTANTE .)
    ELIF            reduce using rule 75 (variable -> FLOTANTE .)
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! IN              [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! VARIABLE        [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! NUMERO          [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! FLOTANTE        [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! TRUE            [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! FALSE           [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! APARENT         [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! LLAIZQ          [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! CORIZQ          [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! NOT             [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! DEF             [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! RETURN          [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! IF              [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! PRINT           [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! LEN             [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! INPUT           [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! INT             [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! AND             [ reduce using rule 75 (variable -> FLOTANTE .) ]
  ! OR              [ reduce using rule 75 (variable -> FLOTANTE .) ]

    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 93

    (76) variable -> expr_funcion .
    (6) declaracion -> expr_funcion .

  ! reduce/reduce conflict for AND resolved using rule 6 (declaracion -> expr_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 6 (declaracion -> expr_funcion .)
    MAS             reduce using rule 76 (variable -> expr_funcion .)
    MENOS           reduce using rule 76 (variable -> expr_funcion .)
    POR             reduce using rule 76 (variable -> expr_funcion .)
    DIVIDIR         reduce using rule 76 (variable -> expr_funcion .)
    POTENCIA        reduce using rule 76 (variable -> expr_funcion .)
    MODULO          reduce using rule 76 (variable -> expr_funcion .)
    MENOR           reduce using rule 76 (variable -> expr_funcion .)
    MAYOR           reduce using rule 76 (variable -> expr_funcion .)
    MENORIGUAL      reduce using rule 76 (variable -> expr_funcion .)
    MAYORIGUAL      reduce using rule 76 (variable -> expr_funcion .)
    DOBLEIGUAL      reduce using rule 76 (variable -> expr_funcion .)
    DIFERENTE       reduce using rule 76 (variable -> expr_funcion .)
    IN              reduce using rule 76 (variable -> expr_funcion .)
    VARIABLE        reduce using rule 76 (variable -> expr_funcion .)
    NUMERO          reduce using rule 76 (variable -> expr_funcion .)
    FLOTANTE        reduce using rule 76 (variable -> expr_funcion .)
    TRUE            reduce using rule 76 (variable -> expr_funcion .)
    FALSE           reduce using rule 76 (variable -> expr_funcion .)
    APARENT         reduce using rule 76 (variable -> expr_funcion .)
    LLAIZQ          reduce using rule 76 (variable -> expr_funcion .)
    CORIZQ          reduce using rule 76 (variable -> expr_funcion .)
    NOT             reduce using rule 76 (variable -> expr_funcion .)
    CADENACOMILLADOBLE reduce using rule 76 (variable -> expr_funcion .)
    CADENACOMILLASIMPLE reduce using rule 76 (variable -> expr_funcion .)
    DEF             reduce using rule 76 (variable -> expr_funcion .)
    RETURN          reduce using rule 76 (variable -> expr_funcion .)
    IF              reduce using rule 76 (variable -> expr_funcion .)
    PRINT           reduce using rule 76 (variable -> expr_funcion .)
    LEN             reduce using rule 76 (variable -> expr_funcion .)
    INPUT           reduce using rule 76 (variable -> expr_funcion .)
    SIMPLECOMILLA   reduce using rule 76 (variable -> expr_funcion .)
    INT             reduce using rule 76 (variable -> expr_funcion .)
    $end            reduce using rule 76 (variable -> expr_funcion .)
    CPARENT         reduce using rule 76 (variable -> expr_funcion .)
    LLADER          reduce using rule 76 (variable -> expr_funcion .)
    CORDER          reduce using rule 76 (variable -> expr_funcion .)
    DOSPUNTOS       reduce using rule 76 (variable -> expr_funcion .)
    COMA            reduce using rule 76 (variable -> expr_funcion .)
    ELSE            reduce using rule 76 (variable -> expr_funcion .)
    ELIF            reduce using rule 76 (variable -> expr_funcion .)
    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)

  ! AND             [ reduce using rule 76 (variable -> expr_funcion .) ]
  ! OR              [ reduce using rule 76 (variable -> expr_funcion .) ]


state 94

    (77) variable -> expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 77 (variable -> expresion .)
    CPARENT         reduce using rule 77 (variable -> expresion .)
    LLADER          reduce using rule 77 (variable -> expresion .)
    CORDER          reduce using rule 77 (variable -> expresion .)
    DOSPUNTOS       reduce using rule 77 (variable -> expresion .)
    COMA            reduce using rule 77 (variable -> expresion .)
    ELSE            reduce using rule 77 (variable -> expresion .)
    ELIF            reduce using rule 77 (variable -> expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 77 (variable -> expresion .) ]
  ! MENOS           [ reduce using rule 77 (variable -> expresion .) ]
  ! POR             [ reduce using rule 77 (variable -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 77 (variable -> expresion .) ]
  ! POTENCIA        [ reduce using rule 77 (variable -> expresion .) ]
  ! MODULO          [ reduce using rule 77 (variable -> expresion .) ]
  ! MENOR           [ reduce using rule 77 (variable -> expresion .) ]
  ! MAYOR           [ reduce using rule 77 (variable -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 77 (variable -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 77 (variable -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 77 (variable -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 77 (variable -> expresion .) ]
  ! IN              [ reduce using rule 77 (variable -> expresion .) ]
  ! VARIABLE        [ reduce using rule 77 (variable -> expresion .) ]
  ! NUMERO          [ reduce using rule 77 (variable -> expresion .) ]
  ! FLOTANTE        [ reduce using rule 77 (variable -> expresion .) ]
  ! TRUE            [ reduce using rule 77 (variable -> expresion .) ]
  ! FALSE           [ reduce using rule 77 (variable -> expresion .) ]
  ! APARENT         [ reduce using rule 77 (variable -> expresion .) ]
  ! LLAIZQ          [ reduce using rule 77 (variable -> expresion .) ]
  ! CORIZQ          [ reduce using rule 77 (variable -> expresion .) ]
  ! NOT             [ reduce using rule 77 (variable -> expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 77 (variable -> expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 77 (variable -> expresion .) ]
  ! DEF             [ reduce using rule 77 (variable -> expresion .) ]
  ! RETURN          [ reduce using rule 77 (variable -> expresion .) ]
  ! IF              [ reduce using rule 77 (variable -> expresion .) ]
  ! PRINT           [ reduce using rule 77 (variable -> expresion .) ]
  ! LEN             [ reduce using rule 77 (variable -> expresion .) ]
  ! INPUT           [ reduce using rule 77 (variable -> expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 77 (variable -> expresion .) ]
  ! INT             [ reduce using rule 77 (variable -> expresion .) ]
  ! AND             [ reduce using rule 77 (variable -> expresion .) ]
  ! OR              [ reduce using rule 77 (variable -> expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 95

    (78) variable -> lista .
    (7) declaracion -> lista .

  ! reduce/reduce conflict for AND resolved using rule 7 (declaracion -> lista .)
  ! reduce/reduce conflict for OR resolved using rule 7 (declaracion -> lista .)
    MAS             reduce using rule 78 (variable -> lista .)
    MENOS           reduce using rule 78 (variable -> lista .)
    POR             reduce using rule 78 (variable -> lista .)
    DIVIDIR         reduce using rule 78 (variable -> lista .)
    POTENCIA        reduce using rule 78 (variable -> lista .)
    MODULO          reduce using rule 78 (variable -> lista .)
    MENOR           reduce using rule 78 (variable -> lista .)
    MAYOR           reduce using rule 78 (variable -> lista .)
    MENORIGUAL      reduce using rule 78 (variable -> lista .)
    MAYORIGUAL      reduce using rule 78 (variable -> lista .)
    DOBLEIGUAL      reduce using rule 78 (variable -> lista .)
    DIFERENTE       reduce using rule 78 (variable -> lista .)
    IN              reduce using rule 78 (variable -> lista .)
    VARIABLE        reduce using rule 78 (variable -> lista .)
    NUMERO          reduce using rule 78 (variable -> lista .)
    FLOTANTE        reduce using rule 78 (variable -> lista .)
    TRUE            reduce using rule 78 (variable -> lista .)
    FALSE           reduce using rule 78 (variable -> lista .)
    APARENT         reduce using rule 78 (variable -> lista .)
    LLAIZQ          reduce using rule 78 (variable -> lista .)
    CORIZQ          reduce using rule 78 (variable -> lista .)
    NOT             reduce using rule 78 (variable -> lista .)
    CADENACOMILLADOBLE reduce using rule 78 (variable -> lista .)
    CADENACOMILLASIMPLE reduce using rule 78 (variable -> lista .)
    DEF             reduce using rule 78 (variable -> lista .)
    RETURN          reduce using rule 78 (variable -> lista .)
    IF              reduce using rule 78 (variable -> lista .)
    PRINT           reduce using rule 78 (variable -> lista .)
    LEN             reduce using rule 78 (variable -> lista .)
    INPUT           reduce using rule 78 (variable -> lista .)
    SIMPLECOMILLA   reduce using rule 78 (variable -> lista .)
    INT             reduce using rule 78 (variable -> lista .)
    $end            reduce using rule 78 (variable -> lista .)
    CPARENT         reduce using rule 78 (variable -> lista .)
    LLADER          reduce using rule 78 (variable -> lista .)
    CORDER          reduce using rule 78 (variable -> lista .)
    DOSPUNTOS       reduce using rule 78 (variable -> lista .)
    COMA            reduce using rule 78 (variable -> lista .)
    ELSE            reduce using rule 78 (variable -> lista .)
    ELIF            reduce using rule 78 (variable -> lista .)
    AND             reduce using rule 7 (declaracion -> lista .)
    OR              reduce using rule 7 (declaracion -> lista .)

  ! AND             [ reduce using rule 78 (variable -> lista .) ]
  ! OR              [ reduce using rule 78 (variable -> lista .) ]


state 96

    (88) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno
    (91) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (36) expresion -> APARENT . expresion CPARENT
    (45) expresion -> APARENT . VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT . VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT . VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT . VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT . VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT . VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (57) expresion -> APARENT . expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT . expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT . expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT . expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT . expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT . expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (66) expresion -> APARENT . declaracion AND declaracion CPARENT
    (67) expresion -> APARENT . declaracion OR declaracion CPARENT
    (68) expresion -> APARENT . NOT declaracion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 80
    NOT             shift and go to state 82
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 160
    declaracion                    shift and go to state 81
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 97

    (89) if -> IF expresion . DOSPUNTOS codigo_interno
    (90) if -> IF expresion . DOSPUNTOS
    (92) if -> IF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> IF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    DOSPUNTOS       shift and go to state 161
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 98

    (98) expr_print -> PRINT APARENT . VARIABLE CPARENT
    (99) expr_print -> PRINT APARENT . expresion CPARENT
    (100) expr_print -> PRINT APARENT . expresion MAS VARIABLE CPARENT
    (101) expr_print -> PRINT APARENT . expresion MAS NUMERO CPARENT
    (102) expr_print -> PRINT APARENT . expresion MAS FLOTANTE CPARENT
    (103) expr_print -> PRINT APARENT . expresion COMA expr_funcion CPARENT
    (104) expr_print -> PRINT APARENT . expresion COMA NUMERO CPARENT
    (105) expr_print -> PRINT APARENT . expresion COMA FLOTANTE CPARENT
    (106) expr_print -> PRINT APARENT . expresion COMA VARIABLE CPARENT
    (107) expr_print -> PRINT APARENT . expresion COMA expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 162
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 163
    expr_funcion                   shift and go to state 5
    declaracion                    shift and go to state 44
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 99

    (112) len -> LEN APARENT . VARIABLE CPARENT

    VARIABLE        shift and go to state 164


state 100

    (113) input -> INPUT APARENT . CADENACOMILLADOBLE CPARENT
    (114) input -> INPUT APARENT . CADENACOMILLASIMPLE CPARENT

    CADENACOMILLADOBLE shift and go to state 165
    CADENACOMILLASIMPLE shift and go to state 166


state 101

    (122) join -> SIMPLECOMILLA VARIABLE . SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA VARIABLE . SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT

    SIMPLECOMILLA   shift and go to state 167


state 102

    (124) int -> INT APARENT . expresion CPARENT
    (125) int -> INT APARENT . input CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    INPUT           shift and go to state 35
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 168
    input                          shift and go to state 169
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 103

    (63) expresion -> declaracion AND declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENOS           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    POR             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DIVIDIR         reduce using rule 63 (expresion -> declaracion AND declaracion .)
    POTENCIA        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MODULO          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENOR           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MAYOR           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENORIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DOBLEIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DIFERENTE       reduce using rule 63 (expresion -> declaracion AND declaracion .)
    IN              reduce using rule 63 (expresion -> declaracion AND declaracion .)
    VARIABLE        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    NUMERO          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    FLOTANTE        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    TRUE            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    FALSE           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    APARENT         reduce using rule 63 (expresion -> declaracion AND declaracion .)
    LLAIZQ          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CORIZQ          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    NOT             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CADENACOMILLADOBLE reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CADENACOMILLASIMPLE reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DEF             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    RETURN          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    IF              reduce using rule 63 (expresion -> declaracion AND declaracion .)
    PRINT           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    LEN             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    INPUT           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    SIMPLECOMILLA   reduce using rule 63 (expresion -> declaracion AND declaracion .)
    INT             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    $end            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CPARENT         reduce using rule 63 (expresion -> declaracion AND declaracion .)
    LLADER          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CORDER          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DOSPUNTOS       reduce using rule 63 (expresion -> declaracion AND declaracion .)
    COMA            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    ELSE            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    ELIF            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 63 (expresion -> declaracion AND declaracion .) ]
  ! OR              [ reduce using rule 63 (expresion -> declaracion AND declaracion .) ]


state 104

    (64) expresion -> declaracion OR declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENOS           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    POR             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DIVIDIR         reduce using rule 64 (expresion -> declaracion OR declaracion .)
    POTENCIA        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MODULO          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENOR           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MAYOR           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENORIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DOBLEIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DIFERENTE       reduce using rule 64 (expresion -> declaracion OR declaracion .)
    IN              reduce using rule 64 (expresion -> declaracion OR declaracion .)
    VARIABLE        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    NUMERO          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    FLOTANTE        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    TRUE            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    FALSE           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    APARENT         reduce using rule 64 (expresion -> declaracion OR declaracion .)
    LLAIZQ          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CORIZQ          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    NOT             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CADENACOMILLADOBLE reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CADENACOMILLASIMPLE reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DEF             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    RETURN          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    IF              reduce using rule 64 (expresion -> declaracion OR declaracion .)
    PRINT           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    LEN             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    INPUT           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    SIMPLECOMILLA   reduce using rule 64 (expresion -> declaracion OR declaracion .)
    INT             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    $end            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CPARENT         reduce using rule 64 (expresion -> declaracion OR declaracion .)
    LLADER          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CORDER          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DOSPUNTOS       reduce using rule 64 (expresion -> declaracion OR declaracion .)
    COMA            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    ELSE            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    ELIF            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 64 (expresion -> declaracion OR declaracion .) ]
  ! OR              [ reduce using rule 64 (expresion -> declaracion OR declaracion .) ]


state 105

    (1) declaracion -> VARIABLE ASIGNACION expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! reduce/reduce conflict for POTENCIA resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MODULO resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for IN resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for NUMERO resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for TRUE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for FALSE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for APARENT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for NOT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DEF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for IF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LEN resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for INPUT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for SIMPLECOMILLA resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for INT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for AND resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for OR resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for $end resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CPARENT resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for LLADER resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for CORDER resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for COMA resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for ELSE resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
  ! reduce/reduce conflict for ELIF resolved using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    AND             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    OR              reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    $end            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    POTENCIA        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MODULO          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MENOR           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAYOR           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MENORIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAYORIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DOBLEIGUAL      reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DIFERENTE       reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    IN              reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    VARIABLE        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    NUMERO          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    FLOTANTE        reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    TRUE            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    FALSE           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    APARENT         reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LLAIZQ          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CORIZQ          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    NOT             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CADENACOMILLADOBLE reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CADENACOMILLASIMPLE reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DEF             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    RETURN          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    IF              reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    PRINT           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LEN             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    INPUT           reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    SIMPLECOMILLA   reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    INT             reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CPARENT         reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    LLADER          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    CORDER          reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    DOSPUNTOS       reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    COMA            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    ELSE            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    ELIF            reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66

  ! MAS             [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! MENOS           [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! POR             [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! DIVIDIR         [ reduce using rule 1 (declaracion -> VARIABLE ASIGNACION expresion .) ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! MAS             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOS           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POR             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIVIDIR         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! POTENCIA        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MODULO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYOR           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MENORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DIFERENTE       [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IN              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! VARIABLE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NUMERO          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FLOTANTE        [ reduce using rule 3 (declaracion -> expresion .) ]
  ! TRUE            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! FALSE           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! APARENT         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LLAIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CORIZQ          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! NOT             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DEF             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! RETURN          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IF              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! PRINT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LEN             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! INPUT           [ reduce using rule 3 (declaracion -> expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 3 (declaracion -> expresion .) ]
  ! INT             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! AND             [ reduce using rule 3 (declaracion -> expresion .) ]
  ! OR              [ reduce using rule 3 (declaracion -> expresion .) ]
  ! $end            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CPARENT         [ reduce using rule 3 (declaracion -> expresion .) ]
  ! LLADER          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! CORDER          [ reduce using rule 3 (declaracion -> expresion .) ]
  ! DOSPUNTOS       [ reduce using rule 3 (declaracion -> expresion .) ]
  ! COMA            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! ELSE            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! ELIF            [ reduce using rule 3 (declaracion -> expresion .) ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 106

    (2) declaracion -> VARIABLE ASIGNACION declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

    AND             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    OR              reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    $end            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAS             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENOS           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    POR             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DIVIDIR         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    POTENCIA        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MODULO          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENOR           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAYOR           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MENORIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    MAYORIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DOBLEIGUAL      reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DIFERENTE       reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    IN              reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    VARIABLE        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    NUMERO          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    FLOTANTE        reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    TRUE            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    FALSE           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    APARENT         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LLAIZQ          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CORIZQ          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    NOT             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CADENACOMILLADOBLE reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CADENACOMILLASIMPLE reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DEF             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    RETURN          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    IF              reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    PRINT           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LEN             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    INPUT           reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    SIMPLECOMILLA   reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    INT             reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CPARENT         reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    LLADER          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    CORDER          reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    DOSPUNTOS       reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    COMA            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    ELSE            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)
    ELIF            reduce using rule 2 (declaracion -> VARIABLE ASIGNACION declaracion .)

  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]


state 107

    (81) lista -> VARIABLE ASIGNACION CORIZQ . CORDER
    (82) lista -> VARIABLE ASIGNACION CORIZQ . NUMERO CORDER
    (83) lista -> VARIABLE ASIGNACION CORIZQ . VARIABLE CORDER
    (38) expresion -> CORIZQ . expresion CORDER
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CORDER          shift and go to state 171
    NUMERO          shift and go to state 172
    VARIABLE        shift and go to state 170
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 84
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 108

    (29) expresion -> VARIABLE MAS VARIABLE .

    MAS             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MENOS           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    POR             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    DIVIDIR         reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    POTENCIA        reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MODULO          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MENOR           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MAYOR           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MENORIGUAL      reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    MAYORIGUAL      reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    DOBLEIGUAL      reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    DIFERENTE       reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    IN              reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    VARIABLE        reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    NUMERO          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    FLOTANTE        reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    TRUE            reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    FALSE           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    APARENT         reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    LLAIZQ          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    CORIZQ          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    NOT             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    DEF             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    RETURN          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    IF              reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    PRINT           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    LEN             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    INPUT           reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    SIMPLECOMILLA   reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    INT             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    AND             reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    OR              reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    $end            reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    CPARENT         reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    LLADER          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    CORDER          reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    DOSPUNTOS       reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    COMA            reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    ELSE            reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)
    ELIF            reduce using rule 29 (expresion -> VARIABLE MAS VARIABLE .)


state 109

    (30) expresion -> VARIABLE MENOS VARIABLE .
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 4 (declaracion -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 4 (declaracion -> VARIABLE .)
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    CPARENT         reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    LLADER          reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    CORDER          reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    DOSPUNTOS       reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    COMA            reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    ELSE            reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    ELIF            reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MENOS           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! POR             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! DIVIDIR         [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! POTENCIA        [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MODULO          [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MENOR           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MAYOR           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! DOBLEIGUAL      [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! IN              [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! NUMERO          [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! TRUE            [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! FALSE           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! APARENT         [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! LLAIZQ          [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! CORIZQ          [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! NOT             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! DEF             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! RETURN          [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! IF              [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! PRINT           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! LEN             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! INPUT           [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! INT             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! AND             [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]
  ! OR              [ reduce using rule 30 (expresion -> VARIABLE MENOS VARIABLE .) ]

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 110

    (31) expresion -> VARIABLE POR VARIABLE .

    MAS             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MENOS           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    POR             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    DIVIDIR         reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    POTENCIA        reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MODULO          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MENOR           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MAYOR           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MENORIGUAL      reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    MAYORIGUAL      reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    DOBLEIGUAL      reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    DIFERENTE       reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    IN              reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    VARIABLE        reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    NUMERO          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    FLOTANTE        reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    TRUE            reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    FALSE           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    APARENT         reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    LLAIZQ          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    CORIZQ          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    NOT             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    DEF             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    RETURN          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    IF              reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    PRINT           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    LEN             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    INPUT           reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    SIMPLECOMILLA   reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    INT             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    AND             reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    OR              reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    $end            reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    CPARENT         reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    LLADER          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    CORDER          reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    DOSPUNTOS       reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    COMA            reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    ELSE            reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)
    ELIF            reduce using rule 31 (expresion -> VARIABLE POR VARIABLE .)


state 111

    (32) expresion -> VARIABLE DIVIDIR VARIABLE .

    MAS             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MENOS           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    POR             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    DIVIDIR         reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    POTENCIA        reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MODULO          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MENOR           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MAYOR           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MENORIGUAL      reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    MAYORIGUAL      reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    DOBLEIGUAL      reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    DIFERENTE       reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    IN              reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    VARIABLE        reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    NUMERO          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    FLOTANTE        reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    TRUE            reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    FALSE           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    APARENT         reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    LLAIZQ          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    CORIZQ          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    NOT             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    DEF             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    RETURN          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    IF              reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    PRINT           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    LEN             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    INPUT           reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    SIMPLECOMILLA   reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    INT             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    AND             reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    OR              reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    $end            reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    CPARENT         reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    LLADER          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    CORDER          reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    DOSPUNTOS       reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    COMA            reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    ELSE            reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)
    ELIF            reduce using rule 32 (expresion -> VARIABLE DIVIDIR VARIABLE .)


state 112

    (33) expresion -> VARIABLE POTENCIA VARIABLE .

    MAS             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MENOS           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    POR             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    DIVIDIR         reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    POTENCIA        reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MODULO          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MENOR           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MAYOR           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MENORIGUAL      reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    MAYORIGUAL      reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    DOBLEIGUAL      reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    DIFERENTE       reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    IN              reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    VARIABLE        reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    NUMERO          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    FLOTANTE        reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    TRUE            reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    FALSE           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    APARENT         reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    LLAIZQ          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    CORIZQ          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    NOT             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    DEF             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    RETURN          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    IF              reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    PRINT           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    LEN             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    INPUT           reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    SIMPLECOMILLA   reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    INT             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    AND             reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    OR              reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    $end            reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    CPARENT         reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    LLADER          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    CORDER          reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    DOSPUNTOS       reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    COMA            reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    ELSE            reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)
    ELIF            reduce using rule 33 (expresion -> VARIABLE POTENCIA VARIABLE .)


state 113

    (34) expresion -> VARIABLE MODULO VARIABLE .

    MAS             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MENOS           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    POR             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    DIVIDIR         reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    POTENCIA        reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MODULO          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MENOR           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MAYOR           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MENORIGUAL      reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    MAYORIGUAL      reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    DOBLEIGUAL      reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    DIFERENTE       reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    IN              reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    VARIABLE        reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    NUMERO          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    FLOTANTE        reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    TRUE            reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    FALSE           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    APARENT         reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    LLAIZQ          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    CORIZQ          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    NOT             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    CADENACOMILLADOBLE reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    CADENACOMILLASIMPLE reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    DEF             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    RETURN          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    IF              reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    PRINT           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    LEN             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    INPUT           reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    SIMPLECOMILLA   reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    INT             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    AND             reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    OR              reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    $end            reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    CPARENT         reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    LLADER          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    CORDER          reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    DOSPUNTOS       reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    COMA            reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    ELSE            reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)
    ELIF            reduce using rule 34 (expresion -> VARIABLE MODULO VARIABLE .)


state 114

    (39) expresion -> VARIABLE MENOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    CPARENT         reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    LLADER          reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    CORDER          reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    DOSPUNTOS       reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    COMA            reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    ELSE            reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    ELIF            reduce using rule 39 (expresion -> VARIABLE MENOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MENOS           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! POR             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MODULO          [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MENOR           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! IN              [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! VARIABLE        [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! NUMERO          [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! FLOTANTE        [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! TRUE            [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! FALSE           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! APARENT         [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! LLAIZQ          [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! CORIZQ          [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! NOT             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! DEF             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! RETURN          [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! IF              [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! PRINT           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! LEN             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! INPUT           [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! INT             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! AND             [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]
  ! OR              [ reduce using rule 39 (expresion -> VARIABLE MENOR expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 115

    (40) expresion -> VARIABLE MAYOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    CPARENT         reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    LLADER          reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    CORDER          reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    DOSPUNTOS       reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    COMA            reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    ELSE            reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    ELIF            reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! POR             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MENOR           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! IN              [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! VARIABLE        [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! NUMERO          [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! FLOTANTE        [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! TRUE            [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! FALSE           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! APARENT         [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! LLAIZQ          [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! CORIZQ          [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! NOT             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! DEF             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! RETURN          [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! IF              [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! PRINT           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! LEN             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! INPUT           [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! INT             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! AND             [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]
  ! OR              [ reduce using rule 40 (expresion -> VARIABLE MAYOR expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 116

    (41) expresion -> VARIABLE MENORIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    CPARENT         reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    LLADER          reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    CORDER          reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    COMA            reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    ELSE            reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    ELIF            reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! IN              [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! NOT             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! DEF             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! IF              [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! LEN             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! INT             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! AND             [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]
  ! OR              [ reduce using rule 41 (expresion -> VARIABLE MENORIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 117

    (42) expresion -> VARIABLE MAYORIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    CPARENT         reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    LLADER          reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    CORDER          reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    COMA            reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    ELSE            reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    ELIF            reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! IN              [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! NOT             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! DEF             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! IF              [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! LEN             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! INT             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! AND             [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]
  ! OR              [ reduce using rule 42 (expresion -> VARIABLE MAYORIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 118

    (43) expresion -> VARIABLE DOBLEIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    CPARENT         reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    LLADER          reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    CORDER          reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    DOSPUNTOS       reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    COMA            reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    ELSE            reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    ELIF            reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! POR             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! IN              [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! NOT             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! DEF             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! IF              [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! LEN             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! INT             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! AND             [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]
  ! OR              [ reduce using rule 43 (expresion -> VARIABLE DOBLEIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 119

    (44) expresion -> VARIABLE DIFERENTE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    CPARENT         reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    LLADER          reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    CORDER          reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    DOSPUNTOS       reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    COMA            reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    ELSE            reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    ELIF            reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! DIVIDIR         [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MENOR           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! IN              [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! VARIABLE        [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! NUMERO          [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! FLOTANTE        [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! TRUE            [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! FALSE           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! APARENT         [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! LLAIZQ          [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! CORIZQ          [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! NOT             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! DEF             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! RETURN          [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! IF              [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! PRINT           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! LEN             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! INPUT           [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! INT             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 44 (expresion -> VARIABLE DIFERENTE expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 120

    (45) expresion -> APARENT VARIABLE . CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT VARIABLE . CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT VARIABLE . CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT VARIABLE . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT VARIABLE . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT VARIABLE . CPARENT DIFERENTE APARENT expresion CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (73) variable -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for CPARENT resolved as shift
    CPARENT         shift and go to state 150
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    COMA            reduce using rule 73 (variable -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! CPARENT         [ reduce using rule 73 (variable -> VARIABLE .) ]

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 121

    (72) expr_funcion -> VARIABLE APARENT params . CPARENT
    (80) params -> params . COMA params

    CPARENT         shift and go to state 173
    COMA            shift and go to state 174


state 122

    (36) expresion -> APARENT expresion . CPARENT
    (57) expresion -> APARENT expresion . CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT expresion . CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT expresion . CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT expresion . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT expresion . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT expresion . CPARENT DIFERENTE APARENT expresion CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (77) variable -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for CPARENT resolved as shift
    CPARENT         shift and go to state 149
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    COMA            reduce using rule 77 (variable -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! CPARENT         [ reduce using rule 77 (variable -> expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 123

    (79) params -> variable .

    CPARENT         reduce using rule 79 (params -> variable .)
    COMA            reduce using rule 79 (params -> variable .)


state 124

    (69) expresion -> NUMERO .
    (74) variable -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for CPARENT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for COMA resolved using rule 69 (expresion -> NUMERO .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    CPARENT         reduce using rule 69 (expresion -> NUMERO .)
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    COMA            reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CPARENT         [ reduce using rule 74 (variable -> NUMERO .) ]
  ! COMA            [ reduce using rule 74 (variable -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 125

    (5) declaracion -> FLOTANTE .
    (75) variable -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    CPARENT         reduce using rule 75 (variable -> FLOTANTE .)
    COMA            reduce using rule 75 (variable -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 126

    (6) declaracion -> expr_funcion .
    (76) variable -> expr_funcion .

    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)
    CPARENT         reduce using rule 76 (variable -> expr_funcion .)
    COMA            reduce using rule 76 (variable -> expr_funcion .)


state 127

    (7) declaracion -> lista .
    (78) variable -> lista .

    AND             reduce using rule 7 (declaracion -> lista .)
    OR              reduce using rule 7 (declaracion -> lista .)
    CPARENT         reduce using rule 78 (variable -> lista .)
    COMA            reduce using rule 78 (variable -> lista .)


state 128

    (108) append -> VARIABLE PUNTO APPEND . APARENT VARIABLE CPARENT
    (109) append -> VARIABLE PUNTO APPEND . APARENT NUMERO CPARENT
    (110) append -> VARIABLE PUNTO APPEND . APARENT FLOTANTE CPARENT

    APARENT         shift and go to state 175


state 129

    (126) upper -> VARIABLE PUNTO UPPER . APARENT CPARENT

    APARENT         shift and go to state 176


state 130

    (127) lower -> VARIABLE PUNTO LOWER . APARENT CPARENT

    APARENT         shift and go to state 177


state 131

    (115) in -> VARIABLE in declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 115 (in -> VARIABLE in declaracion .)
    VARIABLE        reduce using rule 115 (in -> VARIABLE in declaracion .)
    FLOTANTE        reduce using rule 115 (in -> VARIABLE in declaracion .)
    TRUE            reduce using rule 115 (in -> VARIABLE in declaracion .)
    FALSE           reduce using rule 115 (in -> VARIABLE in declaracion .)
    MENOS           reduce using rule 115 (in -> VARIABLE in declaracion .)
    APARENT         reduce using rule 115 (in -> VARIABLE in declaracion .)
    LLAIZQ          reduce using rule 115 (in -> VARIABLE in declaracion .)
    CORIZQ          reduce using rule 115 (in -> VARIABLE in declaracion .)
    NOT             reduce using rule 115 (in -> VARIABLE in declaracion .)
    NUMERO          reduce using rule 115 (in -> VARIABLE in declaracion .)
    CADENACOMILLADOBLE reduce using rule 115 (in -> VARIABLE in declaracion .)
    CADENACOMILLASIMPLE reduce using rule 115 (in -> VARIABLE in declaracion .)
    DEF             reduce using rule 115 (in -> VARIABLE in declaracion .)
    RETURN          reduce using rule 115 (in -> VARIABLE in declaracion .)
    IF              reduce using rule 115 (in -> VARIABLE in declaracion .)
    PRINT           reduce using rule 115 (in -> VARIABLE in declaracion .)
    LEN             reduce using rule 115 (in -> VARIABLE in declaracion .)
    INPUT           reduce using rule 115 (in -> VARIABLE in declaracion .)
    IN              reduce using rule 115 (in -> VARIABLE in declaracion .)
    SIMPLECOMILLA   reduce using rule 115 (in -> VARIABLE in declaracion .)
    INT             reduce using rule 115 (in -> VARIABLE in declaracion .)
    MAS             reduce using rule 115 (in -> VARIABLE in declaracion .)
    POR             reduce using rule 115 (in -> VARIABLE in declaracion .)
    DIVIDIR         reduce using rule 115 (in -> VARIABLE in declaracion .)
    POTENCIA        reduce using rule 115 (in -> VARIABLE in declaracion .)
    MODULO          reduce using rule 115 (in -> VARIABLE in declaracion .)
    MENOR           reduce using rule 115 (in -> VARIABLE in declaracion .)
    MAYOR           reduce using rule 115 (in -> VARIABLE in declaracion .)
    MENORIGUAL      reduce using rule 115 (in -> VARIABLE in declaracion .)
    MAYORIGUAL      reduce using rule 115 (in -> VARIABLE in declaracion .)
    DOBLEIGUAL      reduce using rule 115 (in -> VARIABLE in declaracion .)
    DIFERENTE       reduce using rule 115 (in -> VARIABLE in declaracion .)
    CPARENT         reduce using rule 115 (in -> VARIABLE in declaracion .)
    LLADER          reduce using rule 115 (in -> VARIABLE in declaracion .)
    CORDER          reduce using rule 115 (in -> VARIABLE in declaracion .)
    DOSPUNTOS       reduce using rule 115 (in -> VARIABLE in declaracion .)
    COMA            reduce using rule 115 (in -> VARIABLE in declaracion .)
    ELSE            reduce using rule 115 (in -> VARIABLE in declaracion .)
    ELIF            reduce using rule 115 (in -> VARIABLE in declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 115 (in -> VARIABLE in declaracion .) ]
  ! OR              [ reduce using rule 115 (in -> VARIABLE in declaracion .) ]


state 132

    (119) is -> VARIABLE IS NUMERO .
    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for MAS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MODULO resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENOR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYOR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for IN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NUMERO resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for TRUE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for FALSE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for APARENT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for NOT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DEF resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for RETURN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for IF resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for PRINT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LEN resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for INPUT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for SIMPLECOMILLA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for INT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for AND resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for OR resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for $end resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CPARENT resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for LLADER resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for CORDER resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for COMA resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELSE resolved using rule 69 (expresion -> NUMERO .)
  ! reduce/reduce conflict for ELIF resolved using rule 69 (expresion -> NUMERO .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    $end            reduce using rule 69 (expresion -> NUMERO .)
    CPARENT         reduce using rule 69 (expresion -> NUMERO .)
    LLADER          reduce using rule 69 (expresion -> NUMERO .)
    CORDER          reduce using rule 69 (expresion -> NUMERO .)
    DOSPUNTOS       reduce using rule 69 (expresion -> NUMERO .)
    COMA            reduce using rule 69 (expresion -> NUMERO .)
    ELSE            reduce using rule 69 (expresion -> NUMERO .)
    ELIF            reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! AND             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! OR              [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! $end            [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MAS             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MENOS           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! POR             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! DIVIDIR         [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! POTENCIA        [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MODULO          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MENOR           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MAYOR           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MENORIGUAL      [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MAYORIGUAL      [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! DOBLEIGUAL      [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! DIFERENTE       [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! IN              [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! VARIABLE        [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! NUMERO          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! TRUE            [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! FALSE           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! APARENT         [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! CORIZQ          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! NOT             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! DEF             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! RETURN          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! IF              [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! PRINT           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! LEN             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! INPUT           [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! INT             [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! CPARENT         [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! LLADER          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! CORDER          [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! DOSPUNTOS       [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! COMA            [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! ELSE            [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! ELIF            [ reduce using rule 119 (is -> VARIABLE IS NUMERO .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 133

    (120) is -> VARIABLE IS FLOTANTE .
    (5) declaracion -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for MAS resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MENOS resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for POR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MODULO resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MENOR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MAYOR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for IN resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for NUMERO resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for TRUE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for FALSE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for APARENT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for NOT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for DEF resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for IF resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for PRINT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for LEN resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for INPUT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for SIMPLECOMILLA resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for INT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for AND resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for OR resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for $end resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for CPARENT resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for LLADER resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for CORDER resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for COMA resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (declaracion -> FLOTANTE .)
  ! reduce/reduce conflict for ELIF resolved using rule 5 (declaracion -> FLOTANTE .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    MAS             reduce using rule 5 (declaracion -> FLOTANTE .)
    POR             reduce using rule 5 (declaracion -> FLOTANTE .)
    DIVIDIR         reduce using rule 5 (declaracion -> FLOTANTE .)
    POTENCIA        reduce using rule 5 (declaracion -> FLOTANTE .)
    MODULO          reduce using rule 5 (declaracion -> FLOTANTE .)
    MENOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYOR           reduce using rule 5 (declaracion -> FLOTANTE .)
    MENORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DOBLEIGUAL      reduce using rule 5 (declaracion -> FLOTANTE .)
    DIFERENTE       reduce using rule 5 (declaracion -> FLOTANTE .)
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    $end            reduce using rule 5 (declaracion -> FLOTANTE .)
    CPARENT         reduce using rule 5 (declaracion -> FLOTANTE .)
    LLADER          reduce using rule 5 (declaracion -> FLOTANTE .)
    CORDER          reduce using rule 5 (declaracion -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 5 (declaracion -> FLOTANTE .)
    COMA            reduce using rule 5 (declaracion -> FLOTANTE .)
    ELSE            reduce using rule 5 (declaracion -> FLOTANTE .)
    ELIF            reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! AND             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! OR              [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! $end            [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MAS             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MENOS           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! POR             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! DIVIDIR         [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! POTENCIA        [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MODULO          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MENOR           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MAYOR           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MENORIGUAL      [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! DOBLEIGUAL      [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! DIFERENTE       [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! IN              [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! VARIABLE        [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! NUMERO          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! FLOTANTE        [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! TRUE            [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! FALSE           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! APARENT         [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! LLAIZQ          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! CORIZQ          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! NOT             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! DEF             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! RETURN          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! IF              [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! PRINT           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! LEN             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! INPUT           [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! INT             [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! CPARENT         [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! LLADER          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! CORDER          [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! DOSPUNTOS       [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! COMA            [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! ELSE            [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! ELIF            [ reduce using rule 120 (is -> VARIABLE IS FLOTANTE .) ]
  ! MENOS           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! IN              [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! VARIABLE        [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! NUMERO          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! FLOTANTE        [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! TRUE            [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! FALSE           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! APARENT         [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! LLAIZQ          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CORIZQ          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! NOT             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! DEF             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! RETURN          [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! IF              [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! PRINT           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! LEN             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! INPUT           [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! SIMPLECOMILLA   [ reduce using rule 5 (declaracion -> FLOTANTE .) ]
  ! INT             [ reduce using rule 5 (declaracion -> FLOTANTE .) ]

    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 134

    (121) is -> VARIABLE IS declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MAS             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MENOS           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    POR             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    DIVIDIR         reduce using rule 121 (is -> VARIABLE IS declaracion .)
    POTENCIA        reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MODULO          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MENOR           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MAYOR           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MENORIGUAL      reduce using rule 121 (is -> VARIABLE IS declaracion .)
    MAYORIGUAL      reduce using rule 121 (is -> VARIABLE IS declaracion .)
    DOBLEIGUAL      reduce using rule 121 (is -> VARIABLE IS declaracion .)
    DIFERENTE       reduce using rule 121 (is -> VARIABLE IS declaracion .)
    IN              reduce using rule 121 (is -> VARIABLE IS declaracion .)
    VARIABLE        reduce using rule 121 (is -> VARIABLE IS declaracion .)
    NUMERO          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    FLOTANTE        reduce using rule 121 (is -> VARIABLE IS declaracion .)
    TRUE            reduce using rule 121 (is -> VARIABLE IS declaracion .)
    FALSE           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    APARENT         reduce using rule 121 (is -> VARIABLE IS declaracion .)
    LLAIZQ          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    CORIZQ          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    NOT             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    CADENACOMILLADOBLE reduce using rule 121 (is -> VARIABLE IS declaracion .)
    CADENACOMILLASIMPLE reduce using rule 121 (is -> VARIABLE IS declaracion .)
    DEF             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    RETURN          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    IF              reduce using rule 121 (is -> VARIABLE IS declaracion .)
    PRINT           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    LEN             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    INPUT           reduce using rule 121 (is -> VARIABLE IS declaracion .)
    SIMPLECOMILLA   reduce using rule 121 (is -> VARIABLE IS declaracion .)
    INT             reduce using rule 121 (is -> VARIABLE IS declaracion .)
    CPARENT         reduce using rule 121 (is -> VARIABLE IS declaracion .)
    LLADER          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    CORDER          reduce using rule 121 (is -> VARIABLE IS declaracion .)
    DOSPUNTOS       reduce using rule 121 (is -> VARIABLE IS declaracion .)
    COMA            reduce using rule 121 (is -> VARIABLE IS declaracion .)
    ELSE            reduce using rule 121 (is -> VARIABLE IS declaracion .)
    ELIF            reduce using rule 121 (is -> VARIABLE IS declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 121 (is -> VARIABLE IS declaracion .) ]
  ! OR              [ reduce using rule 121 (is -> VARIABLE IS declaracion .) ]


state 135

    (23) expresion -> expresion MAS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 23 (expresion -> expresion MAS expresion .)
    POTENCIA        reduce using rule 23 (expresion -> expresion MAS expresion .)
    MODULO          reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 23 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 23 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 23 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 23 (expresion -> expresion MAS expresion .)
    DOBLEIGUAL      reduce using rule 23 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 23 (expresion -> expresion MAS expresion .)
    IN              reduce using rule 23 (expresion -> expresion MAS expresion .)
    VARIABLE        reduce using rule 23 (expresion -> expresion MAS expresion .)
    NUMERO          reduce using rule 23 (expresion -> expresion MAS expresion .)
    FLOTANTE        reduce using rule 23 (expresion -> expresion MAS expresion .)
    TRUE            reduce using rule 23 (expresion -> expresion MAS expresion .)
    FALSE           reduce using rule 23 (expresion -> expresion MAS expresion .)
    APARENT         reduce using rule 23 (expresion -> expresion MAS expresion .)
    LLAIZQ          reduce using rule 23 (expresion -> expresion MAS expresion .)
    CORIZQ          reduce using rule 23 (expresion -> expresion MAS expresion .)
    NOT             reduce using rule 23 (expresion -> expresion MAS expresion .)
    CADENACOMILLADOBLE reduce using rule 23 (expresion -> expresion MAS expresion .)
    CADENACOMILLASIMPLE reduce using rule 23 (expresion -> expresion MAS expresion .)
    DEF             reduce using rule 23 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 23 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 23 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 23 (expresion -> expresion MAS expresion .)
    LEN             reduce using rule 23 (expresion -> expresion MAS expresion .)
    INPUT           reduce using rule 23 (expresion -> expresion MAS expresion .)
    SIMPLECOMILLA   reduce using rule 23 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 23 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 23 (expresion -> expresion MAS expresion .)
    CPARENT         reduce using rule 23 (expresion -> expresion MAS expresion .)
    LLADER          reduce using rule 23 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 23 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 23 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 23 (expresion -> expresion MAS expresion .)
    ELSE            reduce using rule 23 (expresion -> expresion MAS expresion .)
    ELIF            reduce using rule 23 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! POR             [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! DIVIDIR         [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! AND             [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! OR              [ reduce using rule 23 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 136

    (24) expresion -> expresion MENOS expresion .
    (35) expresion -> MENOS expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for MAS resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOS resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POR resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIVIDIR resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MODULO resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENOR resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYOR resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DOBLEIGUAL resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DIFERENTE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IN resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for NUMERO resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for TRUE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for FALSE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for APARENT resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LLAIZQ resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CORIZQ resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for NOT resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CADENACOMILLADOBLE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for CADENACOMILLASIMPLE resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for DEF resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for IF resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for LEN resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for INPUT resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for SIMPLECOMILLA resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for INT resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for OR resolved using rule 24 (expresion -> expresion MENOS expresion .)
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    POTENCIA        reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MODULO          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    DOBLEIGUAL      reduce using rule 24 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 24 (expresion -> expresion MENOS expresion .)
    IN              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    VARIABLE        reduce using rule 24 (expresion -> expresion MENOS expresion .)
    NUMERO          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    FLOTANTE        reduce using rule 24 (expresion -> expresion MENOS expresion .)
    TRUE            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    FALSE           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    APARENT         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LLAIZQ          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CORIZQ          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    NOT             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CADENACOMILLADOBLE reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CADENACOMILLASIMPLE reduce using rule 24 (expresion -> expresion MENOS expresion .)
    DEF             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 24 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LEN             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    INPUT           reduce using rule 24 (expresion -> expresion MENOS expresion .)
    SIMPLECOMILLA   reduce using rule 24 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 24 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CPARENT         reduce using rule 24 (expresion -> expresion MENOS expresion .)
    LLADER          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 24 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 24 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    ELSE            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    ELIF            reduce using rule 24 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! POR             [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! AND             [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! OR              [ reduce using rule 24 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MENOS           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! POR             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! DIVIDIR         [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MODULO          [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MENOR           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MAYOR           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MENORIGUAL      [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! DIFERENTE       [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! IN              [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! VARIABLE        [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! NUMERO          [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! FLOTANTE        [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! TRUE            [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! FALSE           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! APARENT         [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! LLAIZQ          [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! CORIZQ          [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! NOT             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! DEF             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! RETURN          [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! IF              [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! PRINT           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! LEN             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! INPUT           [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! INT             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! AND             [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! OR              [ reduce using rule 35 (expresion -> MENOS expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 137

    (25) expresion -> expresion POR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 25 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 25 (expresion -> expresion POR expresion .)
    POR             reduce using rule 25 (expresion -> expresion POR expresion .)
    DIVIDIR         reduce using rule 25 (expresion -> expresion POR expresion .)
    POTENCIA        reduce using rule 25 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 25 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 25 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 25 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 25 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 25 (expresion -> expresion POR expresion .)
    DOBLEIGUAL      reduce using rule 25 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 25 (expresion -> expresion POR expresion .)
    IN              reduce using rule 25 (expresion -> expresion POR expresion .)
    VARIABLE        reduce using rule 25 (expresion -> expresion POR expresion .)
    NUMERO          reduce using rule 25 (expresion -> expresion POR expresion .)
    FLOTANTE        reduce using rule 25 (expresion -> expresion POR expresion .)
    TRUE            reduce using rule 25 (expresion -> expresion POR expresion .)
    FALSE           reduce using rule 25 (expresion -> expresion POR expresion .)
    APARENT         reduce using rule 25 (expresion -> expresion POR expresion .)
    LLAIZQ          reduce using rule 25 (expresion -> expresion POR expresion .)
    CORIZQ          reduce using rule 25 (expresion -> expresion POR expresion .)
    NOT             reduce using rule 25 (expresion -> expresion POR expresion .)
    CADENACOMILLADOBLE reduce using rule 25 (expresion -> expresion POR expresion .)
    CADENACOMILLASIMPLE reduce using rule 25 (expresion -> expresion POR expresion .)
    DEF             reduce using rule 25 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 25 (expresion -> expresion POR expresion .)
    IF              reduce using rule 25 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 25 (expresion -> expresion POR expresion .)
    LEN             reduce using rule 25 (expresion -> expresion POR expresion .)
    INPUT           reduce using rule 25 (expresion -> expresion POR expresion .)
    SIMPLECOMILLA   reduce using rule 25 (expresion -> expresion POR expresion .)
    INT             reduce using rule 25 (expresion -> expresion POR expresion .)
    $end            reduce using rule 25 (expresion -> expresion POR expresion .)
    CPARENT         reduce using rule 25 (expresion -> expresion POR expresion .)
    LLADER          reduce using rule 25 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 25 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 25 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 25 (expresion -> expresion POR expresion .)
    ELSE            reduce using rule 25 (expresion -> expresion POR expresion .)
    ELIF            reduce using rule 25 (expresion -> expresion POR expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 25 (expresion -> expresion POR expresion .) ]
  ! OR              [ reduce using rule 25 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIR         [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 138

    (26) expresion -> expresion DIVIDIR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
    MAS             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MENOS           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    POR             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    DIVIDIR         reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    POTENCIA        reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MODULO          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MENOR           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MAYOR           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MENORIGUAL      reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    MAYORIGUAL      reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    DOBLEIGUAL      reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    DIFERENTE       reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    IN              reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    VARIABLE        reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    NUMERO          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    FLOTANTE        reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    TRUE            reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    FALSE           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    APARENT         reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    LLAIZQ          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    CORIZQ          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    NOT             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    CADENACOMILLADOBLE reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    CADENACOMILLASIMPLE reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    DEF             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    RETURN          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    IF              reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    PRINT           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    LEN             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    INPUT           reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    SIMPLECOMILLA   reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    INT             reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    $end            reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    CPARENT         reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    LLADER          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    CORDER          reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    DOSPUNTOS       reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    COMA            reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    ELSE            reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    ELIF            reduce using rule 26 (expresion -> expresion DIVIDIR expresion .)
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)

  ! AND             [ reduce using rule 26 (expresion -> expresion DIVIDIR expresion .) ]
  ! OR              [ reduce using rule 26 (expresion -> expresion DIVIDIR expresion .) ]
  ! MAS             [ shift and go to state 63 ]
  ! MENOS           [ shift and go to state 64 ]
  ! POR             [ shift and go to state 65 ]
  ! DIVIDIR         [ shift and go to state 66 ]
  ! POTENCIA        [ shift and go to state 67 ]
  ! MODULO          [ shift and go to state 68 ]
  ! MENOR           [ shift and go to state 69 ]
  ! MAYOR           [ shift and go to state 70 ]
  ! MENORIGUAL      [ shift and go to state 71 ]
  ! MAYORIGUAL      [ shift and go to state 72 ]
  ! DOBLEIGUAL      [ shift and go to state 73 ]
  ! DIFERENTE       [ shift and go to state 74 ]
  ! IN              [ shift and go to state 36 ]
  ! VARIABLE        [ shift and go to state 41 ]
  ! NUMERO          [ shift and go to state 58 ]
  ! FLOTANTE        [ shift and go to state 60 ]
  ! TRUE            [ shift and go to state 20 ]
  ! FALSE           [ shift and go to state 21 ]
  ! APARENT         [ shift and go to state 23 ]
  ! LLAIZQ          [ shift and go to state 24 ]
  ! CORIZQ          [ shift and go to state 25 ]
  ! NOT             [ shift and go to state 26 ]
  ! CADENACOMILLADOBLE [ shift and go to state 28 ]
  ! CADENACOMILLASIMPLE [ shift and go to state 29 ]
  ! DEF             [ shift and go to state 30 ]
  ! RETURN          [ shift and go to state 31 ]
  ! IF              [ shift and go to state 32 ]
  ! PRINT           [ shift and go to state 33 ]
  ! LEN             [ shift and go to state 34 ]
  ! INPUT           [ shift and go to state 35 ]
  ! SIMPLECOMILLA   [ shift and go to state 37 ]
  ! INT             [ shift and go to state 38 ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 139

    (27) expresion -> expresion POTENCIA expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    CPARENT         reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    LLADER          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    DOSPUNTOS       reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    ELSE            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    ELIF            reduce using rule 27 (expresion -> expresion POTENCIA expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOS           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! POR             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! DIVIDIR         [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! POTENCIA        [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MODULO          [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MENOR           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYOR           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! DIFERENTE       [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! IN              [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! VARIABLE        [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! NUMERO          [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! FLOTANTE        [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! TRUE            [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! FALSE           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! APARENT         [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! LLAIZQ          [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! CORIZQ          [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! NOT             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! DEF             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! RETURN          [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! IF              [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! PRINT           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! LEN             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! INPUT           [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! INT             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! AND             [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]
  ! OR              [ reduce using rule 27 (expresion -> expresion POTENCIA expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 140

    (28) expresion -> expresion MODULO expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    CPARENT         reduce using rule 28 (expresion -> expresion MODULO expresion .)
    LLADER          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 28 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 28 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    ELSE            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    ELIF            reduce using rule 28 (expresion -> expresion MODULO expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MENOS           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! POR             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! DIVIDIR         [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! POTENCIA        [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MODULO          [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MENOR           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MAYOR           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MENORIGUAL      [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! DIFERENTE       [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! IN              [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! VARIABLE        [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! NUMERO          [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! FLOTANTE        [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! TRUE            [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! FALSE           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! APARENT         [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! LLAIZQ          [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! CORIZQ          [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! NOT             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! DEF             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! RETURN          [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! IF              [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! PRINT           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! LEN             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! INPUT           [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! INT             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! AND             [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]
  ! OR              [ reduce using rule 28 (expresion -> expresion MODULO expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 141

    (51) expresion -> expresion MENOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 51 (expresion -> expresion MENOR expresion .)
    CPARENT         reduce using rule 51 (expresion -> expresion MENOR expresion .)
    LLADER          reduce using rule 51 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 51 (expresion -> expresion MENOR expresion .)
    DOSPUNTOS       reduce using rule 51 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 51 (expresion -> expresion MENOR expresion .)
    ELSE            reduce using rule 51 (expresion -> expresion MENOR expresion .)
    ELIF            reduce using rule 51 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MENOR           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MAYOR           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! IN              [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! VARIABLE        [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! NUMERO          [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! FLOTANTE        [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! TRUE            [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! FALSE           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! APARENT         [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! LLAIZQ          [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! CORIZQ          [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! NOT             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! DEF             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! RETURN          [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! IF              [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! PRINT           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! LEN             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! INPUT           [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! INT             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! AND             [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]
  ! OR              [ reduce using rule 51 (expresion -> expresion MENOR expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 142

    (52) expresion -> expresion MAYOR expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    CPARENT         reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    LLADER          reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    DOSPUNTOS       reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    ELSE            reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    ELIF            reduce using rule 52 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! DIVIDIR         [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MENOR           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MAYOR           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! DIFERENTE       [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! IN              [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! VARIABLE        [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! NUMERO          [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! FLOTANTE        [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! TRUE            [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! FALSE           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! APARENT         [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! LLAIZQ          [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! CORIZQ          [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! NOT             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! DEF             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! RETURN          [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! IF              [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! PRINT           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! LEN             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! INPUT           [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! INT             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! AND             [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]
  ! OR              [ reduce using rule 52 (expresion -> expresion MAYOR expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 143

    (53) expresion -> expresion MENORIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    CPARENT         reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    LLADER          reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    ELSE            reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    ELIF            reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IN              [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! NOT             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DEF             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IF              [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! LEN             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! INT             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! AND             [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]
  ! OR              [ reduce using rule 53 (expresion -> expresion MENORIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 144

    (54) expresion -> expresion MAYORIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    CPARENT         reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    LLADER          reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    ELSE            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    ELIF            reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IN              [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! NOT             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DEF             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IF              [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! LEN             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! INT             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! AND             [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! OR              [ reduce using rule 54 (expresion -> expresion MAYORIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 145

    (55) expresion -> expresion DOBLEIGUAL expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    CPARENT         reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    LLADER          reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    CORDER          reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    DOSPUNTOS       reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    COMA            reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    ELSE            reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    ELIF            reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! POR             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DIVIDIR         [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DIFERENTE       [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! IN              [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! VARIABLE        [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! NUMERO          [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! FLOTANTE        [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! TRUE            [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! FALSE           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! APARENT         [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! LLAIZQ          [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! CORIZQ          [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! NOT             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! DEF             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! RETURN          [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! IF              [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! PRINT           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! LEN             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! INPUT           [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! INT             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! AND             [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]
  ! OR              [ reduce using rule 55 (expresion -> expresion DOBLEIGUAL expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 146

    (56) expresion -> expresion DIFERENTE expresion .
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIR resolved as shift
  ! shift/reduce conflict for POTENCIA resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 3 (declaracion -> expresion .)
  ! reduce/reduce conflict for OR resolved using rule 3 (declaracion -> expresion .)
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    CPARENT         reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    LLADER          reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    DOSPUNTOS       reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    ELSE            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    ELIF            reduce using rule 56 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MAS             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVIDIR         [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOR           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DOBLEIGUAL      [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIFERENTE       [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! IN              [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! VARIABLE        [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! NUMERO          [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! FLOTANTE        [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! TRUE            [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! FALSE           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! APARENT         [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! LLAIZQ          [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! CORIZQ          [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! NOT             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! DEF             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! RETURN          [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! IF              [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! PRINT           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! LEN             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! INPUT           [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! SIMPLECOMILLA   [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! INT             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! AND             [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]
  ! OR              [ reduce using rule 56 (expresion -> expresion DIFERENTE expresion .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 147

    (118) in -> expresion in declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 118 (in -> expresion in declaracion .)
    VARIABLE        reduce using rule 118 (in -> expresion in declaracion .)
    FLOTANTE        reduce using rule 118 (in -> expresion in declaracion .)
    TRUE            reduce using rule 118 (in -> expresion in declaracion .)
    FALSE           reduce using rule 118 (in -> expresion in declaracion .)
    MENOS           reduce using rule 118 (in -> expresion in declaracion .)
    APARENT         reduce using rule 118 (in -> expresion in declaracion .)
    LLAIZQ          reduce using rule 118 (in -> expresion in declaracion .)
    CORIZQ          reduce using rule 118 (in -> expresion in declaracion .)
    NOT             reduce using rule 118 (in -> expresion in declaracion .)
    NUMERO          reduce using rule 118 (in -> expresion in declaracion .)
    CADENACOMILLADOBLE reduce using rule 118 (in -> expresion in declaracion .)
    CADENACOMILLASIMPLE reduce using rule 118 (in -> expresion in declaracion .)
    DEF             reduce using rule 118 (in -> expresion in declaracion .)
    RETURN          reduce using rule 118 (in -> expresion in declaracion .)
    IF              reduce using rule 118 (in -> expresion in declaracion .)
    PRINT           reduce using rule 118 (in -> expresion in declaracion .)
    LEN             reduce using rule 118 (in -> expresion in declaracion .)
    INPUT           reduce using rule 118 (in -> expresion in declaracion .)
    IN              reduce using rule 118 (in -> expresion in declaracion .)
    SIMPLECOMILLA   reduce using rule 118 (in -> expresion in declaracion .)
    INT             reduce using rule 118 (in -> expresion in declaracion .)
    MAS             reduce using rule 118 (in -> expresion in declaracion .)
    POR             reduce using rule 118 (in -> expresion in declaracion .)
    DIVIDIR         reduce using rule 118 (in -> expresion in declaracion .)
    POTENCIA        reduce using rule 118 (in -> expresion in declaracion .)
    MODULO          reduce using rule 118 (in -> expresion in declaracion .)
    MENOR           reduce using rule 118 (in -> expresion in declaracion .)
    MAYOR           reduce using rule 118 (in -> expresion in declaracion .)
    MENORIGUAL      reduce using rule 118 (in -> expresion in declaracion .)
    MAYORIGUAL      reduce using rule 118 (in -> expresion in declaracion .)
    DOBLEIGUAL      reduce using rule 118 (in -> expresion in declaracion .)
    DIFERENTE       reduce using rule 118 (in -> expresion in declaracion .)
    CPARENT         reduce using rule 118 (in -> expresion in declaracion .)
    LLADER          reduce using rule 118 (in -> expresion in declaracion .)
    CORDER          reduce using rule 118 (in -> expresion in declaracion .)
    DOSPUNTOS       reduce using rule 118 (in -> expresion in declaracion .)
    COMA            reduce using rule 118 (in -> expresion in declaracion .)
    ELSE            reduce using rule 118 (in -> expresion in declaracion .)
    ELIF            reduce using rule 118 (in -> expresion in declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 118 (in -> expresion in declaracion .) ]
  ! OR              [ reduce using rule 118 (in -> expresion in declaracion .) ]


state 148

    (117) in -> FLOTANTE in declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 117 (in -> FLOTANTE in declaracion .)
    VARIABLE        reduce using rule 117 (in -> FLOTANTE in declaracion .)
    FLOTANTE        reduce using rule 117 (in -> FLOTANTE in declaracion .)
    TRUE            reduce using rule 117 (in -> FLOTANTE in declaracion .)
    FALSE           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MENOS           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    APARENT         reduce using rule 117 (in -> FLOTANTE in declaracion .)
    LLAIZQ          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    CORIZQ          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    NOT             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    NUMERO          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    CADENACOMILLADOBLE reduce using rule 117 (in -> FLOTANTE in declaracion .)
    CADENACOMILLASIMPLE reduce using rule 117 (in -> FLOTANTE in declaracion .)
    DEF             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    RETURN          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    IF              reduce using rule 117 (in -> FLOTANTE in declaracion .)
    PRINT           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    LEN             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    INPUT           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    IN              reduce using rule 117 (in -> FLOTANTE in declaracion .)
    SIMPLECOMILLA   reduce using rule 117 (in -> FLOTANTE in declaracion .)
    INT             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MAS             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    POR             reduce using rule 117 (in -> FLOTANTE in declaracion .)
    DIVIDIR         reduce using rule 117 (in -> FLOTANTE in declaracion .)
    POTENCIA        reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MODULO          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MENOR           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MAYOR           reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MENORIGUAL      reduce using rule 117 (in -> FLOTANTE in declaracion .)
    MAYORIGUAL      reduce using rule 117 (in -> FLOTANTE in declaracion .)
    DOBLEIGUAL      reduce using rule 117 (in -> FLOTANTE in declaracion .)
    DIFERENTE       reduce using rule 117 (in -> FLOTANTE in declaracion .)
    CPARENT         reduce using rule 117 (in -> FLOTANTE in declaracion .)
    LLADER          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    CORDER          reduce using rule 117 (in -> FLOTANTE in declaracion .)
    DOSPUNTOS       reduce using rule 117 (in -> FLOTANTE in declaracion .)
    COMA            reduce using rule 117 (in -> FLOTANTE in declaracion .)
    ELSE            reduce using rule 117 (in -> FLOTANTE in declaracion .)
    ELIF            reduce using rule 117 (in -> FLOTANTE in declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 117 (in -> FLOTANTE in declaracion .) ]
  ! OR              [ reduce using rule 117 (in -> FLOTANTE in declaracion .) ]


state 149

    (36) expresion -> APARENT expresion CPARENT .
    (57) expresion -> APARENT expresion CPARENT . MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT expresion CPARENT . MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT expresion CPARENT . MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT expresion CPARENT . MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT expresion CPARENT . DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT expresion CPARENT . DIFERENTE APARENT expresion CPARENT

  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    MAS             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MENOS           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    POR             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MODULO          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    IN              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    NUMERO          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    TRUE            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    FALSE           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    APARENT         reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    NOT             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    DEF             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    RETURN          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    IF              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    PRINT           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    LEN             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    INPUT           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    INT             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    AND             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    OR              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    $end            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CPARENT         reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    LLADER          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CORDER          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    COMA            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    ELSE            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    ELIF            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MENOR           shift and go to state 178
    MAYOR           shift and go to state 179
    MENORIGUAL      shift and go to state 180
    MAYORIGUAL      shift and go to state 181
    DOBLEIGUAL      shift and go to state 182
    DIFERENTE       shift and go to state 183

  ! MENOR           [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYOR           [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MENORIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYORIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! DOBLEIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! DIFERENTE       [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]


state 150

    (45) expresion -> APARENT VARIABLE CPARENT . MENOR APARENT expresion CPARENT
    (46) expresion -> APARENT VARIABLE CPARENT . MAYOR APARENT expresion CPARENT
    (47) expresion -> APARENT VARIABLE CPARENT . MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> APARENT VARIABLE CPARENT . MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> APARENT VARIABLE CPARENT . DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> APARENT VARIABLE CPARENT . DIFERENTE APARENT expresion CPARENT

    MENOR           shift and go to state 184
    MAYOR           shift and go to state 185
    MENORIGUAL      shift and go to state 186
    MAYORIGUAL      shift and go to state 187
    DOBLEIGUAL      shift and go to state 188
    DIFERENTE       shift and go to state 189


state 151

    (66) expresion -> APARENT declaracion AND . declaracion CPARENT
    (63) expresion -> declaracion AND . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 190
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 152

    (67) expresion -> APARENT declaracion OR . declaracion CPARENT
    (64) expresion -> declaracion OR . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    declaracion                    shift and go to state 191
    expresion                      shift and go to state 3
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 153

    (68) expresion -> APARENT NOT declaracion . CPARENT
    (65) expresion -> NOT declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 192
    MAS             reduce using rule 65 (expresion -> NOT declaracion .)
    MENOS           reduce using rule 65 (expresion -> NOT declaracion .)
    POR             reduce using rule 65 (expresion -> NOT declaracion .)
    DIVIDIR         reduce using rule 65 (expresion -> NOT declaracion .)
    POTENCIA        reduce using rule 65 (expresion -> NOT declaracion .)
    MODULO          reduce using rule 65 (expresion -> NOT declaracion .)
    MENOR           reduce using rule 65 (expresion -> NOT declaracion .)
    MAYOR           reduce using rule 65 (expresion -> NOT declaracion .)
    MENORIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    DOBLEIGUAL      reduce using rule 65 (expresion -> NOT declaracion .)
    DIFERENTE       reduce using rule 65 (expresion -> NOT declaracion .)
    IN              reduce using rule 65 (expresion -> NOT declaracion .)
    VARIABLE        reduce using rule 65 (expresion -> NOT declaracion .)
    NUMERO          reduce using rule 65 (expresion -> NOT declaracion .)
    FLOTANTE        reduce using rule 65 (expresion -> NOT declaracion .)
    TRUE            reduce using rule 65 (expresion -> NOT declaracion .)
    FALSE           reduce using rule 65 (expresion -> NOT declaracion .)
    APARENT         reduce using rule 65 (expresion -> NOT declaracion .)
    LLAIZQ          reduce using rule 65 (expresion -> NOT declaracion .)
    CORIZQ          reduce using rule 65 (expresion -> NOT declaracion .)
    NOT             reduce using rule 65 (expresion -> NOT declaracion .)
    CADENACOMILLADOBLE reduce using rule 65 (expresion -> NOT declaracion .)
    CADENACOMILLASIMPLE reduce using rule 65 (expresion -> NOT declaracion .)
    DEF             reduce using rule 65 (expresion -> NOT declaracion .)
    RETURN          reduce using rule 65 (expresion -> NOT declaracion .)
    IF              reduce using rule 65 (expresion -> NOT declaracion .)
    PRINT           reduce using rule 65 (expresion -> NOT declaracion .)
    LEN             reduce using rule 65 (expresion -> NOT declaracion .)
    INPUT           reduce using rule 65 (expresion -> NOT declaracion .)
    SIMPLECOMILLA   reduce using rule 65 (expresion -> NOT declaracion .)
    INT             reduce using rule 65 (expresion -> NOT declaracion .)
    COMA            reduce using rule 65 (expresion -> NOT declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! CPARENT         [ reduce using rule 65 (expresion -> NOT declaracion .) ]
  ! AND             [ reduce using rule 65 (expresion -> NOT declaracion .) ]
  ! OR              [ reduce using rule 65 (expresion -> NOT declaracion .) ]


state 154

    (37) expresion -> LLAIZQ expresion LLADER .

    MAS             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MENOS           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    POR             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    DIVIDIR         reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    POTENCIA        reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MODULO          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MENOR           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MAYOR           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MENORIGUAL      reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    MAYORIGUAL      reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    DOBLEIGUAL      reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    DIFERENTE       reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    IN              reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    VARIABLE        reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    NUMERO          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    FLOTANTE        reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    TRUE            reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    FALSE           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    APARENT         reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    LLAIZQ          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    CORIZQ          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    NOT             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    CADENACOMILLADOBLE reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    CADENACOMILLASIMPLE reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    DEF             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    RETURN          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    IF              reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    PRINT           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    LEN             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    INPUT           reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    SIMPLECOMILLA   reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    INT             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    AND             reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    OR              reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    $end            reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    CPARENT         reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    LLADER          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    CORDER          reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    DOSPUNTOS       reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    COMA            reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    ELSE            reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)
    ELIF            reduce using rule 37 (expresion -> LLAIZQ expresion LLADER .)


state 155

    (38) expresion -> CORIZQ expresion CORDER .

    MAS             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    POR             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    DIVIDIR         reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    DOBLEIGUAL      reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    IN              reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    VARIABLE        reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    NUMERO          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    FLOTANTE        reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    TRUE            reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    FALSE           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    APARENT         reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    LLAIZQ          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    NOT             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    CADENACOMILLADOBLE reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    CADENACOMILLASIMPLE reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    DEF             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    RETURN          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    IF              reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    PRINT           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    LEN             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    INPUT           reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    SIMPLECOMILLA   reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    INT             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    AND             reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    OR              reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    $end            reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    CPARENT         reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    LLADER          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    DOSPUNTOS       reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    ELSE            reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)
    ELIF            reduce using rule 38 (expresion -> CORIZQ expresion CORDER .)


state 156

    (116) in -> NUMERO in declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    $end            reduce using rule 116 (in -> NUMERO in declaracion .)
    VARIABLE        reduce using rule 116 (in -> NUMERO in declaracion .)
    FLOTANTE        reduce using rule 116 (in -> NUMERO in declaracion .)
    TRUE            reduce using rule 116 (in -> NUMERO in declaracion .)
    FALSE           reduce using rule 116 (in -> NUMERO in declaracion .)
    MENOS           reduce using rule 116 (in -> NUMERO in declaracion .)
    APARENT         reduce using rule 116 (in -> NUMERO in declaracion .)
    LLAIZQ          reduce using rule 116 (in -> NUMERO in declaracion .)
    CORIZQ          reduce using rule 116 (in -> NUMERO in declaracion .)
    NOT             reduce using rule 116 (in -> NUMERO in declaracion .)
    NUMERO          reduce using rule 116 (in -> NUMERO in declaracion .)
    CADENACOMILLADOBLE reduce using rule 116 (in -> NUMERO in declaracion .)
    CADENACOMILLASIMPLE reduce using rule 116 (in -> NUMERO in declaracion .)
    DEF             reduce using rule 116 (in -> NUMERO in declaracion .)
    RETURN          reduce using rule 116 (in -> NUMERO in declaracion .)
    IF              reduce using rule 116 (in -> NUMERO in declaracion .)
    PRINT           reduce using rule 116 (in -> NUMERO in declaracion .)
    LEN             reduce using rule 116 (in -> NUMERO in declaracion .)
    INPUT           reduce using rule 116 (in -> NUMERO in declaracion .)
    IN              reduce using rule 116 (in -> NUMERO in declaracion .)
    SIMPLECOMILLA   reduce using rule 116 (in -> NUMERO in declaracion .)
    INT             reduce using rule 116 (in -> NUMERO in declaracion .)
    MAS             reduce using rule 116 (in -> NUMERO in declaracion .)
    POR             reduce using rule 116 (in -> NUMERO in declaracion .)
    DIVIDIR         reduce using rule 116 (in -> NUMERO in declaracion .)
    POTENCIA        reduce using rule 116 (in -> NUMERO in declaracion .)
    MODULO          reduce using rule 116 (in -> NUMERO in declaracion .)
    MENOR           reduce using rule 116 (in -> NUMERO in declaracion .)
    MAYOR           reduce using rule 116 (in -> NUMERO in declaracion .)
    MENORIGUAL      reduce using rule 116 (in -> NUMERO in declaracion .)
    MAYORIGUAL      reduce using rule 116 (in -> NUMERO in declaracion .)
    DOBLEIGUAL      reduce using rule 116 (in -> NUMERO in declaracion .)
    DIFERENTE       reduce using rule 116 (in -> NUMERO in declaracion .)
    CPARENT         reduce using rule 116 (in -> NUMERO in declaracion .)
    LLADER          reduce using rule 116 (in -> NUMERO in declaracion .)
    CORDER          reduce using rule 116 (in -> NUMERO in declaracion .)
    DOSPUNTOS       reduce using rule 116 (in -> NUMERO in declaracion .)
    COMA            reduce using rule 116 (in -> NUMERO in declaracion .)
    ELSE            reduce using rule 116 (in -> NUMERO in declaracion .)
    ELIF            reduce using rule 116 (in -> NUMERO in declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 116 (in -> NUMERO in declaracion .) ]
  ! OR              [ reduce using rule 116 (in -> NUMERO in declaracion .) ]


state 157

    (84) expr_def_funcion -> DEF expr_funcion DOSPUNTOS .

    AND             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    OR              reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    $end            reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAS             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENOS           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    POR             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DIVIDIR         reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    POTENCIA        reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MODULO          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENOR           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAYOR           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MENORIGUAL      reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    MAYORIGUAL      reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DOBLEIGUAL      reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DIFERENTE       reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    IN              reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    VARIABLE        reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    NUMERO          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    FLOTANTE        reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    TRUE            reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    FALSE           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    APARENT         reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LLAIZQ          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CORIZQ          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    NOT             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CADENACOMILLADOBLE reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CADENACOMILLASIMPLE reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DEF             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    RETURN          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    IF              reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    PRINT           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LEN             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    INPUT           reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    SIMPLECOMILLA   reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    INT             reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CPARENT         reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    LLADER          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    CORDER          reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    DOSPUNTOS       reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    COMA            reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    ELSE            reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)
    ELIF            reduce using rule 84 (expr_def_funcion -> DEF expr_funcion DOSPUNTOS .)


state 158

    (72) expr_funcion -> VARIABLE APARENT . params CPARENT
    (79) params -> . variable
    (80) params -> . params COMA params
    (73) variable -> . VARIABLE
    (74) variable -> . NUMERO
    (75) variable -> . FLOTANTE
    (76) variable -> . expr_funcion
    (77) variable -> . expresion
    (78) variable -> . lista
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 90
    NUMERO          shift and go to state 91
    FLOTANTE        shift and go to state 92
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    params                         shift and go to state 121
    variable                       shift and go to state 123
    expr_funcion                   shift and go to state 93
    expresion                      shift and go to state 94
    lista                          shift and go to state 95
    declaracion                    shift and go to state 44
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 159

    (81) lista -> VARIABLE ASIGNACION . CORIZQ CORDER
    (82) lista -> VARIABLE ASIGNACION . CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE ASIGNACION . CORIZQ VARIABLE CORDER
    (1) declaracion -> VARIABLE ASIGNACION . expresion
    (2) declaracion -> VARIABLE ASIGNACION . declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CORIZQ          shift and go to state 107
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 105
    declaracion                    shift and go to state 106
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 160

    (88) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno
    (91) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (36) expresion -> APARENT expresion . CPARENT
    (57) expresion -> APARENT expresion . CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT expresion . CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT expresion . CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT expresion . CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT expresion . CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT expresion . CPARENT DIFERENTE APARENT expresion CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 193
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 161

    (89) if -> IF expresion DOSPUNTOS . codigo_interno
    (90) if -> IF expresion DOSPUNTOS .
    (92) if -> IF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> IF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    OR              reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    $end            reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MAS             reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    POR             reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    DIVIDIR         reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    POTENCIA        reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MODULO          reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MENOR           reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MAYOR           reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MENORIGUAL      reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    MAYORIGUAL      reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    DOBLEIGUAL      reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    DIFERENTE       reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    CPARENT         reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    LLADER          reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    CORDER          reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    DOSPUNTOS       reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    COMA            reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    ELSE            reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    ELIF            reduce using rule 90 (if -> IF expresion DOSPUNTOS .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! IN              [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! VARIABLE        [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! NUMERO          [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! FLOTANTE        [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! TRUE            [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! FALSE           [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! APARENT         [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! LLAIZQ          [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! CORIZQ          [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! NOT             [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! DEF             [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! RETURN          [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! IF              [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! PRINT           [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! LEN             [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! INPUT           [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! SIMPLECOMILLA   [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]
  ! INT             [ reduce using rule 90 (if -> IF expresion DOSPUNTOS .) ]

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 194
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 162

    (98) expr_print -> PRINT APARENT VARIABLE . CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 196
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 163

    (99) expr_print -> PRINT APARENT expresion . CPARENT
    (100) expr_print -> PRINT APARENT expresion . MAS VARIABLE CPARENT
    (101) expr_print -> PRINT APARENT expresion . MAS NUMERO CPARENT
    (102) expr_print -> PRINT APARENT expresion . MAS FLOTANTE CPARENT
    (103) expr_print -> PRINT APARENT expresion . COMA expr_funcion CPARENT
    (104) expr_print -> PRINT APARENT expresion . COMA NUMERO CPARENT
    (105) expr_print -> PRINT APARENT expresion . COMA FLOTANTE CPARENT
    (106) expr_print -> PRINT APARENT expresion . COMA VARIABLE CPARENT
    (107) expr_print -> PRINT APARENT expresion . COMA expresion CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 197
    MAS             shift and go to state 198
    COMA            shift and go to state 199
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 164

    (112) len -> LEN APARENT VARIABLE . CPARENT

    CPARENT         shift and go to state 200


state 165

    (113) input -> INPUT APARENT CADENACOMILLADOBLE . CPARENT

    CPARENT         shift and go to state 201


state 166

    (114) input -> INPUT APARENT CADENACOMILLASIMPLE . CPARENT

    CPARENT         shift and go to state 202


state 167

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA . PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA . PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT

    PUNTO           shift and go to state 203


state 168

    (124) int -> INT APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 204
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 169

    (125) int -> INT APARENT input . CPARENT
    (14) declaracion -> input .

    CPARENT         shift and go to state 205
    AND             reduce using rule 14 (declaracion -> input .)
    OR              reduce using rule 14 (declaracion -> input .)


state 170

    (83) lista -> VARIABLE ASIGNACION CORIZQ VARIABLE . CORDER
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CORDER          shift and go to state 206
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 171

    (81) lista -> VARIABLE ASIGNACION CORIZQ CORDER .

    AND             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    OR              reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    $end            reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAS             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENOS           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    POR             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DIVIDIR         reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    POTENCIA        reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MODULO          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENOR           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAYOR           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MENORIGUAL      reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    MAYORIGUAL      reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DOBLEIGUAL      reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DIFERENTE       reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    IN              reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    VARIABLE        reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    NUMERO          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    FLOTANTE        reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    TRUE            reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    FALSE           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    APARENT         reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LLAIZQ          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CORIZQ          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    NOT             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CADENACOMILLADOBLE reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CADENACOMILLASIMPLE reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DEF             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    RETURN          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    IF              reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    PRINT           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LEN             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    INPUT           reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    SIMPLECOMILLA   reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    INT             reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CPARENT         reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    LLADER          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    CORDER          reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    DOSPUNTOS       reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    COMA            reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    ELSE            reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)
    ELIF            reduce using rule 81 (lista -> VARIABLE ASIGNACION CORIZQ CORDER .)


state 172

    (82) lista -> VARIABLE ASIGNACION CORIZQ NUMERO . CORDER
    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for CORDER resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    CORDER          shift and go to state 207
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! CORDER          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expresion                      shift and go to state 43
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 173

    (72) expr_funcion -> VARIABLE APARENT params CPARENT .

    AND             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    OR              reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    $end            reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAS             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENOS           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    POR             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DIVIDIR         reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    POTENCIA        reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MODULO          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENOR           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAYOR           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MENORIGUAL      reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    MAYORIGUAL      reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DOBLEIGUAL      reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DIFERENTE       reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    IN              reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    VARIABLE        reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    NUMERO          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    FLOTANTE        reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    TRUE            reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    FALSE           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    APARENT         reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LLAIZQ          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CORIZQ          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    NOT             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CADENACOMILLADOBLE reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DEF             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    RETURN          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    IF              reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    PRINT           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LEN             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    INPUT           reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    SIMPLECOMILLA   reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    INT             reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CPARENT         reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    LLADER          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    CORDER          reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    DOSPUNTOS       reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    COMA            reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    ELSE            reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)
    ELIF            reduce using rule 72 (expr_funcion -> VARIABLE APARENT params CPARENT .)


state 174

    (80) params -> params COMA . params
    (79) params -> . variable
    (80) params -> . params COMA params
    (73) variable -> . VARIABLE
    (74) variable -> . NUMERO
    (75) variable -> . FLOTANTE
    (76) variable -> . expr_funcion
    (77) variable -> . expresion
    (78) variable -> . lista
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 90
    NUMERO          shift and go to state 91
    FLOTANTE        shift and go to state 92
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    params                         shift and go to state 208
    variable                       shift and go to state 123
    expr_funcion                   shift and go to state 93
    expresion                      shift and go to state 94
    lista                          shift and go to state 95
    declaracion                    shift and go to state 44
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 175

    (108) append -> VARIABLE PUNTO APPEND APARENT . VARIABLE CPARENT
    (109) append -> VARIABLE PUNTO APPEND APARENT . NUMERO CPARENT
    (110) append -> VARIABLE PUNTO APPEND APARENT . FLOTANTE CPARENT

    VARIABLE        shift and go to state 209
    NUMERO          shift and go to state 210
    FLOTANTE        shift and go to state 211


state 176

    (126) upper -> VARIABLE PUNTO UPPER APARENT . CPARENT

    CPARENT         shift and go to state 212


state 177

    (127) lower -> VARIABLE PUNTO LOWER APARENT . CPARENT

    CPARENT         shift and go to state 213


state 178

    (57) expresion -> APARENT expresion CPARENT MENOR . APARENT expresion CPARENT

    APARENT         shift and go to state 214


state 179

    (58) expresion -> APARENT expresion CPARENT MAYOR . APARENT expresion CPARENT

    APARENT         shift and go to state 215


state 180

    (59) expresion -> APARENT expresion CPARENT MENORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 216


state 181

    (60) expresion -> APARENT expresion CPARENT MAYORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 217


state 182

    (61) expresion -> APARENT expresion CPARENT DOBLEIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 218


state 183

    (62) expresion -> APARENT expresion CPARENT DIFERENTE . APARENT expresion CPARENT

    APARENT         shift and go to state 219


state 184

    (45) expresion -> APARENT VARIABLE CPARENT MENOR . APARENT expresion CPARENT

    APARENT         shift and go to state 220


state 185

    (46) expresion -> APARENT VARIABLE CPARENT MAYOR . APARENT expresion CPARENT

    APARENT         shift and go to state 221


state 186

    (47) expresion -> APARENT VARIABLE CPARENT MENORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 222


state 187

    (48) expresion -> APARENT VARIABLE CPARENT MAYORIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 223


state 188

    (49) expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL . APARENT expresion CPARENT

    APARENT         shift and go to state 224


state 189

    (50) expresion -> APARENT VARIABLE CPARENT DIFERENTE . APARENT expresion CPARENT

    APARENT         shift and go to state 225


state 190

    (66) expresion -> APARENT declaracion AND declaracion . CPARENT
    (63) expresion -> declaracion AND declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 226
    MAS             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENOS           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    POR             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DIVIDIR         reduce using rule 63 (expresion -> declaracion AND declaracion .)
    POTENCIA        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MODULO          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENOR           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MAYOR           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MENORIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DOBLEIGUAL      reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DIFERENTE       reduce using rule 63 (expresion -> declaracion AND declaracion .)
    IN              reduce using rule 63 (expresion -> declaracion AND declaracion .)
    VARIABLE        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    NUMERO          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    FLOTANTE        reduce using rule 63 (expresion -> declaracion AND declaracion .)
    TRUE            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    FALSE           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    APARENT         reduce using rule 63 (expresion -> declaracion AND declaracion .)
    LLAIZQ          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CORIZQ          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    NOT             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CADENACOMILLADOBLE reduce using rule 63 (expresion -> declaracion AND declaracion .)
    CADENACOMILLASIMPLE reduce using rule 63 (expresion -> declaracion AND declaracion .)
    DEF             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    RETURN          reduce using rule 63 (expresion -> declaracion AND declaracion .)
    IF              reduce using rule 63 (expresion -> declaracion AND declaracion .)
    PRINT           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    LEN             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    INPUT           reduce using rule 63 (expresion -> declaracion AND declaracion .)
    SIMPLECOMILLA   reduce using rule 63 (expresion -> declaracion AND declaracion .)
    INT             reduce using rule 63 (expresion -> declaracion AND declaracion .)
    COMA            reduce using rule 63 (expresion -> declaracion AND declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! CPARENT         [ reduce using rule 63 (expresion -> declaracion AND declaracion .) ]
  ! AND             [ reduce using rule 63 (expresion -> declaracion AND declaracion .) ]
  ! OR              [ reduce using rule 63 (expresion -> declaracion AND declaracion .) ]


state 191

    (67) expresion -> APARENT declaracion OR declaracion . CPARENT
    (64) expresion -> declaracion OR declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    CPARENT         shift and go to state 227
    MAS             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENOS           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    POR             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DIVIDIR         reduce using rule 64 (expresion -> declaracion OR declaracion .)
    POTENCIA        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MODULO          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENOR           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MAYOR           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MENORIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DOBLEIGUAL      reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DIFERENTE       reduce using rule 64 (expresion -> declaracion OR declaracion .)
    IN              reduce using rule 64 (expresion -> declaracion OR declaracion .)
    VARIABLE        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    NUMERO          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    FLOTANTE        reduce using rule 64 (expresion -> declaracion OR declaracion .)
    TRUE            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    FALSE           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    APARENT         reduce using rule 64 (expresion -> declaracion OR declaracion .)
    LLAIZQ          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CORIZQ          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    NOT             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CADENACOMILLADOBLE reduce using rule 64 (expresion -> declaracion OR declaracion .)
    CADENACOMILLASIMPLE reduce using rule 64 (expresion -> declaracion OR declaracion .)
    DEF             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    RETURN          reduce using rule 64 (expresion -> declaracion OR declaracion .)
    IF              reduce using rule 64 (expresion -> declaracion OR declaracion .)
    PRINT           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    LEN             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    INPUT           reduce using rule 64 (expresion -> declaracion OR declaracion .)
    SIMPLECOMILLA   reduce using rule 64 (expresion -> declaracion OR declaracion .)
    INT             reduce using rule 64 (expresion -> declaracion OR declaracion .)
    COMA            reduce using rule 64 (expresion -> declaracion OR declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! CPARENT         [ reduce using rule 64 (expresion -> declaracion OR declaracion .) ]
  ! AND             [ reduce using rule 64 (expresion -> declaracion OR declaracion .) ]
  ! OR              [ reduce using rule 64 (expresion -> declaracion OR declaracion .) ]


state 192

    (68) expresion -> APARENT NOT declaracion CPARENT .

    MAS             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MENOS           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    POR             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    DIVIDIR         reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    POTENCIA        reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MODULO          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MENOR           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MAYOR           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MENORIGUAL      reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    DIFERENTE       reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    IN              reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    VARIABLE        reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    NUMERO          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    FLOTANTE        reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    TRUE            reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    FALSE           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    APARENT         reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    LLAIZQ          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    CORIZQ          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    NOT             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    DEF             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    RETURN          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    IF              reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    PRINT           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    LEN             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    INPUT           reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    SIMPLECOMILLA   reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    INT             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    AND             reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    OR              reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    $end            reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    CPARENT         reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    LLADER          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    CORDER          reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    COMA            reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    ELSE            reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)
    ELIF            reduce using rule 68 (expresion -> APARENT NOT declaracion CPARENT .)


state 193

    (88) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno
    (91) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (36) expresion -> APARENT expresion CPARENT .
    (57) expresion -> APARENT expresion CPARENT . MENOR APARENT expresion CPARENT
    (58) expresion -> APARENT expresion CPARENT . MAYOR APARENT expresion CPARENT
    (59) expresion -> APARENT expresion CPARENT . MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> APARENT expresion CPARENT . MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> APARENT expresion CPARENT . DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> APARENT expresion CPARENT . DIFERENTE APARENT expresion CPARENT

  ! shift/reduce conflict for DOSPUNTOS resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DOBLEIGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    DOSPUNTOS       shift and go to state 228
    MAS             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MENOS           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    POR             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MODULO          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    IN              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    NUMERO          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    TRUE            reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    FALSE           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    APARENT         reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    NOT             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    DEF             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    RETURN          reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    IF              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    PRINT           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    LEN             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    INPUT           reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    INT             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    AND             reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    OR              reduce using rule 36 (expresion -> APARENT expresion CPARENT .)
    MENOR           shift and go to state 178
    MAYOR           shift and go to state 179
    MENORIGUAL      shift and go to state 180
    MAYORIGUAL      shift and go to state 181
    DOBLEIGUAL      shift and go to state 182
    DIFERENTE       shift and go to state 183

  ! DOSPUNTOS       [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MENOR           [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYOR           [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MENORIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! MAYORIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! DOBLEIGUAL      [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]
  ! DIFERENTE       [ reduce using rule 36 (expresion -> APARENT expresion CPARENT .) ]


state 194

    (89) if -> IF expresion DOSPUNTOS codigo_interno .
    (92) if -> IF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (94) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> IF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    OR              reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    $end            reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    POR             reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .)
    ELSE            shift and go to state 229
    ELIF            shift and go to state 230
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 89 (if -> IF expresion DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 195

    (86) codigo_interno -> declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 86 (codigo_interno -> declaracion .)
    MENOS           reduce using rule 86 (codigo_interno -> declaracion .)
    POR             reduce using rule 86 (codigo_interno -> declaracion .)
    DIVIDIR         reduce using rule 86 (codigo_interno -> declaracion .)
    POTENCIA        reduce using rule 86 (codigo_interno -> declaracion .)
    MODULO          reduce using rule 86 (codigo_interno -> declaracion .)
    MENOR           reduce using rule 86 (codigo_interno -> declaracion .)
    MAYOR           reduce using rule 86 (codigo_interno -> declaracion .)
    MENORIGUAL      reduce using rule 86 (codigo_interno -> declaracion .)
    MAYORIGUAL      reduce using rule 86 (codigo_interno -> declaracion .)
    DOBLEIGUAL      reduce using rule 86 (codigo_interno -> declaracion .)
    DIFERENTE       reduce using rule 86 (codigo_interno -> declaracion .)
    IN              reduce using rule 86 (codigo_interno -> declaracion .)
    VARIABLE        reduce using rule 86 (codigo_interno -> declaracion .)
    NUMERO          reduce using rule 86 (codigo_interno -> declaracion .)
    FLOTANTE        reduce using rule 86 (codigo_interno -> declaracion .)
    TRUE            reduce using rule 86 (codigo_interno -> declaracion .)
    FALSE           reduce using rule 86 (codigo_interno -> declaracion .)
    APARENT         reduce using rule 86 (codigo_interno -> declaracion .)
    LLAIZQ          reduce using rule 86 (codigo_interno -> declaracion .)
    CORIZQ          reduce using rule 86 (codigo_interno -> declaracion .)
    NOT             reduce using rule 86 (codigo_interno -> declaracion .)
    CADENACOMILLADOBLE reduce using rule 86 (codigo_interno -> declaracion .)
    CADENACOMILLASIMPLE reduce using rule 86 (codigo_interno -> declaracion .)
    DEF             reduce using rule 86 (codigo_interno -> declaracion .)
    RETURN          reduce using rule 86 (codigo_interno -> declaracion .)
    IF              reduce using rule 86 (codigo_interno -> declaracion .)
    PRINT           reduce using rule 86 (codigo_interno -> declaracion .)
    LEN             reduce using rule 86 (codigo_interno -> declaracion .)
    INPUT           reduce using rule 86 (codigo_interno -> declaracion .)
    SIMPLECOMILLA   reduce using rule 86 (codigo_interno -> declaracion .)
    INT             reduce using rule 86 (codigo_interno -> declaracion .)
    $end            reduce using rule 86 (codigo_interno -> declaracion .)
    CPARENT         reduce using rule 86 (codigo_interno -> declaracion .)
    LLADER          reduce using rule 86 (codigo_interno -> declaracion .)
    CORDER          reduce using rule 86 (codigo_interno -> declaracion .)
    DOSPUNTOS       reduce using rule 86 (codigo_interno -> declaracion .)
    COMA            reduce using rule 86 (codigo_interno -> declaracion .)
    ELSE            reduce using rule 86 (codigo_interno -> declaracion .)
    ELIF            reduce using rule 86 (codigo_interno -> declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 86 (codigo_interno -> declaracion .) ]
  ! OR              [ reduce using rule 86 (codigo_interno -> declaracion .) ]


state 196

    (98) expr_print -> PRINT APARENT VARIABLE CPARENT .

    AND             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    OR              reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    $end            reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    POR             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    IN              reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    IF              reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    INT             reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 98 (expr_print -> PRINT APARENT VARIABLE CPARENT .)


state 197

    (99) expr_print -> PRINT APARENT expresion CPARENT .

    AND             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    OR              reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    $end            reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAS             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENOS           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    POR             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MODULO          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENOR           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAYOR           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    IN              reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    NUMERO          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    TRUE            reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    FALSE           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    APARENT         reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    NOT             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    DEF             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    RETURN          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    IF              reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    PRINT           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    LEN             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    INPUT           reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    INT             reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    CPARENT         reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    LLADER          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    CORDER          reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    COMA            reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    ELSE            reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)
    ELIF            reduce using rule 99 (expr_print -> PRINT APARENT expresion CPARENT .)


state 198

    (100) expr_print -> PRINT APARENT expresion MAS . VARIABLE CPARENT
    (101) expr_print -> PRINT APARENT expresion MAS . NUMERO CPARENT
    (102) expr_print -> PRINT APARENT expresion MAS . FLOTANTE CPARENT
    (23) expresion -> expresion MAS . expresion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 232
    NUMERO          shift and go to state 233
    FLOTANTE        shift and go to state 234
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 135
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 199

    (103) expr_print -> PRINT APARENT expresion COMA . expr_funcion CPARENT
    (104) expr_print -> PRINT APARENT expresion COMA . NUMERO CPARENT
    (105) expr_print -> PRINT APARENT expresion COMA . FLOTANTE CPARENT
    (106) expr_print -> PRINT APARENT expresion COMA . VARIABLE CPARENT
    (107) expr_print -> PRINT APARENT expresion COMA . expresion CPARENT
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    NUMERO          shift and go to state 237
    FLOTANTE        shift and go to state 238
    VARIABLE        shift and go to state 239
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 235
    expr_funcion                   shift and go to state 236
    declaracion                    shift and go to state 44
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 200

    (112) len -> LEN APARENT VARIABLE CPARENT .

    AND             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    OR              reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    $end            reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    POR             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    IN              reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    IF              reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    INT             reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 112 (len -> LEN APARENT VARIABLE CPARENT .)


state 201

    (113) input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .

    AND             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    OR              reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    $end            reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAS             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENOS           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    POR             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DIVIDIR         reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    POTENCIA        reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MODULO          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENOR           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAYOR           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MENORIGUAL      reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    MAYORIGUAL      reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DOBLEIGUAL      reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DIFERENTE       reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    IN              reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    VARIABLE        reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    NUMERO          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    FLOTANTE        reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    TRUE            reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    FALSE           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    APARENT         reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LLAIZQ          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CORIZQ          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    NOT             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DEF             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    RETURN          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    IF              reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    PRINT           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LEN             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    INPUT           reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    INT             reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CPARENT         reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    LLADER          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    CORDER          reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    DOSPUNTOS       reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    COMA            reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    ELSE            reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)
    ELIF            reduce using rule 113 (input -> INPUT APARENT CADENACOMILLADOBLE CPARENT .)


state 202

    (114) input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .

    AND             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    OR              reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    $end            reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAS             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOS           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    POR             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DIVIDIR         reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    POTENCIA        reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MODULO          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOR           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYOR           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MENORIGUAL      reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYORIGUAL      reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DOBLEIGUAL      reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DIFERENTE       reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    IN              reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    VARIABLE        reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    NUMERO          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    FLOTANTE        reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    TRUE            reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    FALSE           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    APARENT         reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LLAIZQ          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CORIZQ          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    NOT             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DEF             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    RETURN          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    IF              reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    PRINT           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LEN             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    INPUT           reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    INT             reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CPARENT         reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    LLADER          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    CORDER          reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    DOSPUNTOS       reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    COMA            reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    ELSE            reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)
    ELIF            reduce using rule 114 (input -> INPUT APARENT CADENACOMILLASIMPLE CPARENT .)


state 203

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO . JOIN APARENT VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO . JOIN APARENT CADENACOMILLASIMPLE CPARENT

    JOIN            shift and go to state 240


state 204

    (124) int -> INT APARENT expresion CPARENT .

    AND             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    OR              reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    $end            reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MAS             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MENOS           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    POR             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MODULO          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MENOR           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MAYOR           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    IN              reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    NUMERO          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    TRUE            reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    FALSE           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    APARENT         reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    NOT             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    DEF             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    RETURN          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    IF              reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    PRINT           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    LEN             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    INPUT           reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    INT             reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    CPARENT         reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    LLADER          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    CORDER          reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    COMA            reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    ELSE            reduce using rule 124 (int -> INT APARENT expresion CPARENT .)
    ELIF            reduce using rule 124 (int -> INT APARENT expresion CPARENT .)


state 205

    (125) int -> INT APARENT input CPARENT .

    AND             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    OR              reduce using rule 125 (int -> INT APARENT input CPARENT .)
    $end            reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MAS             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MENOS           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    POR             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    DIVIDIR         reduce using rule 125 (int -> INT APARENT input CPARENT .)
    POTENCIA        reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MODULO          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MENOR           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MAYOR           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MENORIGUAL      reduce using rule 125 (int -> INT APARENT input CPARENT .)
    MAYORIGUAL      reduce using rule 125 (int -> INT APARENT input CPARENT .)
    DOBLEIGUAL      reduce using rule 125 (int -> INT APARENT input CPARENT .)
    DIFERENTE       reduce using rule 125 (int -> INT APARENT input CPARENT .)
    IN              reduce using rule 125 (int -> INT APARENT input CPARENT .)
    VARIABLE        reduce using rule 125 (int -> INT APARENT input CPARENT .)
    NUMERO          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    FLOTANTE        reduce using rule 125 (int -> INT APARENT input CPARENT .)
    TRUE            reduce using rule 125 (int -> INT APARENT input CPARENT .)
    FALSE           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    APARENT         reduce using rule 125 (int -> INT APARENT input CPARENT .)
    LLAIZQ          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    CORIZQ          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    NOT             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    CADENACOMILLADOBLE reduce using rule 125 (int -> INT APARENT input CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 125 (int -> INT APARENT input CPARENT .)
    DEF             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    RETURN          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    IF              reduce using rule 125 (int -> INT APARENT input CPARENT .)
    PRINT           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    LEN             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    INPUT           reduce using rule 125 (int -> INT APARENT input CPARENT .)
    SIMPLECOMILLA   reduce using rule 125 (int -> INT APARENT input CPARENT .)
    INT             reduce using rule 125 (int -> INT APARENT input CPARENT .)
    CPARENT         reduce using rule 125 (int -> INT APARENT input CPARENT .)
    LLADER          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    CORDER          reduce using rule 125 (int -> INT APARENT input CPARENT .)
    DOSPUNTOS       reduce using rule 125 (int -> INT APARENT input CPARENT .)
    COMA            reduce using rule 125 (int -> INT APARENT input CPARENT .)
    ELSE            reduce using rule 125 (int -> INT APARENT input CPARENT .)
    ELIF            reduce using rule 125 (int -> INT APARENT input CPARENT .)


state 206

    (83) lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .

    AND             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    OR              reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    $end            reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAS             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENOS           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    POR             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DIVIDIR         reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    POTENCIA        reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MODULO          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENOR           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAYOR           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MENORIGUAL      reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    MAYORIGUAL      reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DOBLEIGUAL      reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DIFERENTE       reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    IN              reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    VARIABLE        reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    NUMERO          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    FLOTANTE        reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    TRUE            reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    FALSE           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    APARENT         reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LLAIZQ          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CORIZQ          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    NOT             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CADENACOMILLADOBLE reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CADENACOMILLASIMPLE reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DEF             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    RETURN          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    IF              reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    PRINT           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LEN             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    INPUT           reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    SIMPLECOMILLA   reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    INT             reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CPARENT         reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    LLADER          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    CORDER          reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    DOSPUNTOS       reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    COMA            reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    ELSE            reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)
    ELIF            reduce using rule 83 (lista -> VARIABLE ASIGNACION CORIZQ VARIABLE CORDER .)


state 207

    (82) lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .

    AND             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    OR              reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    $end            reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAS             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENOS           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    POR             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DIVIDIR         reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    POTENCIA        reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MODULO          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENOR           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAYOR           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MENORIGUAL      reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    MAYORIGUAL      reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DOBLEIGUAL      reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DIFERENTE       reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    IN              reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    VARIABLE        reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    NUMERO          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    FLOTANTE        reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    TRUE            reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    FALSE           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    APARENT         reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LLAIZQ          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CORIZQ          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    NOT             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CADENACOMILLADOBLE reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CADENACOMILLASIMPLE reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DEF             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    RETURN          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    IF              reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    PRINT           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LEN             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    INPUT           reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    SIMPLECOMILLA   reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    INT             reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CPARENT         reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    LLADER          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    CORDER          reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    DOSPUNTOS       reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    COMA            reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    ELSE            reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)
    ELIF            reduce using rule 82 (lista -> VARIABLE ASIGNACION CORIZQ NUMERO CORDER .)


state 208

    (80) params -> params COMA params .
    (80) params -> params . COMA params

  ! shift/reduce conflict for COMA resolved as shift
    CPARENT         reduce using rule 80 (params -> params COMA params .)
    COMA            shift and go to state 174

  ! COMA            [ reduce using rule 80 (params -> params COMA params .) ]


state 209

    (108) append -> VARIABLE PUNTO APPEND APARENT VARIABLE . CPARENT

    CPARENT         shift and go to state 241


state 210

    (109) append -> VARIABLE PUNTO APPEND APARENT NUMERO . CPARENT

    CPARENT         shift and go to state 242


state 211

    (110) append -> VARIABLE PUNTO APPEND APARENT FLOTANTE . CPARENT

    CPARENT         shift and go to state 243


state 212

    (126) upper -> VARIABLE PUNTO UPPER APARENT CPARENT .

    AND             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    OR              reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    $end            reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MAS             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MENOS           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    POR             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    DIVIDIR         reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    POTENCIA        reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MODULO          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MENOR           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MAYOR           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MENORIGUAL      reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    MAYORIGUAL      reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    DOBLEIGUAL      reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    DIFERENTE       reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    IN              reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    VARIABLE        reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    NUMERO          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    FLOTANTE        reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    TRUE            reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    FALSE           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    APARENT         reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    LLAIZQ          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    CORIZQ          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    NOT             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    CADENACOMILLADOBLE reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    DEF             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    RETURN          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    IF              reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    PRINT           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    LEN             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    INPUT           reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    SIMPLECOMILLA   reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    INT             reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    CPARENT         reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    LLADER          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    CORDER          reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    DOSPUNTOS       reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    COMA            reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    ELSE            reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)
    ELIF            reduce using rule 126 (upper -> VARIABLE PUNTO UPPER APARENT CPARENT .)


state 213

    (127) lower -> VARIABLE PUNTO LOWER APARENT CPARENT .

    AND             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    OR              reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    $end            reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MAS             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MENOS           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    POR             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    DIVIDIR         reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    POTENCIA        reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MODULO          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MENOR           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MAYOR           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MENORIGUAL      reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    MAYORIGUAL      reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    DOBLEIGUAL      reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    DIFERENTE       reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    IN              reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    VARIABLE        reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    NUMERO          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    FLOTANTE        reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    TRUE            reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    FALSE           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    APARENT         reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    LLAIZQ          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    CORIZQ          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    NOT             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    CADENACOMILLADOBLE reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    DEF             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    RETURN          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    IF              reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    PRINT           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    LEN             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    INPUT           reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    SIMPLECOMILLA   reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    INT             reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    CPARENT         reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    LLADER          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    CORDER          reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    DOSPUNTOS       reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    COMA            reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    ELSE            reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)
    ELIF            reduce using rule 127 (lower -> VARIABLE PUNTO LOWER APARENT CPARENT .)


state 214

    (57) expresion -> APARENT expresion CPARENT MENOR APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 244
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 215

    (58) expresion -> APARENT expresion CPARENT MAYOR APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 245
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 216

    (59) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 246
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 217

    (60) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 247
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 218

    (61) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 248
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 219

    (62) expresion -> APARENT expresion CPARENT DIFERENTE APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 249
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 220

    (45) expresion -> APARENT VARIABLE CPARENT MENOR APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 250
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 221

    (46) expresion -> APARENT VARIABLE CPARENT MAYOR APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 251
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 222

    (47) expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 252
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 223

    (48) expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 253
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 224

    (49) expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 254
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 225

    (50) expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT . expresion CPARENT
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 255
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 226

    (66) expresion -> APARENT declaracion AND declaracion CPARENT .

    MAS             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENOS           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    POR             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DIVIDIR         reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    POTENCIA        reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MODULO          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENOR           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MAYOR           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MENORIGUAL      reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DIFERENTE       reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    IN              reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    VARIABLE        reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    NUMERO          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    FLOTANTE        reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    TRUE            reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    FALSE           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    APARENT         reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LLAIZQ          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CORIZQ          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    NOT             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DEF             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    RETURN          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    IF              reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    PRINT           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LEN             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    INPUT           reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    SIMPLECOMILLA   reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    INT             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    AND             reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    OR              reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    $end            reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CPARENT         reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    LLADER          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    CORDER          reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    COMA            reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    ELSE            reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)
    ELIF            reduce using rule 66 (expresion -> APARENT declaracion AND declaracion CPARENT .)


state 227

    (67) expresion -> APARENT declaracion OR declaracion CPARENT .

    MAS             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENOS           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    POR             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DIVIDIR         reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    POTENCIA        reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MODULO          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENOR           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MAYOR           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MENORIGUAL      reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    MAYORIGUAL      reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DOBLEIGUAL      reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DIFERENTE       reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    IN              reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    VARIABLE        reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    NUMERO          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    FLOTANTE        reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    TRUE            reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    FALSE           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    APARENT         reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LLAIZQ          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CORIZQ          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    NOT             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DEF             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    RETURN          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    IF              reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    PRINT           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LEN             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    INPUT           reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    SIMPLECOMILLA   reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    INT             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    AND             reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    OR              reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    $end            reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CPARENT         reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    LLADER          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    CORDER          reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    DOSPUNTOS       reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    COMA            reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    ELSE            reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)
    ELIF            reduce using rule 67 (expresion -> APARENT declaracion OR declaracion CPARENT .)


state 228

    (88) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno
    (91) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 256
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 229

    (92) if -> IF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 257


state 230

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno
    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 258
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 231

    (87) codigo_interno -> codigo_interno declaracion .
    (63) expresion -> declaracion . AND declaracion
    (64) expresion -> declaracion . OR declaracion

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    MAS             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MENOS           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    POR             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    DIVIDIR         reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    POTENCIA        reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MODULO          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MENOR           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MAYOR           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MENORIGUAL      reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    MAYORIGUAL      reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    DOBLEIGUAL      reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    DIFERENTE       reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    IN              reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    VARIABLE        reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    NUMERO          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    FLOTANTE        reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    TRUE            reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    FALSE           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    APARENT         reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    LLAIZQ          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    CORIZQ          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    NOT             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    CADENACOMILLADOBLE reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    CADENACOMILLASIMPLE reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    DEF             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    RETURN          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    IF              reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    PRINT           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    LEN             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    INPUT           reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    SIMPLECOMILLA   reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    INT             reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    $end            reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    CPARENT         reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    LLADER          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    CORDER          reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    DOSPUNTOS       reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    COMA            reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    ELSE            reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    ELIF            reduce using rule 87 (codigo_interno -> codigo_interno declaracion .)
    AND             shift and go to state 39
    OR              shift and go to state 40

  ! AND             [ reduce using rule 87 (codigo_interno -> codigo_interno declaracion .) ]
  ! OR              [ reduce using rule 87 (codigo_interno -> codigo_interno declaracion .) ]


state 232

    (100) expr_print -> PRINT APARENT expresion MAS VARIABLE . CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 259
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    APARENT         shift and go to state 57
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 233

    (101) expr_print -> PRINT APARENT expresion MAS NUMERO . CPARENT
    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    CPARENT         shift and go to state 260
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    COMA            reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CPARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 234

    (102) expr_print -> PRINT APARENT expresion MAS FLOTANTE . CPARENT
    (5) declaracion -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 261
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 235

    (107) expr_print -> PRINT APARENT expresion COMA expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 262
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 236

    (103) expr_print -> PRINT APARENT expresion COMA expr_funcion . CPARENT
    (6) declaracion -> expr_funcion .

    CPARENT         shift and go to state 263
    AND             reduce using rule 6 (declaracion -> expr_funcion .)
    OR              reduce using rule 6 (declaracion -> expr_funcion .)


state 237

    (104) expr_print -> PRINT APARENT expresion COMA NUMERO . CPARENT
    (69) expresion -> NUMERO .
    (116) in -> NUMERO . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for CPARENT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    CPARENT         shift and go to state 264
    MAS             reduce using rule 69 (expresion -> NUMERO .)
    POR             reduce using rule 69 (expresion -> NUMERO .)
    DIVIDIR         reduce using rule 69 (expresion -> NUMERO .)
    POTENCIA        reduce using rule 69 (expresion -> NUMERO .)
    MODULO          reduce using rule 69 (expresion -> NUMERO .)
    MENOR           reduce using rule 69 (expresion -> NUMERO .)
    MAYOR           reduce using rule 69 (expresion -> NUMERO .)
    MENORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    MAYORIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DOBLEIGUAL      reduce using rule 69 (expresion -> NUMERO .)
    DIFERENTE       reduce using rule 69 (expresion -> NUMERO .)
    AND             reduce using rule 69 (expresion -> NUMERO .)
    OR              reduce using rule 69 (expresion -> NUMERO .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! CPARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IN              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! VARIABLE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NUMERO          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FLOTANTE        [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! TRUE            [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! FALSE           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! APARENT         [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LLAIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CORIZQ          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! NOT             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! DEF             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! RETURN          [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! IF              [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! PRINT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! LEN             [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INPUT           [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! SIMPLECOMILLA   [ reduce using rule 69 (expresion -> NUMERO .) ]
  ! INT             [ reduce using rule 69 (expresion -> NUMERO .) ]

    expresion                      shift and go to state 43
    in                             shift and go to state 86
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 238

    (105) expr_print -> PRINT APARENT expresion COMA FLOTANTE . CPARENT
    (5) declaracion -> FLOTANTE .
    (117) in -> FLOTANTE . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 265
    AND             reduce using rule 5 (declaracion -> FLOTANTE .)
    OR              reduce using rule 5 (declaracion -> FLOTANTE .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 76
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 239

    (106) expr_print -> PRINT APARENT expresion COMA VARIABLE . CPARENT
    (72) expr_funcion -> VARIABLE . APARENT params CPARENT
    (29) expresion -> VARIABLE . MAS VARIABLE
    (30) expresion -> VARIABLE . MENOS VARIABLE
    (31) expresion -> VARIABLE . POR VARIABLE
    (32) expresion -> VARIABLE . DIVIDIR VARIABLE
    (33) expresion -> VARIABLE . POTENCIA VARIABLE
    (34) expresion -> VARIABLE . MODULO VARIABLE
    (39) expresion -> VARIABLE . MENOR expresion
    (40) expresion -> VARIABLE . MAYOR expresion
    (41) expresion -> VARIABLE . MENORIGUAL expresion
    (42) expresion -> VARIABLE . MAYORIGUAL expresion
    (43) expresion -> VARIABLE . DOBLEIGUAL expresion
    (44) expresion -> VARIABLE . DIFERENTE expresion
    (1) declaracion -> VARIABLE . ASIGNACION expresion
    (2) declaracion -> VARIABLE . ASIGNACION declaracion
    (4) declaracion -> VARIABLE .
    (81) lista -> VARIABLE . ASIGNACION CORIZQ CORDER
    (82) lista -> VARIABLE . ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> VARIABLE . ASIGNACION CORIZQ VARIABLE CORDER
    (108) append -> VARIABLE . PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> VARIABLE . PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> VARIABLE . PUNTO APPEND APARENT FLOTANTE CPARENT
    (115) in -> VARIABLE . in declaracion
    (119) is -> VARIABLE . IS NUMERO
    (120) is -> VARIABLE . IS FLOTANTE
    (121) is -> VARIABLE . IS declaracion
    (126) upper -> VARIABLE . PUNTO UPPER APARENT CPARENT
    (127) lower -> VARIABLE . PUNTO LOWER APARENT CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 266
    APARENT         shift and go to state 57
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    POR             shift and go to state 47
    DIVIDIR         shift and go to state 48
    POTENCIA        shift and go to state 49
    MODULO          shift and go to state 50
    MENOR           shift and go to state 51
    MAYOR           shift and go to state 52
    MENORIGUAL      shift and go to state 53
    MAYORIGUAL      shift and go to state 54
    DOBLEIGUAL      shift and go to state 55
    DIFERENTE       shift and go to state 56
    ASIGNACION      shift and go to state 42
    AND             reduce using rule 4 (declaracion -> VARIABLE .)
    OR              reduce using rule 4 (declaracion -> VARIABLE .)
    PUNTO           shift and go to state 59
    IS              shift and go to state 62
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    declaracion                    shift and go to state 44
    in                             shift and go to state 61
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 240

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN . APARENT VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN . APARENT CADENACOMILLASIMPLE CPARENT

    APARENT         shift and go to state 267


state 241

    (108) append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .

    AND             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    OR              reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    $end            reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    POR             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    IN              reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    IF              reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    INT             reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 108 (append -> VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT .)


state 242

    (109) append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .

    AND             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    OR              reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    $end            reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAS             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENOS           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    POR             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DIVIDIR         reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    POTENCIA        reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MODULO          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENOR           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAYOR           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DIFERENTE       reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    IN              reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    VARIABLE        reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    NUMERO          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    FLOTANTE        reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    TRUE            reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    FALSE           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    APARENT         reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LLAIZQ          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CORIZQ          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    NOT             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DEF             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    RETURN          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    IF              reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    PRINT           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LEN             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    INPUT           reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    SIMPLECOMILLA   reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    INT             reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CPARENT         reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    LLADER          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    CORDER          reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    COMA            reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    ELSE            reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)
    ELIF            reduce using rule 109 (append -> VARIABLE PUNTO APPEND APARENT NUMERO CPARENT .)


state 243

    (110) append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .

    AND             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    OR              reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    $end            reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAS             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENOS           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    POR             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MODULO          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENOR           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAYOR           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    IN              reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    NUMERO          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    TRUE            reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    FALSE           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    APARENT         reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    NOT             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DEF             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    RETURN          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    IF              reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    PRINT           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LEN             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    INPUT           reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    SIMPLECOMILLA   reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    INT             reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CPARENT         reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    LLADER          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    CORDER          reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    COMA            reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    ELSE            reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)
    ELIF            reduce using rule 110 (append -> VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT .)


state 244

    (57) expresion -> APARENT expresion CPARENT MENOR APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 268
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 245

    (58) expresion -> APARENT expresion CPARENT MAYOR APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 269
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 246

    (59) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 270
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 247

    (60) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 271
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 248

    (61) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 272
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 249

    (62) expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 273
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 250

    (45) expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 274
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 251

    (46) expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 275
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 252

    (47) expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 276
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 253

    (48) expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 277
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 254

    (49) expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 278
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 255

    (50) expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion . CPARENT
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 279
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 256

    (88) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .
    (91) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    OR              reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    $end            reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POR             reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    ELSE            shift and go to state 280
    ELIF            shift and go to state 281
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 88 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 257

    (92) if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 282
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 258

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno
    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    DOSPUNTOS       shift and go to state 283
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 259

    (100) expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .

    AND             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    OR              reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    $end            reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAS             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENOS           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    POR             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    POTENCIA        reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MODULO          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENOR           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAYOR           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    IN              reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    VARIABLE        reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    NUMERO          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    TRUE            reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    FALSE           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    APARENT         reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CORIZQ          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    NOT             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DEF             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    RETURN          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    IF              reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    PRINT           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LEN             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    INPUT           reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    INT             reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CPARENT         reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    LLADER          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    CORDER          reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    COMA            reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    ELSE            reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)
    ELIF            reduce using rule 100 (expr_print -> PRINT APARENT expresion MAS VARIABLE CPARENT .)


state 260

    (101) expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .

    AND             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    OR              reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    $end            reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAS             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENOS           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    POR             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DIVIDIR         reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    POTENCIA        reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MODULO          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENOR           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAYOR           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DIFERENTE       reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    IN              reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    VARIABLE        reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    NUMERO          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    FLOTANTE        reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    TRUE            reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    FALSE           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    APARENT         reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LLAIZQ          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CORIZQ          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    NOT             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DEF             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    RETURN          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    IF              reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    PRINT           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LEN             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    INPUT           reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    SIMPLECOMILLA   reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    INT             reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CPARENT         reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    LLADER          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    CORDER          reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    COMA            reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    ELSE            reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)
    ELIF            reduce using rule 101 (expr_print -> PRINT APARENT expresion MAS NUMERO CPARENT .)


state 261

    (102) expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .

    AND             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    OR              reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    $end            reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAS             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENOS           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    POR             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MODULO          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENOR           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAYOR           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    IN              reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    NUMERO          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    TRUE            reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    FALSE           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    APARENT         reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    NOT             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DEF             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    RETURN          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    IF              reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    PRINT           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LEN             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    INPUT           reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    SIMPLECOMILLA   reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    INT             reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CPARENT         reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    LLADER          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    CORDER          reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    COMA            reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    ELSE            reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)
    ELIF            reduce using rule 102 (expr_print -> PRINT APARENT expresion MAS FLOTANTE CPARENT .)


state 262

    (107) expr_print -> PRINT APARENT expresion COMA expresion CPARENT .

    AND             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    OR              reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    $end            reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAS             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENOS           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    POR             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DIVIDIR         reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    POTENCIA        reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MODULO          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENOR           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAYOR           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MENORIGUAL      reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    MAYORIGUAL      reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DIFERENTE       reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    IN              reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    VARIABLE        reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    NUMERO          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    FLOTANTE        reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    TRUE            reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    FALSE           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    APARENT         reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LLAIZQ          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CORIZQ          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    NOT             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DEF             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    RETURN          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    IF              reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    PRINT           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LEN             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    INPUT           reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    INT             reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CPARENT         reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    LLADER          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    CORDER          reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    DOSPUNTOS       reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    COMA            reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    ELSE            reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)
    ELIF            reduce using rule 107 (expr_print -> PRINT APARENT expresion COMA expresion CPARENT .)


state 263

    (103) expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .

    AND             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    OR              reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    $end            reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAS             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENOS           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    POR             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DIVIDIR         reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    POTENCIA        reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MODULO          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENOR           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAYOR           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MENORIGUAL      reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    MAYORIGUAL      reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DOBLEIGUAL      reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DIFERENTE       reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    IN              reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    VARIABLE        reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    NUMERO          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    FLOTANTE        reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    TRUE            reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    FALSE           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    APARENT         reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LLAIZQ          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CORIZQ          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    NOT             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DEF             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    RETURN          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    IF              reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    PRINT           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LEN             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    INPUT           reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    SIMPLECOMILLA   reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    INT             reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CPARENT         reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    LLADER          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    CORDER          reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    DOSPUNTOS       reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    COMA            reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    ELSE            reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)
    ELIF            reduce using rule 103 (expr_print -> PRINT APARENT expresion COMA expr_funcion CPARENT .)


state 264

    (104) expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .

    AND             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    OR              reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    $end            reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAS             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENOS           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    POR             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DIVIDIR         reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    POTENCIA        reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MODULO          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENOR           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAYOR           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MENORIGUAL      reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    MAYORIGUAL      reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DOBLEIGUAL      reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DIFERENTE       reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    IN              reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    VARIABLE        reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    NUMERO          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    FLOTANTE        reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    TRUE            reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    FALSE           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    APARENT         reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LLAIZQ          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CORIZQ          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    NOT             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CADENACOMILLADOBLE reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DEF             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    RETURN          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    IF              reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    PRINT           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LEN             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    INPUT           reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    SIMPLECOMILLA   reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    INT             reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CPARENT         reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    LLADER          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    CORDER          reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    DOSPUNTOS       reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    COMA            reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    ELSE            reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)
    ELIF            reduce using rule 104 (expr_print -> PRINT APARENT expresion COMA NUMERO CPARENT .)


state 265

    (105) expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .

    AND             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    OR              reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    $end            reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAS             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENOS           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    POR             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DIVIDIR         reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    POTENCIA        reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MODULO          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENOR           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAYOR           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MENORIGUAL      reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    MAYORIGUAL      reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DOBLEIGUAL      reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DIFERENTE       reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    IN              reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    VARIABLE        reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    NUMERO          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    FLOTANTE        reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    TRUE            reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    FALSE           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    APARENT         reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LLAIZQ          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CORIZQ          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    NOT             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DEF             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    RETURN          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    IF              reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    PRINT           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LEN             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    INPUT           reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    SIMPLECOMILLA   reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    INT             reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CPARENT         reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    LLADER          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    CORDER          reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    DOSPUNTOS       reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    COMA            reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    ELSE            reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)
    ELIF            reduce using rule 105 (expr_print -> PRINT APARENT expresion COMA FLOTANTE CPARENT .)


state 266

    (106) expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .

    AND             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    OR              reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    $end            reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAS             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENOS           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    POR             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    POTENCIA        reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MODULO          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENOR           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAYOR           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    IN              reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    VARIABLE        reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    NUMERO          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    TRUE            reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    FALSE           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    APARENT         reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CORIZQ          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    NOT             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DEF             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    RETURN          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    IF              reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    PRINT           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LEN             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    INPUT           reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    INT             reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CPARENT         reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    LLADER          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    CORDER          reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    COMA            reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    ELSE            reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)
    ELIF            reduce using rule 106 (expr_print -> PRINT APARENT expresion COMA VARIABLE CPARENT .)


state 267

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT . VARIABLE CPARENT
    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT . CADENACOMILLASIMPLE CPARENT

    VARIABLE        shift and go to state 284
    CADENACOMILLASIMPLE shift and go to state 285


state 268

    (57) expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .

    MAS             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    POR             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    IN              reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    NOT             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DEF             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    IF              reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LEN             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    INT             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    AND             reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    OR              reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    $end            reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    COMA            reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 57 (expresion -> APARENT expresion CPARENT MENOR APARENT expresion CPARENT .)


state 269

    (58) expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .

    MAS             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    POR             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    IN              reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    NOT             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DEF             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    IF              reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LEN             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    INT             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    AND             reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    OR              reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    $end            reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    COMA            reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 58 (expresion -> APARENT expresion CPARENT MAYOR APARENT expresion CPARENT .)


state 270

    (59) expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 59 (expresion -> APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT .)


state 271

    (60) expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 60 (expresion -> APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT .)


state 272

    (61) expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 61 (expresion -> APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT .)


state 273

    (62) expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .

    MAS             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOS           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    POR             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MODULO          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOR           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYOR           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    IN              reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    NUMERO          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    TRUE            reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    FALSE           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    APARENT         reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    NOT             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DEF             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    RETURN          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    IF              reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    PRINT           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LEN             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    INPUT           reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    INT             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    AND             reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    OR              reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    $end            reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CPARENT         reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLADER          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORDER          reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    COMA            reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELSE            reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELIF            reduce using rule 62 (expresion -> APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT .)


state 274

    (45) expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .

    MAS             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    POR             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    IN              reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    NOT             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    DEF             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    IF              reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    LEN             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    INT             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    AND             reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    OR              reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    $end            reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    COMA            reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 45 (expresion -> APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT .)


state 275

    (46) expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .

    MAS             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MENOS           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    POR             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MODULO          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MENOR           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MAYOR           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    IN              reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    NUMERO          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    TRUE            reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    FALSE           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    APARENT         reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    NOT             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    DEF             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    RETURN          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    IF              reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    PRINT           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    LEN             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    INPUT           reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    INT             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    AND             reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    OR              reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    $end            reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    CPARENT         reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    LLADER          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    CORDER          reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    COMA            reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    ELSE            reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)
    ELIF            reduce using rule 46 (expresion -> APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT .)


state 276

    (47) expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 47 (expresion -> APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT .)


state 277

    (48) expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 48 (expresion -> APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT .)


state 278

    (49) expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .

    MAS             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOS           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POR             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MODULO          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENOR           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYOR           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    IN              reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NUMERO          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    TRUE            reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    FALSE           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    APARENT         reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    NOT             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DEF             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    RETURN          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    IF              reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    PRINT           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LEN             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    INPUT           reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    INT             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    AND             reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    OR              reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    $end            reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CPARENT         reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    LLADER          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    CORDER          reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    COMA            reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELSE            reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)
    ELIF            reduce using rule 49 (expresion -> APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT .)


state 279

    (50) expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .

    MAS             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOS           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    POR             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIVIDIR         reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    POTENCIA        reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MODULO          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENOR           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYOR           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MENORIGUAL      reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    MAYORIGUAL      reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOBLEIGUAL      reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    DIFERENTE       reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    IN              reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    VARIABLE        reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    NUMERO          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    FLOTANTE        reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    TRUE            reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    FALSE           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    APARENT         reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLAIZQ          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORIZQ          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    NOT             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLADOBLE reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    DEF             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    RETURN          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    IF              reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    PRINT           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    LEN             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    INPUT           reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    SIMPLECOMILLA   reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    INT             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    AND             reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    OR              reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    $end            reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    CPARENT         reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    LLADER          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    CORDER          reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    DOSPUNTOS       reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    COMA            reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELSE            reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)
    ELIF            reduce using rule 50 (expresion -> APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT .)


state 280

    (91) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 286


state 281

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF . APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF . APARENT expresion CPARENT DOSPUNTOS codigo_interno

    APARENT         shift and go to state 287


state 282

    (92) if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 92 (if -> IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 283

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno
    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 288
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 284

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE . CPARENT

    CPARENT         shift and go to state 289


state 285

    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE . CPARENT

    CPARENT         shift and go to state 290


state 286

    (91) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 291
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 287

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT . expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT . expresion CPARENT DOSPUNTOS codigo_interno
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 292
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 288

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (96) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .
    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    ELSE            shift and go to state 294
    AND             reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    OR              reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    $end            reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    POR             reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .)
    ELIF            shift and go to state 293
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]
  ! ELIF            [ reduce using rule 96 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 289

    (122) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .

    AND             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    OR              reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    $end            reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MAS             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MENOS           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    POR             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    DIVIDIR         reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    POTENCIA        reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MODULO          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MENOR           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MAYOR           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MENORIGUAL      reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    MAYORIGUAL      reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    DOBLEIGUAL      reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    DIFERENTE       reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    IN              reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    VARIABLE        reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    NUMERO          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    FLOTANTE        reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    TRUE            reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    FALSE           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    APARENT         reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    LLAIZQ          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    CORIZQ          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    NOT             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    DEF             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    RETURN          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    IF              reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    PRINT           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    LEN             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    INPUT           reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    INT             reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    CPARENT         reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    LLADER          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    CORDER          reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    DOSPUNTOS       reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    COMA            reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    ELSE            reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)
    ELIF            reduce using rule 122 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT .)


state 290

    (123) join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .

    AND             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    OR              reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    $end            reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MAS             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOS           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    POR             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    DIVIDIR         reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    POTENCIA        reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MODULO          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MENOR           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYOR           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MENORIGUAL      reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    MAYORIGUAL      reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    DOBLEIGUAL      reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    DIFERENTE       reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    IN              reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    VARIABLE        reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    NUMERO          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    FLOTANTE        reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    TRUE            reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    FALSE           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    APARENT         reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    LLAIZQ          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    CORIZQ          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    NOT             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLADOBLE reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    CADENACOMILLASIMPLE reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    DEF             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    RETURN          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    IF              reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    PRINT           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    LEN             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    INPUT           reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    SIMPLECOMILLA   reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    INT             reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    CPARENT         reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    LLADER          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    CORDER          reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    DOSPUNTOS       reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    COMA            reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    ELSE            reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)
    ELIF            reduce using rule 123 (join -> SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT .)


state 291

    (91) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 91 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 292

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion . CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion . CPARENT DOSPUNTOS codigo_interno
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    CPARENT         shift and go to state 295
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 293

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 296
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 294

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 297


state 295

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 298


state 296

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    DOSPUNTOS       shift and go to state 299
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 297

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 300
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 298

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 301
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 299

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 302
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 300

    (94) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 94 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 301

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (95) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    ELSE            shift and go to state 303
    AND             reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    OR              reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    $end            reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POR             reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]
  ! ELSE            [ reduce using rule 95 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 302

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    ELIF            shift and go to state 304
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 303

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 305


state 304

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF . expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    VARIABLE        shift and go to state 78
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    FLOTANTE        shift and go to state 4
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 306
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 305

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 307
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 306

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion . DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (23) expresion -> expresion . MAS expresion
    (24) expresion -> expresion . MENOS expresion
    (25) expresion -> expresion . POR expresion
    (26) expresion -> expresion . DIVIDIR expresion
    (27) expresion -> expresion . POTENCIA expresion
    (28) expresion -> expresion . MODULO expresion
    (51) expresion -> expresion . MENOR expresion
    (52) expresion -> expresion . MAYOR expresion
    (53) expresion -> expresion . MENORIGUAL expresion
    (54) expresion -> expresion . MAYORIGUAL expresion
    (55) expresion -> expresion . DOBLEIGUAL expresion
    (56) expresion -> expresion . DIFERENTE expresion
    (3) declaracion -> expresion .
    (118) in -> expresion . in declaracion
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    DOSPUNTOS       shift and go to state 308
    MAS             shift and go to state 63
    MENOS           shift and go to state 64
    POR             shift and go to state 65
    DIVIDIR         shift and go to state 66
    POTENCIA        shift and go to state 67
    MODULO          shift and go to state 68
    MENOR           shift and go to state 69
    MAYOR           shift and go to state 70
    MENORIGUAL      shift and go to state 71
    MAYORIGUAL      shift and go to state 72
    DOBLEIGUAL      shift and go to state 73
    DIFERENTE       shift and go to state 74
    AND             reduce using rule 3 (declaracion -> expresion .)
    OR              reduce using rule 3 (declaracion -> expresion .)
    IN              shift and go to state 36
    VARIABLE        shift and go to state 41
    NUMERO          shift and go to state 58
    FLOTANTE        shift and go to state 60
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 43
    in                             shift and go to state 75
    declaracion                    shift and go to state 44
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 307

    (93) if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 93 (if -> IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 308

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS . codigo_interno ELSE DOSPUNTOS codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 309
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 309

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno . ELSE DOSPUNTOS codigo_interno
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    ELSE            shift and go to state 310
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 310

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE . DOSPUNTOS codigo_interno

    DOSPUNTOS       shift and go to state 311


state 311

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS . codigo_interno
    (86) codigo_interno -> . declaracion
    (87) codigo_interno -> . codigo_interno declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

    expresion                      shift and go to state 3
    codigo_interno                 shift and go to state 312
    declaracion                    shift and go to state 195
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19

state 312

    (97) if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .
    (87) codigo_interno -> codigo_interno . declaracion
    (1) declaracion -> . VARIABLE ASIGNACION expresion
    (2) declaracion -> . VARIABLE ASIGNACION declaracion
    (3) declaracion -> . expresion
    (4) declaracion -> . VARIABLE
    (5) declaracion -> . FLOTANTE
    (6) declaracion -> . expr_funcion
    (7) declaracion -> . lista
    (8) declaracion -> . expr_def_funcion
    (9) declaracion -> . expr_return
    (10) declaracion -> . if
    (11) declaracion -> . expr_print
    (12) declaracion -> . append
    (13) declaracion -> . len
    (14) declaracion -> . input
    (15) declaracion -> . in
    (16) declaracion -> . is
    (17) declaracion -> . join
    (18) declaracion -> . int
    (19) declaracion -> . upper
    (20) declaracion -> . lower
    (21) expresion -> . TRUE
    (22) expresion -> . FALSE
    (23) expresion -> . expresion MAS expresion
    (24) expresion -> . expresion MENOS expresion
    (25) expresion -> . expresion POR expresion
    (26) expresion -> . expresion DIVIDIR expresion
    (27) expresion -> . expresion POTENCIA expresion
    (28) expresion -> . expresion MODULO expresion
    (29) expresion -> . VARIABLE MAS VARIABLE
    (30) expresion -> . VARIABLE MENOS VARIABLE
    (31) expresion -> . VARIABLE POR VARIABLE
    (32) expresion -> . VARIABLE DIVIDIR VARIABLE
    (33) expresion -> . VARIABLE POTENCIA VARIABLE
    (34) expresion -> . VARIABLE MODULO VARIABLE
    (35) expresion -> . MENOS expresion
    (36) expresion -> . APARENT expresion CPARENT
    (37) expresion -> . LLAIZQ expresion LLADER
    (38) expresion -> . CORIZQ expresion CORDER
    (39) expresion -> . VARIABLE MENOR expresion
    (40) expresion -> . VARIABLE MAYOR expresion
    (41) expresion -> . VARIABLE MENORIGUAL expresion
    (42) expresion -> . VARIABLE MAYORIGUAL expresion
    (43) expresion -> . VARIABLE DOBLEIGUAL expresion
    (44) expresion -> . VARIABLE DIFERENTE expresion
    (45) expresion -> . APARENT VARIABLE CPARENT MENOR APARENT expresion CPARENT
    (46) expresion -> . APARENT VARIABLE CPARENT MAYOR APARENT expresion CPARENT
    (47) expresion -> . APARENT VARIABLE CPARENT MENORIGUAL APARENT expresion CPARENT
    (48) expresion -> . APARENT VARIABLE CPARENT MAYORIGUAL APARENT expresion CPARENT
    (49) expresion -> . APARENT VARIABLE CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (50) expresion -> . APARENT VARIABLE CPARENT DIFERENTE APARENT expresion CPARENT
    (51) expresion -> . expresion MENOR expresion
    (52) expresion -> . expresion MAYOR expresion
    (53) expresion -> . expresion MENORIGUAL expresion
    (54) expresion -> . expresion MAYORIGUAL expresion
    (55) expresion -> . expresion DOBLEIGUAL expresion
    (56) expresion -> . expresion DIFERENTE expresion
    (57) expresion -> . APARENT expresion CPARENT MENOR APARENT expresion CPARENT
    (58) expresion -> . APARENT expresion CPARENT MAYOR APARENT expresion CPARENT
    (59) expresion -> . APARENT expresion CPARENT MENORIGUAL APARENT expresion CPARENT
    (60) expresion -> . APARENT expresion CPARENT MAYORIGUAL APARENT expresion CPARENT
    (61) expresion -> . APARENT expresion CPARENT DOBLEIGUAL APARENT expresion CPARENT
    (62) expresion -> . APARENT expresion CPARENT DIFERENTE APARENT expresion CPARENT
    (63) expresion -> . declaracion AND declaracion
    (64) expresion -> . declaracion OR declaracion
    (65) expresion -> . NOT declaracion
    (66) expresion -> . APARENT declaracion AND declaracion CPARENT
    (67) expresion -> . APARENT declaracion OR declaracion CPARENT
    (68) expresion -> . APARENT NOT declaracion CPARENT
    (69) expresion -> . NUMERO
    (70) expresion -> . CADENACOMILLADOBLE
    (71) expresion -> . CADENACOMILLASIMPLE
    (72) expr_funcion -> . VARIABLE APARENT params CPARENT
    (81) lista -> . VARIABLE ASIGNACION CORIZQ CORDER
    (82) lista -> . VARIABLE ASIGNACION CORIZQ NUMERO CORDER
    (83) lista -> . VARIABLE ASIGNACION CORIZQ VARIABLE CORDER
    (84) expr_def_funcion -> . DEF expr_funcion DOSPUNTOS
    (85) expr_return -> . RETURN variable
    (88) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (89) if -> . IF expresion DOSPUNTOS codigo_interno
    (90) if -> . IF expresion DOSPUNTOS
    (91) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (92) if -> . IF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (93) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (94) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (95) if -> . IF APARENT expresion CPARENT DOSPUNTOS codigo_interno ELIF APARENT expresion CPARENT DOSPUNTOS codigo_interno
    (96) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno
    (97) if -> . IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno
    (98) expr_print -> . PRINT APARENT VARIABLE CPARENT
    (99) expr_print -> . PRINT APARENT expresion CPARENT
    (100) expr_print -> . PRINT APARENT expresion MAS VARIABLE CPARENT
    (101) expr_print -> . PRINT APARENT expresion MAS NUMERO CPARENT
    (102) expr_print -> . PRINT APARENT expresion MAS FLOTANTE CPARENT
    (103) expr_print -> . PRINT APARENT expresion COMA expr_funcion CPARENT
    (104) expr_print -> . PRINT APARENT expresion COMA NUMERO CPARENT
    (105) expr_print -> . PRINT APARENT expresion COMA FLOTANTE CPARENT
    (106) expr_print -> . PRINT APARENT expresion COMA VARIABLE CPARENT
    (107) expr_print -> . PRINT APARENT expresion COMA expresion CPARENT
    (108) append -> . VARIABLE PUNTO APPEND APARENT VARIABLE CPARENT
    (109) append -> . VARIABLE PUNTO APPEND APARENT NUMERO CPARENT
    (110) append -> . VARIABLE PUNTO APPEND APARENT FLOTANTE CPARENT
    (112) len -> . LEN APARENT VARIABLE CPARENT
    (113) input -> . INPUT APARENT CADENACOMILLADOBLE CPARENT
    (114) input -> . INPUT APARENT CADENACOMILLASIMPLE CPARENT
    (111) in -> . IN
    (115) in -> . VARIABLE in declaracion
    (116) in -> . NUMERO in declaracion
    (117) in -> . FLOTANTE in declaracion
    (118) in -> . expresion in declaracion
    (119) is -> . VARIABLE IS NUMERO
    (120) is -> . VARIABLE IS FLOTANTE
    (121) is -> . VARIABLE IS declaracion
    (122) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT VARIABLE CPARENT
    (123) join -> . SIMPLECOMILLA VARIABLE SIMPLECOMILLA PUNTO JOIN APARENT CADENACOMILLASIMPLE CPARENT
    (124) int -> . INT APARENT expresion CPARENT
    (125) int -> . INT APARENT input CPARENT
    (126) upper -> . VARIABLE PUNTO UPPER APARENT CPARENT
    (127) lower -> . VARIABLE PUNTO LOWER APARENT CPARENT

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for APARENT resolved as shift
  ! shift/reduce conflict for LLAIZQ resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for CADENACOMILLADOBLE resolved as shift
  ! shift/reduce conflict for CADENACOMILLASIMPLE resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEN resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for SIMPLECOMILLA resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    AND             reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    OR              reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    $end            reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAS             reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POR             reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIVIDIR         reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    POTENCIA        reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MODULO          reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENOR           reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYOR           reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MENORIGUAL      reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    MAYORIGUAL      reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOBLEIGUAL      reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DIFERENTE       reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CPARENT         reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    LLADER          reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    CORDER          reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    DOSPUNTOS       reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    COMA            reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELSE            reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    ELIF            reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .)
    VARIABLE        shift and go to state 2
    FLOTANTE        shift and go to state 4
    TRUE            shift and go to state 20
    FALSE           shift and go to state 21
    MENOS           shift and go to state 22
    APARENT         shift and go to state 23
    LLAIZQ          shift and go to state 24
    CORIZQ          shift and go to state 25
    NOT             shift and go to state 26
    NUMERO          shift and go to state 27
    CADENACOMILLADOBLE shift and go to state 28
    CADENACOMILLASIMPLE shift and go to state 29
    DEF             shift and go to state 30
    RETURN          shift and go to state 31
    IF              shift and go to state 32
    PRINT           shift and go to state 33
    LEN             shift and go to state 34
    INPUT           shift and go to state 35
    IN              shift and go to state 36
    SIMPLECOMILLA   shift and go to state 37
    INT             shift and go to state 38

  ! MENOS           [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IN              [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! VARIABLE        [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NUMERO          [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FLOTANTE        [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! TRUE            [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! FALSE           [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! APARENT         [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LLAIZQ          [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CORIZQ          [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! NOT             [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLADOBLE [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! CADENACOMILLASIMPLE [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! DEF             [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! RETURN          [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! IF              [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! PRINT           [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! LEN             [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INPUT           [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! SIMPLECOMILLA   [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]
  ! INT             [ reduce using rule 97 (if -> IF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELIF expresion DOSPUNTOS codigo_interno ELSE DOSPUNTOS codigo_interno .) ]

    expresion                      shift and go to state 3
    declaracion                    shift and go to state 231
    expr_funcion                   shift and go to state 5
    lista                          shift and go to state 6
    expr_def_funcion               shift and go to state 7
    expr_return                    shift and go to state 8
    if                             shift and go to state 9
    expr_print                     shift and go to state 10
    append                         shift and go to state 11
    len                            shift and go to state 12
    input                          shift and go to state 13
    in                             shift and go to state 14
    is                             shift and go to state 15
    join                           shift and go to state 16
    int                            shift and go to state 17
    upper                          shift and go to state 18
    lower                          shift and go to state 19
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 2 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 2 resolved as shift
WARNING: shift/reduce conflict for POR in state 2 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 2 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 2 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 2 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 2 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 2 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 2 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 2 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 2 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 2 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 2 resolved as shift
WARNING: shift/reduce conflict for IN in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 2 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 2 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 2 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 2 resolved as shift
WARNING: shift/reduce conflict for NOT in state 2 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 2 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 2 resolved as shift
WARNING: shift/reduce conflict for DEF in state 2 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for LEN in state 2 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 2 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for MAS in state 3 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 3 resolved as shift
WARNING: shift/reduce conflict for POR in state 3 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 3 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 3 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 3 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 3 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 3 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 3 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 3 resolved as shift
WARNING: shift/reduce conflict for IN in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 3 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 3 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 3 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 3 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 3 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 3 resolved as shift
WARNING: shift/reduce conflict for NOT in state 3 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 3 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 3 resolved as shift
WARNING: shift/reduce conflict for DEF in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for LEN in state 3 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 3 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 3 resolved as shift
WARNING: shift/reduce conflict for INT in state 3 resolved as shift
WARNING: shift/reduce conflict for IN in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 4 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 4 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 4 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 4 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 4 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 4 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 4 resolved as shift
WARNING: shift/reduce conflict for NOT in state 4 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 4 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 4 resolved as shift
WARNING: shift/reduce conflict for DEF in state 4 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for LEN in state 4 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 4 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 4 resolved as shift
WARNING: shift/reduce conflict for INT in state 4 resolved as shift
WARNING: shift/reduce conflict for IN in state 27 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 27 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 27 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 27 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 27 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 27 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 27 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 27 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 27 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 27 resolved as shift
WARNING: shift/reduce conflict for NOT in state 27 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 27 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 27 resolved as shift
WARNING: shift/reduce conflict for DEF in state 27 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 27 resolved as shift
WARNING: shift/reduce conflict for LEN in state 27 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 27 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 27 resolved as shift
WARNING: shift/reduce conflict for INT in state 27 resolved as shift
WARNING: shift/reduce conflict for IN in state 58 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 58 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 58 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 58 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 58 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 58 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 58 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 58 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 58 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 58 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 58 resolved as shift
WARNING: shift/reduce conflict for DEF in state 58 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 58 resolved as shift
WARNING: shift/reduce conflict for IF in state 58 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 58 resolved as shift
WARNING: shift/reduce conflict for LEN in state 58 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 58 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 58 resolved as shift
WARNING: shift/reduce conflict for INT in state 58 resolved as shift
WARNING: shift/reduce conflict for MAS in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 78 resolved as shift
WARNING: shift/reduce conflict for POR in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 78 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 78 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 78 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 78 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 78 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 78 resolved as shift
WARNING: shift/reduce conflict for IN in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 78 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 78 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 78 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 78 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 78 resolved as shift
WARNING: shift/reduce conflict for NOT in state 78 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 78 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 78 resolved as shift
WARNING: shift/reduce conflict for DEF in state 78 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 78 resolved as shift
WARNING: shift/reduce conflict for IF in state 78 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 78 resolved as shift
WARNING: shift/reduce conflict for LEN in state 78 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 78 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 78 resolved as shift
WARNING: shift/reduce conflict for INT in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for OR in state 85 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 90 resolved as shift
WARNING: shift/reduce conflict for MAS in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 90 resolved as shift
WARNING: shift/reduce conflict for POR in state 90 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 90 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 90 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 90 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 90 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 90 resolved as shift
WARNING: shift/reduce conflict for IN in state 90 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 90 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 90 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 90 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 90 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 90 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 90 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 90 resolved as shift
WARNING: shift/reduce conflict for NOT in state 90 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 90 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 90 resolved as shift
WARNING: shift/reduce conflict for DEF in state 90 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 90 resolved as shift
WARNING: shift/reduce conflict for IF in state 90 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 90 resolved as shift
WARNING: shift/reduce conflict for LEN in state 90 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 90 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 90 resolved as shift
WARNING: shift/reduce conflict for INT in state 90 resolved as shift
WARNING: shift/reduce conflict for IN in state 91 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 91 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 91 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 91 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 91 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 91 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 91 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 91 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 91 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 91 resolved as shift
WARNING: shift/reduce conflict for NOT in state 91 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 91 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 91 resolved as shift
WARNING: shift/reduce conflict for DEF in state 91 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 91 resolved as shift
WARNING: shift/reduce conflict for LEN in state 91 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 91 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 91 resolved as shift
WARNING: shift/reduce conflict for INT in state 91 resolved as shift
WARNING: shift/reduce conflict for IN in state 92 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 92 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 92 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 92 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 92 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 92 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 92 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 92 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 92 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 92 resolved as shift
WARNING: shift/reduce conflict for NOT in state 92 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 92 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 92 resolved as shift
WARNING: shift/reduce conflict for DEF in state 92 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 92 resolved as shift
WARNING: shift/reduce conflict for IF in state 92 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 92 resolved as shift
WARNING: shift/reduce conflict for LEN in state 92 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 92 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 92 resolved as shift
WARNING: shift/reduce conflict for INT in state 92 resolved as shift
WARNING: shift/reduce conflict for MAS in state 94 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 94 resolved as shift
WARNING: shift/reduce conflict for POR in state 94 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 94 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 94 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 94 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 94 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 94 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 94 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 94 resolved as shift
WARNING: shift/reduce conflict for IN in state 94 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 94 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 94 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 94 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 94 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 94 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 94 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 94 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 94 resolved as shift
WARNING: shift/reduce conflict for NOT in state 94 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 94 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 94 resolved as shift
WARNING: shift/reduce conflict for DEF in state 94 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 94 resolved as shift
WARNING: shift/reduce conflict for IF in state 94 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 94 resolved as shift
WARNING: shift/reduce conflict for LEN in state 94 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 94 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 94 resolved as shift
WARNING: shift/reduce conflict for INT in state 94 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 104 resolved as shift
WARNING: shift/reduce conflict for OR in state 104 resolved as shift
WARNING: shift/reduce conflict for MAS in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 105 resolved as shift
WARNING: shift/reduce conflict for POR in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 105 resolved as shift
WARNING: shift/reduce conflict for MAS in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 109 resolved as shift
WARNING: shift/reduce conflict for POR in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 109 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 109 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 109 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 109 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 109 resolved as shift
WARNING: shift/reduce conflict for IN in state 109 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 109 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 109 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 109 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 109 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 109 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 109 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NOT in state 109 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 109 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 109 resolved as shift
WARNING: shift/reduce conflict for DEF in state 109 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 109 resolved as shift
WARNING: shift/reduce conflict for IF in state 109 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 109 resolved as shift
WARNING: shift/reduce conflict for LEN in state 109 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 109 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 109 resolved as shift
WARNING: shift/reduce conflict for INT in state 109 resolved as shift
WARNING: shift/reduce conflict for MAS in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 114 resolved as shift
WARNING: shift/reduce conflict for POR in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 114 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 114 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 114 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 114 resolved as shift
WARNING: shift/reduce conflict for IN in state 114 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 114 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 114 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 114 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 114 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 114 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 114 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 114 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 114 resolved as shift
WARNING: shift/reduce conflict for NOT in state 114 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 114 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 114 resolved as shift
WARNING: shift/reduce conflict for DEF in state 114 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 114 resolved as shift
WARNING: shift/reduce conflict for IF in state 114 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 114 resolved as shift
WARNING: shift/reduce conflict for LEN in state 114 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 114 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 114 resolved as shift
WARNING: shift/reduce conflict for INT in state 114 resolved as shift
WARNING: shift/reduce conflict for MAS in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 115 resolved as shift
WARNING: shift/reduce conflict for POR in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 115 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 115 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 115 resolved as shift
WARNING: shift/reduce conflict for IN in state 115 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 115 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 115 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 115 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 115 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 115 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 115 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 115 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 115 resolved as shift
WARNING: shift/reduce conflict for NOT in state 115 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 115 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 115 resolved as shift
WARNING: shift/reduce conflict for DEF in state 115 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 115 resolved as shift
WARNING: shift/reduce conflict for IF in state 115 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 115 resolved as shift
WARNING: shift/reduce conflict for LEN in state 115 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 115 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 115 resolved as shift
WARNING: shift/reduce conflict for INT in state 115 resolved as shift
WARNING: shift/reduce conflict for MAS in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 116 resolved as shift
WARNING: shift/reduce conflict for POR in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 116 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 116 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 116 resolved as shift
WARNING: shift/reduce conflict for IN in state 116 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 116 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 116 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 116 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 116 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 116 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 116 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 116 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 116 resolved as shift
WARNING: shift/reduce conflict for NOT in state 116 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 116 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 116 resolved as shift
WARNING: shift/reduce conflict for DEF in state 116 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 116 resolved as shift
WARNING: shift/reduce conflict for IF in state 116 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 116 resolved as shift
WARNING: shift/reduce conflict for LEN in state 116 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 116 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 116 resolved as shift
WARNING: shift/reduce conflict for INT in state 116 resolved as shift
WARNING: shift/reduce conflict for MAS in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 117 resolved as shift
WARNING: shift/reduce conflict for POR in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 117 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 117 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 117 resolved as shift
WARNING: shift/reduce conflict for IN in state 117 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 117 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 117 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 117 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 117 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 117 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 117 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 117 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NOT in state 117 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 117 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 117 resolved as shift
WARNING: shift/reduce conflict for DEF in state 117 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for LEN in state 117 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 117 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 117 resolved as shift
WARNING: shift/reduce conflict for INT in state 117 resolved as shift
WARNING: shift/reduce conflict for MAS in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 118 resolved as shift
WARNING: shift/reduce conflict for POR in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 118 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 118 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for IN in state 118 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 118 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 118 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 118 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 118 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 118 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 118 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 118 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 118 resolved as shift
WARNING: shift/reduce conflict for NOT in state 118 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 118 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 118 resolved as shift
WARNING: shift/reduce conflict for DEF in state 118 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 118 resolved as shift
WARNING: shift/reduce conflict for IF in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 118 resolved as shift
WARNING: shift/reduce conflict for LEN in state 118 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 118 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 118 resolved as shift
WARNING: shift/reduce conflict for INT in state 118 resolved as shift
WARNING: shift/reduce conflict for MAS in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 119 resolved as shift
WARNING: shift/reduce conflict for POR in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 119 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 119 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 119 resolved as shift
WARNING: shift/reduce conflict for IN in state 119 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 119 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 119 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 119 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 119 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 119 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 119 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 119 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NOT in state 119 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 119 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 119 resolved as shift
WARNING: shift/reduce conflict for DEF in state 119 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for LEN in state 119 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 119 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 119 resolved as shift
WARNING: shift/reduce conflict for INT in state 119 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 120 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 122 resolved as shift
WARNING: shift/reduce conflict for IN in state 124 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 124 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 124 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 124 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 124 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 124 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 124 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 124 resolved as shift
WARNING: shift/reduce conflict for NOT in state 124 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 124 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 124 resolved as shift
WARNING: shift/reduce conflict for DEF in state 124 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 124 resolved as shift
WARNING: shift/reduce conflict for LEN in state 124 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 124 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 124 resolved as shift
WARNING: shift/reduce conflict for INT in state 124 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for IN in state 132 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 132 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 132 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 132 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 132 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 132 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 132 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 132 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 132 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 132 resolved as shift
WARNING: shift/reduce conflict for NOT in state 132 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 132 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 132 resolved as shift
WARNING: shift/reduce conflict for DEF in state 132 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 132 resolved as shift
WARNING: shift/reduce conflict for LEN in state 132 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 132 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 132 resolved as shift
WARNING: shift/reduce conflict for INT in state 132 resolved as shift
WARNING: shift/reduce conflict for IN in state 133 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 133 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 133 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 133 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 133 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 133 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 133 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 133 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 133 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 133 resolved as shift
WARNING: shift/reduce conflict for NOT in state 133 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 133 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 133 resolved as shift
WARNING: shift/reduce conflict for DEF in state 133 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 133 resolved as shift
WARNING: shift/reduce conflict for LEN in state 133 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 133 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 133 resolved as shift
WARNING: shift/reduce conflict for INT in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for MAS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for POR in state 139 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 139 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 139 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 139 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 139 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 139 resolved as shift
WARNING: shift/reduce conflict for IN in state 139 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 139 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 139 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 139 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 139 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 139 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 139 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 139 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 139 resolved as shift
WARNING: shift/reduce conflict for NOT in state 139 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 139 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 139 resolved as shift
WARNING: shift/reduce conflict for DEF in state 139 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 139 resolved as shift
WARNING: shift/reduce conflict for LEN in state 139 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 139 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 139 resolved as shift
WARNING: shift/reduce conflict for INT in state 139 resolved as shift
WARNING: shift/reduce conflict for MAS in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 140 resolved as shift
WARNING: shift/reduce conflict for POR in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 140 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 140 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 140 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 140 resolved as shift
WARNING: shift/reduce conflict for IN in state 140 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 140 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 140 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 140 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 140 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 140 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 140 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 140 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 140 resolved as shift
WARNING: shift/reduce conflict for NOT in state 140 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 140 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 140 resolved as shift
WARNING: shift/reduce conflict for DEF in state 140 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 140 resolved as shift
WARNING: shift/reduce conflict for IF in state 140 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 140 resolved as shift
WARNING: shift/reduce conflict for LEN in state 140 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 140 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 140 resolved as shift
WARNING: shift/reduce conflict for INT in state 140 resolved as shift
WARNING: shift/reduce conflict for MAS in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 141 resolved as shift
WARNING: shift/reduce conflict for POR in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 141 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 141 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 141 resolved as shift
WARNING: shift/reduce conflict for IN in state 141 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 141 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 141 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 141 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 141 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 141 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 141 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 141 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 141 resolved as shift
WARNING: shift/reduce conflict for NOT in state 141 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 141 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 141 resolved as shift
WARNING: shift/reduce conflict for DEF in state 141 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 141 resolved as shift
WARNING: shift/reduce conflict for IF in state 141 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 141 resolved as shift
WARNING: shift/reduce conflict for LEN in state 141 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 141 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 141 resolved as shift
WARNING: shift/reduce conflict for INT in state 141 resolved as shift
WARNING: shift/reduce conflict for MAS in state 142 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 142 resolved as shift
WARNING: shift/reduce conflict for POR in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 142 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 142 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 142 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 142 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 142 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 142 resolved as shift
WARNING: shift/reduce conflict for IN in state 142 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 142 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 142 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 142 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 142 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 142 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 142 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 142 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 142 resolved as shift
WARNING: shift/reduce conflict for NOT in state 142 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 142 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 142 resolved as shift
WARNING: shift/reduce conflict for DEF in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 142 resolved as shift
WARNING: shift/reduce conflict for LEN in state 142 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 142 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 142 resolved as shift
WARNING: shift/reduce conflict for INT in state 142 resolved as shift
WARNING: shift/reduce conflict for MAS in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 143 resolved as shift
WARNING: shift/reduce conflict for POR in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 143 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 143 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 143 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 143 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 143 resolved as shift
WARNING: shift/reduce conflict for IN in state 143 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 143 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 143 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 143 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 143 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 143 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 143 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 143 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 143 resolved as shift
WARNING: shift/reduce conflict for NOT in state 143 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 143 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 143 resolved as shift
WARNING: shift/reduce conflict for DEF in state 143 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 143 resolved as shift
WARNING: shift/reduce conflict for IF in state 143 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 143 resolved as shift
WARNING: shift/reduce conflict for LEN in state 143 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 143 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 143 resolved as shift
WARNING: shift/reduce conflict for INT in state 143 resolved as shift
WARNING: shift/reduce conflict for MAS in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 144 resolved as shift
WARNING: shift/reduce conflict for POR in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 144 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 144 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 144 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 144 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 144 resolved as shift
WARNING: shift/reduce conflict for IN in state 144 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 144 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 144 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 144 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 144 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 144 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 144 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 144 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 144 resolved as shift
WARNING: shift/reduce conflict for NOT in state 144 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 144 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 144 resolved as shift
WARNING: shift/reduce conflict for DEF in state 144 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 144 resolved as shift
WARNING: shift/reduce conflict for IF in state 144 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 144 resolved as shift
WARNING: shift/reduce conflict for LEN in state 144 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 144 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 144 resolved as shift
WARNING: shift/reduce conflict for INT in state 144 resolved as shift
WARNING: shift/reduce conflict for MAS in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for POR in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 145 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 145 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 145 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 145 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 145 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 145 resolved as shift
WARNING: shift/reduce conflict for IN in state 145 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 145 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 145 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 145 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 145 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 145 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 145 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 145 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 145 resolved as shift
WARNING: shift/reduce conflict for NOT in state 145 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 145 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 145 resolved as shift
WARNING: shift/reduce conflict for DEF in state 145 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 145 resolved as shift
WARNING: shift/reduce conflict for LEN in state 145 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 145 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 145 resolved as shift
WARNING: shift/reduce conflict for INT in state 145 resolved as shift
WARNING: shift/reduce conflict for MAS in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 146 resolved as shift
WARNING: shift/reduce conflict for POR in state 146 resolved as shift
WARNING: shift/reduce conflict for DIVIDIR in state 146 resolved as shift
WARNING: shift/reduce conflict for POTENCIA in state 146 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 146 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 146 resolved as shift
WARNING: shift/reduce conflict for IN in state 146 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 146 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 146 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 146 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 146 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 146 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 146 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 146 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 146 resolved as shift
WARNING: shift/reduce conflict for NOT in state 146 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 146 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 146 resolved as shift
WARNING: shift/reduce conflict for DEF in state 146 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 146 resolved as shift
WARNING: shift/reduce conflict for IF in state 146 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 146 resolved as shift
WARNING: shift/reduce conflict for LEN in state 146 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 146 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 146 resolved as shift
WARNING: shift/reduce conflict for INT in state 146 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 149 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 149 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 149 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 156 resolved as shift
WARNING: shift/reduce conflict for OR in state 156 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 161 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 161 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 161 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 161 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 161 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 161 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 161 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 161 resolved as shift
WARNING: shift/reduce conflict for NOT in state 161 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 161 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 161 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 161 resolved as shift
WARNING: shift/reduce conflict for DEF in state 161 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 161 resolved as shift
WARNING: shift/reduce conflict for LEN in state 161 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 161 resolved as shift
WARNING: shift/reduce conflict for IN in state 161 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 161 resolved as shift
WARNING: shift/reduce conflict for INT in state 161 resolved as shift
WARNING: shift/reduce conflict for CORDER in state 172 resolved as shift
WARNING: shift/reduce conflict for IN in state 172 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 172 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 172 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 172 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 172 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 172 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 172 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 172 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 172 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 172 resolved as shift
WARNING: shift/reduce conflict for NOT in state 172 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 172 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 172 resolved as shift
WARNING: shift/reduce conflict for DEF in state 172 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 172 resolved as shift
WARNING: shift/reduce conflict for IF in state 172 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 172 resolved as shift
WARNING: shift/reduce conflict for LEN in state 172 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 172 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 172 resolved as shift
WARNING: shift/reduce conflict for INT in state 172 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 190 resolved as shift
WARNING: shift/reduce conflict for AND in state 190 resolved as shift
WARNING: shift/reduce conflict for OR in state 190 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 191 resolved as shift
WARNING: shift/reduce conflict for AND in state 191 resolved as shift
WARNING: shift/reduce conflict for OR in state 191 resolved as shift
WARNING: shift/reduce conflict for DOSPUNTOS in state 193 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 193 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 193 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 193 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 193 resolved as shift
WARNING: shift/reduce conflict for DOBLEIGUAL in state 193 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 193 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 194 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 194 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 194 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 194 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 194 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 194 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 194 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 194 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 194 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 194 resolved as shift
WARNING: shift/reduce conflict for NOT in state 194 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 194 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 194 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 194 resolved as shift
WARNING: shift/reduce conflict for DEF in state 194 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 194 resolved as shift
WARNING: shift/reduce conflict for IF in state 194 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 194 resolved as shift
WARNING: shift/reduce conflict for LEN in state 194 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 194 resolved as shift
WARNING: shift/reduce conflict for IN in state 194 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 194 resolved as shift
WARNING: shift/reduce conflict for INT in state 194 resolved as shift
WARNING: shift/reduce conflict for AND in state 195 resolved as shift
WARNING: shift/reduce conflict for OR in state 195 resolved as shift
WARNING: shift/reduce conflict for COMA in state 208 resolved as shift
WARNING: shift/reduce conflict for AND in state 231 resolved as shift
WARNING: shift/reduce conflict for OR in state 231 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 233 resolved as shift
WARNING: shift/reduce conflict for IN in state 233 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 233 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 233 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 233 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 233 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 233 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 233 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 233 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 233 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 233 resolved as shift
WARNING: shift/reduce conflict for NOT in state 233 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 233 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 233 resolved as shift
WARNING: shift/reduce conflict for DEF in state 233 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 233 resolved as shift
WARNING: shift/reduce conflict for IF in state 233 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 233 resolved as shift
WARNING: shift/reduce conflict for LEN in state 233 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 233 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 233 resolved as shift
WARNING: shift/reduce conflict for INT in state 233 resolved as shift
WARNING: shift/reduce conflict for CPARENT in state 237 resolved as shift
WARNING: shift/reduce conflict for IN in state 237 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 237 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 237 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 237 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 237 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 237 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 237 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 237 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 237 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 237 resolved as shift
WARNING: shift/reduce conflict for NOT in state 237 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 237 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 237 resolved as shift
WARNING: shift/reduce conflict for DEF in state 237 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 237 resolved as shift
WARNING: shift/reduce conflict for IF in state 237 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 237 resolved as shift
WARNING: shift/reduce conflict for LEN in state 237 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 237 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 237 resolved as shift
WARNING: shift/reduce conflict for INT in state 237 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 256 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 256 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 256 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 256 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 256 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 256 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 256 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 256 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 256 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 256 resolved as shift
WARNING: shift/reduce conflict for NOT in state 256 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 256 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 256 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 256 resolved as shift
WARNING: shift/reduce conflict for DEF in state 256 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 256 resolved as shift
WARNING: shift/reduce conflict for IF in state 256 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 256 resolved as shift
WARNING: shift/reduce conflict for LEN in state 256 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 256 resolved as shift
WARNING: shift/reduce conflict for IN in state 256 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 256 resolved as shift
WARNING: shift/reduce conflict for INT in state 256 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 282 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 282 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 282 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 282 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 282 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 282 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 282 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 282 resolved as shift
WARNING: shift/reduce conflict for NOT in state 282 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 282 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 282 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 282 resolved as shift
WARNING: shift/reduce conflict for DEF in state 282 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 282 resolved as shift
WARNING: shift/reduce conflict for IF in state 282 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 282 resolved as shift
WARNING: shift/reduce conflict for LEN in state 282 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 282 resolved as shift
WARNING: shift/reduce conflict for IN in state 282 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 282 resolved as shift
WARNING: shift/reduce conflict for INT in state 282 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 288 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 288 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 288 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 288 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 288 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 288 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 288 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 288 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 288 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 288 resolved as shift
WARNING: shift/reduce conflict for NOT in state 288 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 288 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 288 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 288 resolved as shift
WARNING: shift/reduce conflict for DEF in state 288 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 288 resolved as shift
WARNING: shift/reduce conflict for IF in state 288 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 288 resolved as shift
WARNING: shift/reduce conflict for LEN in state 288 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 288 resolved as shift
WARNING: shift/reduce conflict for IN in state 288 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 288 resolved as shift
WARNING: shift/reduce conflict for INT in state 288 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 291 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 291 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 291 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 291 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 291 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 291 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 291 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 291 resolved as shift
WARNING: shift/reduce conflict for NOT in state 291 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 291 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 291 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 291 resolved as shift
WARNING: shift/reduce conflict for DEF in state 291 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 291 resolved as shift
WARNING: shift/reduce conflict for IF in state 291 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 291 resolved as shift
WARNING: shift/reduce conflict for LEN in state 291 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 291 resolved as shift
WARNING: shift/reduce conflict for IN in state 291 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 291 resolved as shift
WARNING: shift/reduce conflict for INT in state 291 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 300 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 300 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 300 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 300 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 300 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 300 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 300 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 300 resolved as shift
WARNING: shift/reduce conflict for NOT in state 300 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 300 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 300 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 300 resolved as shift
WARNING: shift/reduce conflict for DEF in state 300 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 300 resolved as shift
WARNING: shift/reduce conflict for IF in state 300 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 300 resolved as shift
WARNING: shift/reduce conflict for LEN in state 300 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 300 resolved as shift
WARNING: shift/reduce conflict for IN in state 300 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 300 resolved as shift
WARNING: shift/reduce conflict for INT in state 300 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 301 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 301 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 301 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 301 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 301 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 301 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 301 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 301 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 301 resolved as shift
WARNING: shift/reduce conflict for NOT in state 301 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 301 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 301 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 301 resolved as shift
WARNING: shift/reduce conflict for DEF in state 301 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 301 resolved as shift
WARNING: shift/reduce conflict for IF in state 301 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 301 resolved as shift
WARNING: shift/reduce conflict for LEN in state 301 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 301 resolved as shift
WARNING: shift/reduce conflict for IN in state 301 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 301 resolved as shift
WARNING: shift/reduce conflict for INT in state 301 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 307 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 307 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 307 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 307 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 307 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 307 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 307 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 307 resolved as shift
WARNING: shift/reduce conflict for NOT in state 307 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 307 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 307 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 307 resolved as shift
WARNING: shift/reduce conflict for DEF in state 307 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 307 resolved as shift
WARNING: shift/reduce conflict for IF in state 307 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 307 resolved as shift
WARNING: shift/reduce conflict for LEN in state 307 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 307 resolved as shift
WARNING: shift/reduce conflict for IN in state 307 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 307 resolved as shift
WARNING: shift/reduce conflict for INT in state 307 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 312 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 312 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 312 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 312 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 312 resolved as shift
WARNING: shift/reduce conflict for APARENT in state 312 resolved as shift
WARNING: shift/reduce conflict for LLAIZQ in state 312 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 312 resolved as shift
WARNING: shift/reduce conflict for NOT in state 312 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 312 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLADOBLE in state 312 resolved as shift
WARNING: shift/reduce conflict for CADENACOMILLASIMPLE in state 312 resolved as shift
WARNING: shift/reduce conflict for DEF in state 312 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 312 resolved as shift
WARNING: shift/reduce conflict for IF in state 312 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 312 resolved as shift
WARNING: shift/reduce conflict for LEN in state 312 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 312 resolved as shift
WARNING: shift/reduce conflict for IN in state 312 resolved as shift
WARNING: shift/reduce conflict for SIMPLECOMILLA in state 312 resolved as shift
WARNING: shift/reduce conflict for INT in state 312 resolved as shift
WARNING: reduce/reduce conflict in state 77 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> MENOS expresion) in state 77
WARNING: reduce/reduce conflict in state 90 resolved using rule (declaracion -> VARIABLE)
WARNING: rejected rule (variable -> VARIABLE) in state 90
WARNING: reduce/reduce conflict in state 91 resolved using rule (expresion -> NUMERO)
WARNING: rejected rule (variable -> NUMERO) in state 91
WARNING: reduce/reduce conflict in state 92 resolved using rule (declaracion -> FLOTANTE)
WARNING: rejected rule (variable -> FLOTANTE) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (declaracion -> expr_funcion)
WARNING: rejected rule (variable -> expr_funcion) in state 93
WARNING: reduce/reduce conflict in state 94 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (variable -> expresion) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (declaracion -> lista)
WARNING: rejected rule (variable -> lista) in state 95
WARNING: reduce/reduce conflict in state 105 resolved using rule (declaracion -> VARIABLE ASIGNACION expresion)
WARNING: rejected rule (declaracion -> expresion) in state 105
WARNING: reduce/reduce conflict in state 109 resolved using rule (declaracion -> VARIABLE)
WARNING: rejected rule (expresion -> VARIABLE MENOS VARIABLE) in state 109
WARNING: reduce/reduce conflict in state 114 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE MENOR expresion) in state 114
WARNING: reduce/reduce conflict in state 115 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE MAYOR expresion) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE MENORIGUAL expresion) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE MAYORIGUAL expresion) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE DOBLEIGUAL expresion) in state 118
WARNING: reduce/reduce conflict in state 119 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> VARIABLE DIFERENTE expresion) in state 119
WARNING: reduce/reduce conflict in state 124 resolved using rule (expresion -> NUMERO)
WARNING: rejected rule (variable -> NUMERO) in state 124
WARNING: reduce/reduce conflict in state 132 resolved using rule (expresion -> NUMERO)
WARNING: rejected rule (is -> VARIABLE IS NUMERO) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (declaracion -> FLOTANTE)
WARNING: rejected rule (is -> VARIABLE IS FLOTANTE) in state 133
WARNING: reduce/reduce conflict in state 135 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAS expresion) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (expresion -> expresion MENOS expresion)
WARNING: rejected rule (expresion -> MENOS expresion) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENOS expresion) in state 136
WARNING: reduce/reduce conflict in state 137 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion POR expresion) in state 137
WARNING: reduce/reduce conflict in state 138 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DIVIDIR expresion) in state 138
WARNING: reduce/reduce conflict in state 139 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion POTENCIA expresion) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MODULO expresion) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENOR expresion) in state 141
WARNING: reduce/reduce conflict in state 142 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAYOR expresion) in state 142
WARNING: reduce/reduce conflict in state 143 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MENORIGUAL expresion) in state 143
WARNING: reduce/reduce conflict in state 144 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion MAYORIGUAL expresion) in state 144
WARNING: reduce/reduce conflict in state 145 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DOBLEIGUAL expresion) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (declaracion -> expresion)
WARNING: rejected rule (expresion -> expresion DIFERENTE expresion) in state 146
WARNING: Rule (variable -> NUMERO) is never reduced
WARNING: Rule (is -> VARIABLE IS NUMERO) is never reduced
WARNING: Rule (is -> VARIABLE IS FLOTANTE) is never reduced
